
C:/Users/cgx19/cpen391/CPEN391_2A/1.7/GraphicsTest.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
       0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      20:	40 00 00 00 40 38 00 00 44 38 00 00 48 38 00 00     @...@8..D8..H8..
      30:	4c 38 00 00 3c 38 00 00 50 38 00 00 54 38 00 00     L8..<8..P8..T8..

00000040 <__cs3_reset>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_start_c+0x94>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_start_c+0x90>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_start_c+0x98>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_start_c+0x60>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_start_c+0x60>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_start_c+0x48>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_start_c+0x80>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_start_c+0x70>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_start_c+0x20>
      d4:	eb000c3b 	bl	31c8 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	00003978 	.word	0x00003978

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <__cs3_region_zero_size_ram+0x18>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_region_zero_size_ram+0x1c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_region_zero_size_ram+0x20>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffffc 	.word	0x3ffffffc
     120:	000041c0 	.word	0x000041c0

00000124 <__cs3_heap_start_ptr>:
     124:	000042c8 	.word	0x000042c8

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffffc 	.word	0x3ffffffc

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	000041c8 	.word	0x000041c8
     170:	000041cb 	.word	0x000041cb
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
     1b8:	000041c8 	.word	0x000041c8
     1bc:	000041c8 	.word	0x000041c8
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	000041c8 	.word	0x000041c8
     200:	00000000 	.word	0x00000000
     204:	000038f0 	.word	0x000038f0

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	000038f0 	.word	0x000038f0
     250:	000041cc 	.word	0x000041cc
     254:	00003978 	.word	0x00003978
     258:	00000000 	.word	0x00000000

0000025c <WriteAPixel>:
* This function writes a single pixel to the x,y coords specified using the specified colour
* Note colour is a byte and represents a palette number (0-255) not a 24 bit RGB value
********************************************************************************************/
void WriteAPixel(int x, int y, int Colour)
{
	WAIT_FOR_GRAPHICS;				// is graphics ready for new command
     25c:	e3a0c000 	mov	r12, #0
     260:	e34fcf21 	movt	r12, #65313	; 0xff21
     264:	e1dc30b0 	ldrh	r3, [r12]
     268:	e3130001 	tst	r3, #1
     26c:	0afffffc 	beq	264 <WriteAPixel+0x8>

	GraphicsX1Reg = x;				// write coords to x1, y1
     270:	e6ff0070 	uxth	r0, r0
     274:	e3a03000 	mov	r3, #0
     278:	e34f3f21 	movt	r3, #65313	; 0xff21
     27c:	e1c300b2 	strh	r0, [r3, #2]
	GraphicsY1Reg = y;
     280:	e6ff1071 	uxth	r1, r1
     284:	e1c310b4 	strh	r1, [r3, #4]
	GraphicsColourReg = Colour;			// set pixel colour
     288:	e6ff2072 	uxth	r2, r2
     28c:	e1c320be 	strh	r2, [r3, #14]
	GraphicsCommandReg = PutAPixel;			// give graphics "write pixel" command
     290:	e3a0200a 	mov	r2, #10
     294:	e1c320b0 	strh	r2, [r3]
     298:	e12fff1e 	bx	lr

0000029c <ReadAPixel>:
* Note returned colour is a byte and represents a palette number (0-255) not a 24 bit RGB value
*********************************************************************************************/

int ReadAPixel(int x, int y)
{
	WAIT_FOR_GRAPHICS;			// is graphics ready for new command
     29c:	e3a02000 	mov	r2, #0
     2a0:	e34f2f21 	movt	r2, #65313	; 0xff21
     2a4:	e1d230b0 	ldrh	r3, [r2]
     2a8:	e3130001 	tst	r3, #1
     2ac:	0afffffc 	beq	2a4 <ReadAPixel+0x8>

	GraphicsX1Reg = x;			// write coords to x1, y1
     2b0:	e6ff0070 	uxth	r0, r0
     2b4:	e3a03000 	mov	r3, #0
     2b8:	e34f3f21 	movt	r3, #65313	; 0xff21
     2bc:	e1c300b2 	strh	r0, [r3, #2]
	GraphicsY1Reg = y;
     2c0:	e6ff1071 	uxth	r1, r1
     2c4:	e1c310b4 	strh	r1, [r3, #4]
	GraphicsCommandReg = GetAPixel;		// give graphics a "get pixel" command
     2c8:	e3a0200b 	mov	r2, #11
     2cc:	e1c320b0 	strh	r2, [r3]

	WAIT_FOR_GRAPHICS;			// is graphics done reading pixel
     2d0:	e3a02000 	mov	r2, #0
     2d4:	e34f2f21 	movt	r2, #65313	; 0xff21
     2d8:	e1d230b0 	ldrh	r3, [r2]
     2dc:	e3130001 	tst	r3, #1
     2e0:	0afffffc 	beq	2d8 <ReadAPixel+0x3c>
	return (int)(GraphicsColourReg) ;	// return the palette number (colour)
     2e4:	e3a03000 	mov	r3, #0
     2e8:	e34f3f21 	movt	r3, #65313	; 0xff21
     2ec:	e1d300be 	ldrh	r0, [r3, #14]
}
     2f0:	e12fff1e 	bx	lr

000002f4 <ProgramPalette>:
**
************************************************************************************/

void ProgramPalette(int PaletteNumber, int RGB)
{
    WAIT_FOR_GRAPHICS;
     2f4:	e3a02000 	mov	r2, #0
     2f8:	e34f2f21 	movt	r2, #65313	; 0xff21
     2fc:	e1d230b0 	ldrh	r3, [r2]
     300:	e3130001 	tst	r3, #1
     304:	0afffffc 	beq	2fc <ProgramPalette+0x8>
    GraphicsColourReg = PaletteNumber;
     308:	e6ff0070 	uxth	r0, r0
     30c:	e3a03000 	mov	r3, #0
     310:	e34f3f21 	movt	r3, #65313	; 0xff21
     314:	e1c300be 	strh	r0, [r3, #14]
    GraphicsX1Reg = RGB >> 16   ;        // program red value in ls.8 bit of X1 reg
     318:	e1a02821 	lsr	r2, r1, #16
     31c:	e1c320b2 	strh	r2, [r3, #2]
    GraphicsY1Reg = RGB ;                // program green and blue into ls 16 bit of Y1 reg
     320:	e6ff1071 	uxth	r1, r1
     324:	e1c310b4 	strh	r1, [r3, #4]
    GraphicsCommandReg = ProgramPaletteColour; // issue command
     328:	e3a02010 	mov	r2, #16
     32c:	e1c320b0 	strh	r2, [r3]
     330:	e12fff1e 	bx	lr

00000334 <HLine>:

/********************************************************************************************* This function draw a horizontal line, 1 pixel at a time starting at the x,y coords specified
*********************************************************************************************/

void HLine(int x1, int y1, int length, int Colour)
{
     334:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     338:	e1a06001 	mov	r6, r1
     33c:	e1a07003 	mov	r7, r3
	int i;

	for(i = x1; i < x1+length; i++ )
     340:	e0805002 	add	r5, r0, r2
     344:	e1500005 	cmp	r0, r5
     348:	a8bd80f8 	popge	{r3, r4, r5, r6, r7, pc}
     34c:	e1a04000 	mov	r4, r0
		WriteAPixel(i, y1, Colour);
     350:	e1a00004 	mov	r0, r4
     354:	e1a01006 	mov	r1, r6
     358:	e1a02007 	mov	r2, r7
     35c:	ebffffbe 	bl	25c <WriteAPixel>

void HLine(int x1, int y1, int length, int Colour)
{
	int i;

	for(i = x1; i < x1+length; i++ )
     360:	e2844001 	add	r4, r4, #1
     364:	e1540005 	cmp	r4, r5
     368:	bafffff8 	blt	350 <HLine+0x1c>
     36c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}

00000370 <VLine>:

/********************************************************************************************* This function draw a vertical line, 1 pixel at a time starting at the x,y coords specified
*********************************************************************************************/

void VLine(int x1, int y1, int length, int Colour)
{
     370:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     374:	e1a06000 	mov	r6, r0
     378:	e1a07003 	mov	r7, r3
	int i;

	for(i = y1; i < y1+length; i++ )
     37c:	e0815002 	add	r5, r1, r2
     380:	e1510005 	cmp	r1, r5
     384:	a8bd80f8 	popge	{r3, r4, r5, r6, r7, pc}
     388:	e1a04001 	mov	r4, r1
		WriteAPixel(x1, i, Colour);
     38c:	e1a00006 	mov	r0, r6
     390:	e1a01004 	mov	r1, r4
     394:	e1a02007 	mov	r2, r7
     398:	ebffffaf 	bl	25c <WriteAPixel>

void VLine(int x1, int y1, int length, int Colour)
{
	int i;

	for(i = y1; i < y1+length; i++ )
     39c:	e2844001 	add	r4, r4, #1
     3a0:	e1540005 	cmp	r4, r5
     3a4:	bafffff8 	blt	38c <VLine+0x1c>
     3a8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}

000003ac <abs>:
{
    if(a < 0)
        return -a ;
    else
        return a ;
}
     3ac:	e3500000 	cmp	r0, #0
     3b0:	b2600000 	rsblt	r0, r0, #0
     3b4:	e12fff1e 	bx	lr

000003b8 <sign>:

int sign(int a)
{
    if(a < 0)
     3b8:	e3500000 	cmp	r0, #0
     3bc:	ba000002 	blt	3cc <sign+0x14>
        return -1 ;
    else if (a == 0)
     3c0:	e2900000 	adds	r0, r0, #0
     3c4:	13a00001 	movne	r0, #1
     3c8:	e12fff1e 	bx	lr
}

int sign(int a)
{
    if(a < 0)
        return -1 ;
     3cc:	e3e00000 	mvn	r0, #0
    else if (a == 0)
        return 0 ;
    else
        return 1 ;
}
     3d0:	e12fff1e 	bx	lr

000003d4 <Line>:



void Line(int x1, int y1, int x2, int y2, int Colour)
{
     3d4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     3d8:	e24dd00c 	sub	sp, sp, #12
     3dc:	e1a08000 	mov	r8, r0
     3e0:	e1a06001 	mov	r6, r1
    int x = x1;
    int y = y1;
    int dx = abs(x2 - x1);
     3e4:	e0600002 	rsb	r0, r0, r2
     3e8:	e0201fc0 	eor	r1, r0, r0, asr #31
     3ec:	e0411fc0 	sub	r1, r1, r0, asr #31
     3f0:	e58d1000 	str	r1, [sp]
    int dy = abs(y2 - y1);
     3f4:	e0665003 	rsb	r5, r6, r3
     3f8:	e0254fc5 	eor	r4, r5, r5, asr #31
     3fc:	e0444fc5 	sub	r4, r4, r5, asr #31

    int s1 = sign(x2 - x1);
     400:	ebffffec 	bl	3b8 <sign>
     404:	e1a09000 	mov	r9, r0
    int s2 = sign(y2 - y1);
     408:	e1a00005 	mov	r0, r5
     40c:	ebffffe9 	bl	3b8 <sign>
     410:	e1a0a000 	mov	r10, r0
    int i, temp, interchange = 0, error ;

// if x1=x2 and y1=y2 then it is a line of zero length so we are done

    if(dx == 0 && dy == 0)
     414:	e59d2000 	ldr	r2, [sp]
     418:	e1942002 	orrs	r2, r4, r2
     41c:	0a000022 	beq	4ac <Line+0xd8>
 // must be a complex line so use Bresenhams algorithm
    else    {

// swap delta x and delta y depending upon slop of line

        if(dy > dx) {
     420:	e59d3000 	ldr	r3, [sp]
     424:	e1530004 	cmp	r3, r4
    int dx = abs(x2 - x1);
    int dy = abs(y2 - y1);

    int s1 = sign(x2 - x1);
    int s2 = sign(y2 - y1);
    int i, temp, interchange = 0, error ;
     428:	a3a07000 	movge	r7, #0
 // must be a complex line so use Bresenhams algorithm
    else    {

// swap delta x and delta y depending upon slop of line

        if(dy > dx) {
     42c:	b59d3000 	ldrlt	r3, [sp]
            temp = dx ;
            dx = dy ;
     430:	b58d4000 	strlt	r4, [sp]
            dy = temp ;
     434:	b1a04003 	movlt	r4, r3
            interchange = 1 ;
     438:	b3a07001 	movlt	r7, #1
        }

// initialise the error term to compensate for non-zero intercept

        error = (dy << 1) - dx ;    // error = (2 * dy) - dx
     43c:	e1a04084 	lsl	r4, r4, #1
     440:	e58d4004 	str	r4, [sp, #4]
     444:	e59d1000 	ldr	r1, [sp]
     448:	e0614004 	rsb	r4, r1, r4

// main loop
        for(i = 1; i <= dx; i++)    {
     44c:	e3510000 	cmp	r1, #0
     450:	da000015 	ble	4ac <Line+0xd8>
                if(interchange == 1)
                    x += s1 ;
                else
                    y += s2 ;

                error -= (dx << 1) ;    // error = error - (dx * 2)
     454:	e1a05081 	lsl	r5, r1, #1
// initialise the error term to compensate for non-zero intercept

        error = (dy << 1) - dx ;    // error = (2 * dy) - dx

// main loop
        for(i = 1; i <= dx; i++)    {
     458:	e3a0b001 	mov	r11, #1
            WriteAPixel(x, y, Colour);
     45c:	e1a00008 	mov	r0, r8
     460:	e1a01006 	mov	r1, r6
     464:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
     468:	ebffff7b 	bl	25c <WriteAPixel>

            while(error >= 0)   {
     46c:	e3540000 	cmp	r4, #0
     470:	ba000004 	blt	488 <Line+0xb4>
                if(interchange == 1)
     474:	e3570001 	cmp	r7, #1
                    x += s1 ;
     478:	00888009 	addeq	r8, r8, r9
                else
                    y += s2 ;
     47c:	1086600a 	addne	r6, r6, r10

// main loop
        for(i = 1; i <= dx; i++)    {
            WriteAPixel(x, y, Colour);

            while(error >= 0)   {
     480:	e0544005 	subs	r4, r4, r5
     484:	5afffffa 	bpl	474 <Line+0xa0>
                    y += s2 ;

                error -= (dx << 1) ;    // error = error - (dx * 2)
            }

            if(interchange == 1)
     488:	e3570001 	cmp	r7, #1
                y += s2 ;
     48c:	0086600a 	addeq	r6, r6, r10
            else
                x += s1 ;
     490:	10888009 	addne	r8, r8, r9

            error += (dy << 1) ;    // error = error + (dy * 2)
     494:	e59d2004 	ldr	r2, [sp, #4]
     498:	e0844002 	add	r4, r4, r2
// initialise the error term to compensate for non-zero intercept

        error = (dy << 1) - dx ;    // error = (2 * dy) - dx

// main loop
        for(i = 1; i <= dx; i++)    {
     49c:	e28bb001 	add	r11, r11, #1
     4a0:	e59d3000 	ldr	r3, [sp]
     4a4:	e153000b 	cmp	r3, r11
     4a8:	aaffffeb 	bge	45c <Line+0x88>

            error += (dy << 1) ;    // error = error + (dy * 2)

        }
    }
}
     4ac:	e28dd00c 	add	sp, sp, #12
     4b0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

000004b4 <main>:

int main(void)
{
     4b4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    int i;
    printf("Starting...\n");
     4b8:	e30308f4 	movw	r0, #14580	; 0x38f4
     4bc:	e3400000 	movt	r0, #0
     4c0:	eb000050 	bl	608 <puts>

    for(i= 0; i < 100; i ++)    {
     4c4:	e3a04000 	mov	r4, #0
        printf("Writing...\n");
     4c8:	e3035900 	movw	r5, #14592	; 0x3900
     4cc:	e3405000 	movt	r5, #0

        WriteAPixel(i,10, RED) ;
     4d0:	e3a0700a 	mov	r7, #10
     4d4:	e3a06002 	mov	r6, #2
{
    int i;
    printf("Starting...\n");

    for(i= 0; i < 100; i ++)    {
        printf("Writing...\n");
     4d8:	e1a00005 	mov	r0, r5
     4dc:	eb000049 	bl	608 <puts>

        WriteAPixel(i,10, RED) ;
     4e0:	e1a00004 	mov	r0, r4
     4e4:	e1a01007 	mov	r1, r7
     4e8:	e1a02006 	mov	r2, r6
     4ec:	ebffff5a 	bl	25c <WriteAPixel>
int main(void)
{
    int i;
    printf("Starting...\n");

    for(i= 0; i < 100; i ++)    {
     4f0:	e2844001 	add	r4, r4, #1
     4f4:	e3540064 	cmp	r4, #100	; 0x64
     4f8:	1afffff6 	bne	4d8 <main+0x24>
        printf("Writing...\n");

        WriteAPixel(i,10, RED) ;
    }
    printf("Done...\n");
     4fc:	e303090c 	movw	r0, #14604	; 0x390c
     500:	e3400000 	movt	r0, #0
     504:	eb00003f 	bl	608 <puts>
    return 0 ;
     508:	e3a00000 	mov	r0, #0
     50c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}

00000510 <atexit>:
     510:	e1a01000 	mov	r1, r0
     514:	e3a00000 	mov	r0, #0
     518:	e92d4008 	push	{r3, lr}
     51c:	e1a02000 	mov	r2, r0
     520:	e1a03000 	mov	r3, r0
     524:	eb000054 	bl	67c <__register_exitproc>
     528:	e8bd4008 	pop	{r3, lr}
     52c:	e12fff1e 	bx	lr

00000530 <exit>:
     530:	e92d4008 	push	{r3, lr}
     534:	e3a01000 	mov	r1, #0
     538:	e1a04000 	mov	r4, r0
     53c:	eb00008b 	bl	770 <__call_exitprocs>
     540:	e59f3018 	ldr	r3, [pc, #24]	; 560 <exit+0x30>
     544:	e5930000 	ldr	r0, [r3]
     548:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
     54c:	e3530000 	cmp	r3, #0
     550:	11a0e00f 	movne	lr, pc
     554:	112fff13 	bxne	r3
     558:	e1a00004 	mov	r0, r4
     55c:	eb000b4a 	bl	328c <_exit>
     560:	00003914 	.word	0x00003914

00000564 <_puts_r>:
     564:	e92d4030 	push	{r4, r5, lr}
     568:	e1a05000 	mov	r5, r0
     56c:	e24dd024 	sub	sp, sp, #36	; 0x24
     570:	e1a00001 	mov	r0, r1
     574:	e1a04001 	mov	r4, r1
     578:	eb000027 	bl	61c <strlen>
     57c:	e59f307c 	ldr	r3, [pc, #124]	; 600 <_puts_r+0x9c>
     580:	e5933000 	ldr	r3, [r3]
     584:	e1a02000 	mov	r2, r0
     588:	e5933008 	ldr	r3, [r3, #8]
     58c:	e58d2014 	str	r2, [sp, #20]
     590:	e59f206c 	ldr	r2, [pc, #108]	; 604 <_puts_r+0xa0>
     594:	e1d310bc 	ldrh	r1, [r3, #12]
     598:	e58d2018 	str	r2, [sp, #24]
     59c:	e3a02001 	mov	r2, #1
     5a0:	e58d201c 	str	r2, [sp, #28]
     5a4:	e28d2010 	add	r2, sp, #16
     5a8:	e3110a02 	tst	r1, #8192	; 0x2000
     5ac:	e58d2004 	str	r2, [sp, #4]
     5b0:	e3a02002 	mov	r2, #2
     5b4:	e58d2008 	str	r2, [sp, #8]
     5b8:	05932064 	ldreq	r2, [r3, #100]	; 0x64
     5bc:	03811a02 	orreq	r1, r1, #8192	; 0x2000
     5c0:	03c22a02 	biceq	r2, r2, #8192	; 0x2000
     5c4:	e2800001 	add	r0, r0, #1
     5c8:	01c310bc 	strheq	r1, [r3, #12]
     5cc:	05832064 	streq	r2, [r3, #100]	; 0x64
     5d0:	e58d000c 	str	r0, [sp, #12]
     5d4:	e5951008 	ldr	r1, [r5, #8]
     5d8:	e1a00005 	mov	r0, r5
     5dc:	e28d2004 	add	r2, sp, #4
     5e0:	e58d4010 	str	r4, [sp, #16]
     5e4:	eb0000da 	bl	954 <__sfvwrite_r>
     5e8:	e3500000 	cmp	r0, #0
     5ec:	03a0000a 	moveq	r0, #10
     5f0:	13e00000 	mvnne	r0, #0
     5f4:	e28dd024 	add	sp, sp, #36	; 0x24
     5f8:	e8bd4030 	pop	{r4, r5, lr}
     5fc:	e12fff1e 	bx	lr
     600:	00003980 	.word	0x00003980
     604:	0000391c 	.word	0x0000391c

00000608 <puts>:
     608:	e59f3008 	ldr	r3, [pc, #8]	; 618 <puts+0x10>
     60c:	e1a01000 	mov	r1, r0
     610:	e5930000 	ldr	r0, [r3]
     614:	eaffffd2 	b	564 <_puts_r>
     618:	00003980 	.word	0x00003980

0000061c <strlen>:
     61c:	e3c01003 	bic	r1, r0, #3
     620:	e2100003 	ands	r0, r0, #3
     624:	e2600000 	rsb	r0, r0, #0
     628:	e4913004 	ldr	r3, [r1], #4
     62c:	e280c004 	add	r12, r0, #4
     630:	e1a0c18c 	lsl	r12, r12, #3
     634:	e3e02000 	mvn	r2, #0
     638:	11833c32 	orrne	r3, r3, r2, lsr r12
     63c:	e3a0c001 	mov	r12, #1
     640:	e18cc40c 	orr	r12, r12, r12, lsl #8
     644:	e18cc80c 	orr	r12, r12, r12, lsl #16
     648:	e043200c 	sub	r2, r3, r12
     64c:	e1c22003 	bic	r2, r2, r3
     650:	e012238c 	ands	r2, r2, r12, lsl #7
     654:	04913004 	ldreq	r3, [r1], #4
     658:	02800004 	addeq	r0, r0, #4
     65c:	0afffff9 	beq	648 <strlen+0x2c>
     660:	e31300ff 	tst	r3, #255	; 0xff
     664:	12800001 	addne	r0, r0, #1
     668:	13130cff 	tstne	r3, #65280	; 0xff00
     66c:	12800001 	addne	r0, r0, #1
     670:	131308ff 	tstne	r3, #16711680	; 0xff0000
     674:	12800001 	addne	r0, r0, #1
     678:	e12fff1e 	bx	lr

0000067c <__register_exitproc>:
     67c:	e59fc0e4 	ldr	r12, [pc, #228]	; 768 <__register_exitproc+0xec>
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e59c4000 	ldr	r4, [r12]
     688:	e594c148 	ldr	r12, [r4, #328]	; 0x148
     68c:	e35c0000 	cmp	r12, #0
     690:	0284cf53 	addeq	r12, r4, #332	; 0x14c
     694:	e59c5004 	ldr	r5, [r12, #4]
     698:	0584c148 	streq	r12, [r4, #328]	; 0x148
     69c:	e355001f 	cmp	r5, #31
     6a0:	e24dd010 	sub	sp, sp, #16
     6a4:	e1a06000 	mov	r6, r0
     6a8:	da000015 	ble	704 <__register_exitproc+0x88>
     6ac:	e59f00b8 	ldr	r0, [pc, #184]	; 76c <__register_exitproc+0xf0>
     6b0:	e3500000 	cmp	r0, #0
     6b4:	1a000001 	bne	6c0 <__register_exitproc+0x44>
     6b8:	e3e00000 	mvn	r0, #0
     6bc:	ea000018 	b	724 <__register_exitproc+0xa8>
     6c0:	e3a00e19 	mov	r0, #400	; 0x190
     6c4:	e58d100c 	str	r1, [sp, #12]
     6c8:	e58d2008 	str	r2, [sp, #8]
     6cc:	e58d3004 	str	r3, [sp, #4]
     6d0:	e320f000 	nop	{0}
     6d4:	e250c000 	subs	r12, r0, #0
     6d8:	e59d100c 	ldr	r1, [sp, #12]
     6dc:	e59d2008 	ldr	r2, [sp, #8]
     6e0:	e59d3004 	ldr	r3, [sp, #4]
     6e4:	0afffff3 	beq	6b8 <__register_exitproc+0x3c>
     6e8:	e5945148 	ldr	r5, [r4, #328]	; 0x148
     6ec:	e3a00000 	mov	r0, #0
     6f0:	e58c0004 	str	r0, [r12, #4]
     6f4:	e58c5000 	str	r5, [r12]
     6f8:	e584c148 	str	r12, [r4, #328]	; 0x148
     6fc:	e58c0188 	str	r0, [r12, #392]	; 0x188
     700:	e58c018c 	str	r0, [r12, #396]	; 0x18c
     704:	e3560000 	cmp	r6, #0
     708:	e59c4004 	ldr	r4, [r12, #4]
     70c:	1a000007 	bne	730 <__register_exitproc+0xb4>
     710:	e2843002 	add	r3, r4, #2
     714:	e2844001 	add	r4, r4, #1
     718:	e78c1103 	str	r1, [r12, r3, lsl #2]
     71c:	e58c4004 	str	r4, [r12, #4]
     720:	e3a00000 	mov	r0, #0
     724:	e28dd010 	add	sp, sp, #16
     728:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
     72c:	e12fff1e 	bx	lr
     730:	e3a00001 	mov	r0, #1
     734:	e1a00410 	lsl	r0, r0, r4
     738:	e08c8104 	add	r8, r12, r4, lsl #2
     73c:	e3560002 	cmp	r6, #2
     740:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
     744:	e5883108 	str	r3, [r8, #264]	; 0x108
     748:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
     74c:	e1877000 	orr	r7, r7, r0
     750:	01830000 	orreq	r0, r3, r0
     754:	e1a05008 	mov	r5, r8
     758:	e5882088 	str	r2, [r8, #136]	; 0x88
     75c:	e58c7188 	str	r7, [r12, #392]	; 0x188
     760:	058c018c 	streq	r0, [r12, #396]	; 0x18c
     764:	eaffffe9 	b	710 <__register_exitproc+0x94>
     768:	00003914 	.word	0x00003914
     76c:	00000000 	.word	0x00000000

00000770 <__call_exitprocs>:
     770:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     774:	e59f3168 	ldr	r3, [pc, #360]	; 8e4 <__call_exitprocs+0x174>
     778:	e5933000 	ldr	r3, [r3]
     77c:	e24dd014 	sub	sp, sp, #20
     780:	e58d3004 	str	r3, [sp, #4]
     784:	e2833f52 	add	r3, r3, #328	; 0x148
     788:	e58d0008 	str	r0, [sp, #8]
     78c:	e58d300c 	str	r3, [sp, #12]
     790:	e1a07001 	mov	r7, r1
     794:	e3a08001 	mov	r8, #1
     798:	e59d3004 	ldr	r3, [sp, #4]
     79c:	e5936148 	ldr	r6, [r3, #328]	; 0x148
     7a0:	e3560000 	cmp	r6, #0
     7a4:	e59db00c 	ldr	r11, [sp, #12]
     7a8:	0a000033 	beq	87c <__call_exitprocs+0x10c>
     7ac:	e5965004 	ldr	r5, [r6, #4]
     7b0:	e2554001 	subs	r4, r5, #1
     7b4:	5286a088 	addpl	r10, r6, #136	; 0x88
     7b8:	5285501f 	addpl	r5, r5, #31
     7bc:	508a5105 	addpl	r5, r10, r5, lsl #2
     7c0:	5a000007 	bpl	7e4 <__call_exitprocs+0x74>
     7c4:	ea000029 	b	870 <__call_exitprocs+0x100>
     7c8:	e5953000 	ldr	r3, [r5]
     7cc:	e1530007 	cmp	r3, r7
     7d0:	0a000005 	beq	7ec <__call_exitprocs+0x7c>
     7d4:	e2444001 	sub	r4, r4, #1
     7d8:	e3740001 	cmn	r4, #1
     7dc:	e2455004 	sub	r5, r5, #4
     7e0:	0a000022 	beq	870 <__call_exitprocs+0x100>
     7e4:	e3570000 	cmp	r7, #0
     7e8:	1afffff6 	bne	7c8 <__call_exitprocs+0x58>
     7ec:	e5963004 	ldr	r3, [r6, #4]
     7f0:	e06a2005 	rsb	r2, r10, r5
     7f4:	e2433001 	sub	r3, r3, #1
     7f8:	e0862002 	add	r2, r6, r2
     7fc:	e1530004 	cmp	r3, r4
     800:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
     804:	13a01000 	movne	r1, #0
     808:	05864004 	streq	r4, [r6, #4]
     80c:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
     810:	e3530000 	cmp	r3, #0
     814:	0affffee 	beq	7d4 <__call_exitprocs+0x64>
     818:	e1a02418 	lsl	r2, r8, r4
     81c:	e5961188 	ldr	r1, [r6, #392]	; 0x188
     820:	e1120001 	tst	r2, r1
     824:	e5969004 	ldr	r9, [r6, #4]
     828:	0a000016 	beq	888 <__call_exitprocs+0x118>
     82c:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
     830:	e1120001 	tst	r2, r1
     834:	1a000016 	bne	894 <__call_exitprocs+0x124>
     838:	e59d0008 	ldr	r0, [sp, #8]
     83c:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
     840:	e1a0e00f 	mov	lr, pc
     844:	e12fff13 	bx	r3
     848:	e5963004 	ldr	r3, [r6, #4]
     84c:	e1530009 	cmp	r3, r9
     850:	1affffd0 	bne	798 <__call_exitprocs+0x28>
     854:	e59b3000 	ldr	r3, [r11]
     858:	e1530006 	cmp	r3, r6
     85c:	1affffcd 	bne	798 <__call_exitprocs+0x28>
     860:	e2444001 	sub	r4, r4, #1
     864:	e3740001 	cmn	r4, #1
     868:	e2455004 	sub	r5, r5, #4
     86c:	1affffdc 	bne	7e4 <__call_exitprocs+0x74>
     870:	e59f1070 	ldr	r1, [pc, #112]	; 8e8 <__call_exitprocs+0x178>
     874:	e3510000 	cmp	r1, #0
     878:	1a000009 	bne	8a4 <__call_exitprocs+0x134>
     87c:	e28dd014 	add	sp, sp, #20
     880:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     884:	e12fff1e 	bx	lr
     888:	e1a0e00f 	mov	lr, pc
     88c:	e12fff13 	bx	r3
     890:	eaffffec 	b	848 <__call_exitprocs+0xd8>
     894:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
     898:	e1a0e00f 	mov	lr, pc
     89c:	e12fff13 	bx	r3
     8a0:	eaffffe8 	b	848 <__call_exitprocs+0xd8>
     8a4:	e5963004 	ldr	r3, [r6, #4]
     8a8:	e3530000 	cmp	r3, #0
     8ac:	e5963000 	ldr	r3, [r6]
     8b0:	1a000008 	bne	8d8 <__call_exitprocs+0x168>
     8b4:	e3530000 	cmp	r3, #0
     8b8:	0a000006 	beq	8d8 <__call_exitprocs+0x168>
     8bc:	e1a00006 	mov	r0, r6
     8c0:	e58b3000 	str	r3, [r11]
     8c4:	e320f000 	nop	{0}
     8c8:	e59b6000 	ldr	r6, [r11]
     8cc:	e3560000 	cmp	r6, #0
     8d0:	1affffb5 	bne	7ac <__call_exitprocs+0x3c>
     8d4:	eaffffe8 	b	87c <__call_exitprocs+0x10c>
     8d8:	e1a0b006 	mov	r11, r6
     8dc:	e1a06003 	mov	r6, r3
     8e0:	eafffff9 	b	8cc <__call_exitprocs+0x15c>
     8e4:	00003914 	.word	0x00003914
     8e8:	00000000 	.word	0x00000000

000008ec <register_fini>:
     8ec:	e92d4008 	push	{r3, lr}
     8f0:	e59f3010 	ldr	r3, [pc, #16]	; 908 <register_fini+0x1c>
     8f4:	e3530000 	cmp	r3, #0
     8f8:	159f000c 	ldrne	r0, [pc, #12]	; 90c <register_fini+0x20>
     8fc:	1bffff03 	blne	510 <atexit>
     900:	e8bd4008 	pop	{r3, lr}
     904:	e12fff1e 	bx	lr
     908:	00003948 	.word	0x00003948
     90c:	00000910 	.word	0x00000910

00000910 <__libc_fini_array>:
     910:	e92d4038 	push	{r3, r4, r5, lr}
     914:	e59f5030 	ldr	r5, [pc, #48]	; 94c <__libc_fini_array+0x3c>
     918:	e59f4030 	ldr	r4, [pc, #48]	; 950 <__libc_fini_array+0x40>
     91c:	e0654004 	rsb	r4, r5, r4
     920:	e1b04144 	asrs	r4, r4, #2
     924:	10855104 	addne	r5, r5, r4, lsl #2
     928:	0a000004 	beq	940 <__libc_fini_array+0x30>
     92c:	e5353004 	ldr	r3, [r5, #-4]!
     930:	e1a0e00f 	mov	lr, pc
     934:	e12fff13 	bx	r3
     938:	e2544001 	subs	r4, r4, #1
     93c:	1afffffa 	bne	92c <__libc_fini_array+0x1c>
     940:	eb000c00 	bl	3948 <__libc_fini>
     944:	e8bd4038 	pop	{r3, r4, r5, lr}
     948:	e12fff1e 	bx	lr
     94c:	00003960 	.word	0x00003960
     950:	00003964 	.word	0x00003964

00000954 <__sfvwrite_r>:
     954:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     958:	e5923008 	ldr	r3, [r2, #8]
     95c:	e3530000 	cmp	r3, #0
     960:	e24dd00c 	sub	sp, sp, #12
     964:	e1a07002 	mov	r7, r2
     968:	e1a0a000 	mov	r10, r0
     96c:	e1a04001 	mov	r4, r1
     970:	0a00001e 	beq	9f0 <__sfvwrite_r+0x9c>
     974:	e1d130bc 	ldrh	r3, [r1, #12]
     978:	e3130008 	tst	r3, #8
     97c:	0a00001f 	beq	a00 <__sfvwrite_r+0xac>
     980:	e5912010 	ldr	r2, [r1, #16]
     984:	e3520000 	cmp	r2, #0
     988:	0a00001c 	beq	a00 <__sfvwrite_r+0xac>
     98c:	e2132002 	ands	r2, r3, #2
     990:	e5975000 	ldr	r5, [r7]
     994:	0a000029 	beq	a40 <__sfvwrite_r+0xec>
     998:	e3a08000 	mov	r8, #0
     99c:	e1a06008 	mov	r6, r8
     9a0:	e3560000 	cmp	r6, #0
     9a4:	e1a02008 	mov	r2, r8
     9a8:	e1a0000a 	mov	r0, r10
     9ac:	0a00001f 	beq	a30 <__sfvwrite_r+0xdc>
     9b0:	e3560b01 	cmp	r6, #1024	; 0x400
     9b4:	31a03006 	movcc	r3, r6
     9b8:	23a03b01 	movcs	r3, #1024	; 0x400
     9bc:	e594101c 	ldr	r1, [r4, #28]
     9c0:	e594c024 	ldr	r12, [r4, #36]	; 0x24
     9c4:	e1a0e00f 	mov	lr, pc
     9c8:	e12fff1c 	bx	r12
     9cc:	e3500000 	cmp	r0, #0
     9d0:	da000050 	ble	b18 <__sfvwrite_r+0x1c4>
     9d4:	e5973008 	ldr	r3, [r7, #8]
     9d8:	e0603003 	rsb	r3, r0, r3
     9dc:	e3530000 	cmp	r3, #0
     9e0:	e0888000 	add	r8, r8, r0
     9e4:	e0606006 	rsb	r6, r0, r6
     9e8:	e5873008 	str	r3, [r7, #8]
     9ec:	1affffeb 	bne	9a0 <__sfvwrite_r+0x4c>
     9f0:	e3a00000 	mov	r0, #0
     9f4:	e28dd00c 	add	sp, sp, #12
     9f8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     9fc:	e12fff1e 	bx	lr
     a00:	e1a0000a 	mov	r0, r10
     a04:	e1a01004 	mov	r1, r4
     a08:	eb00054f 	bl	1f4c <__swsetup_r>
     a0c:	e3500000 	cmp	r0, #0
     a10:	e1d430bc 	ldrh	r3, [r4, #12]
     a14:	0affffdc 	beq	98c <__sfvwrite_r+0x38>
     a18:	e3833040 	orr	r3, r3, #64	; 0x40
     a1c:	e1c430bc 	strh	r3, [r4, #12]
     a20:	e3a03009 	mov	r3, #9
     a24:	e3e00000 	mvn	r0, #0
     a28:	e58a3000 	str	r3, [r10]
     a2c:	eafffff0 	b	9f4 <__sfvwrite_r+0xa0>
     a30:	e5958000 	ldr	r8, [r5]
     a34:	e5956004 	ldr	r6, [r5, #4]
     a38:	e2855008 	add	r5, r5, #8
     a3c:	eaffffd7 	b	9a0 <__sfvwrite_r+0x4c>
     a40:	e2139001 	ands	r9, r3, #1
     a44:	1a000038 	bne	b2c <__sfvwrite_r+0x1d8>
     a48:	e1a06009 	mov	r6, r9
     a4c:	e3560000 	cmp	r6, #0
     a50:	0a000024 	beq	ae8 <__sfvwrite_r+0x194>
     a54:	e3130c02 	tst	r3, #512	; 0x200
     a58:	e5948008 	ldr	r8, [r4, #8]
     a5c:	e1a02003 	mov	r2, r3
     a60:	0a000062 	beq	bf0 <__sfvwrite_r+0x29c>
     a64:	e1560008 	cmp	r6, r8
     a68:	e1a0c008 	mov	r12, r8
     a6c:	3a000089 	bcc	c98 <__sfvwrite_r+0x344>
     a70:	e2022d12 	and	r2, r2, #1152	; 0x480
     a74:	e3520000 	cmp	r2, #0
     a78:	1a0000a2 	bne	d08 <__sfvwrite_r+0x3b4>
     a7c:	e5940000 	ldr	r0, [r4]
     a80:	e1a0b008 	mov	r11, r8
     a84:	e1a03006 	mov	r3, r6
     a88:	e1a08006 	mov	r8, r6
     a8c:	e1a0200c 	mov	r2, r12
     a90:	e1a01009 	mov	r1, r9
     a94:	e58d3004 	str	r3, [sp, #4]
     a98:	e58dc000 	str	r12, [sp]
     a9c:	eb00036e 	bl	185c <memmove>
     aa0:	e59dc000 	ldr	r12, [sp]
     aa4:	e5941008 	ldr	r1, [r4, #8]
     aa8:	e5942000 	ldr	r2, [r4]
     aac:	e06bb001 	rsb	r11, r11, r1
     ab0:	e082c00c 	add	r12, r2, r12
     ab4:	e584b008 	str	r11, [r4, #8]
     ab8:	e584c000 	str	r12, [r4]
     abc:	e59d3004 	ldr	r3, [sp, #4]
     ac0:	e5972008 	ldr	r2, [r7, #8]
     ac4:	e0688002 	rsb	r8, r8, r2
     ac8:	e3580000 	cmp	r8, #0
     acc:	e0899003 	add	r9, r9, r3
     ad0:	e0636006 	rsb	r6, r3, r6
     ad4:	e5878008 	str	r8, [r7, #8]
     ad8:	0affffc4 	beq	9f0 <__sfvwrite_r+0x9c>
     adc:	e3560000 	cmp	r6, #0
     ae0:	e1d430bc 	ldrh	r3, [r4, #12]
     ae4:	1affffda 	bne	a54 <__sfvwrite_r+0x100>
     ae8:	e5959000 	ldr	r9, [r5]
     aec:	e5956004 	ldr	r6, [r5, #4]
     af0:	e2855008 	add	r5, r5, #8
     af4:	eaffffd4 	b	a4c <__sfvwrite_r+0xf8>
     af8:	eb0003a6 	bl	1998 <_realloc_r>
     afc:	e2503000 	subs	r3, r0, #0
     b00:	1a00009d 	bne	d7c <__sfvwrite_r+0x428>
     b04:	e1a0000a 	mov	r0, r10
     b08:	e5941010 	ldr	r1, [r4, #16]
     b0c:	eb0006e7 	bl	26b0 <_free_r>
     b10:	e3a0300c 	mov	r3, #12
     b14:	e58a3000 	str	r3, [r10]
     b18:	e1d430bc 	ldrh	r3, [r4, #12]
     b1c:	e3833040 	orr	r3, r3, #64	; 0x40
     b20:	e1c430bc 	strh	r3, [r4, #12]
     b24:	e3e00000 	mvn	r0, #0
     b28:	eaffffb1 	b	9f4 <__sfvwrite_r+0xa0>
     b2c:	e1a09002 	mov	r9, r2
     b30:	e1a0c002 	mov	r12, r2
     b34:	e1a0b002 	mov	r11, r2
     b38:	e1a08002 	mov	r8, r2
     b3c:	e3580000 	cmp	r8, #0
     b40:	0a000025 	beq	bdc <__sfvwrite_r+0x288>
     b44:	e35c0000 	cmp	r12, #0
     b48:	0a000064 	beq	ce0 <__sfvwrite_r+0x38c>
     b4c:	e5940000 	ldr	r0, [r4]
     b50:	e5942010 	ldr	r2, [r4, #16]
     b54:	e1590008 	cmp	r9, r8
     b58:	31a03009 	movcc	r3, r9
     b5c:	21a03008 	movcs	r3, r8
     b60:	e1500002 	cmp	r0, r2
     b64:	e5946008 	ldr	r6, [r4, #8]
     b68:	e594e014 	ldr	lr, [r4, #20]
     b6c:	9a000002 	bls	b7c <__sfvwrite_r+0x228>
     b70:	e086600e 	add	r6, r6, lr
     b74:	e1530006 	cmp	r3, r6
     b78:	ca00008a 	bgt	da8 <__sfvwrite_r+0x454>
     b7c:	e153000e 	cmp	r3, lr
     b80:	ba00002d 	blt	c3c <__sfvwrite_r+0x2e8>
     b84:	e594101c 	ldr	r1, [r4, #28]
     b88:	e1a0000a 	mov	r0, r10
     b8c:	e58dc000 	str	r12, [sp]
     b90:	e1a0200b 	mov	r2, r11
     b94:	e1a0300e 	mov	r3, lr
     b98:	e594c024 	ldr	r12, [r4, #36]	; 0x24
     b9c:	e1a0e00f 	mov	lr, pc
     ba0:	e12fff1c 	bx	r12
     ba4:	e2506000 	subs	r6, r0, #0
     ba8:	e59dc000 	ldr	r12, [sp]
     bac:	daffffd9 	ble	b18 <__sfvwrite_r+0x1c4>
     bb0:	e0599006 	subs	r9, r9, r6
     bb4:	0a000030 	beq	c7c <__sfvwrite_r+0x328>
     bb8:	e5973008 	ldr	r3, [r7, #8]
     bbc:	e0663003 	rsb	r3, r6, r3
     bc0:	e3530000 	cmp	r3, #0
     bc4:	e08bb006 	add	r11, r11, r6
     bc8:	e0668008 	rsb	r8, r6, r8
     bcc:	e5873008 	str	r3, [r7, #8]
     bd0:	0affff86 	beq	9f0 <__sfvwrite_r+0x9c>
     bd4:	e3580000 	cmp	r8, #0
     bd8:	1affffd9 	bne	b44 <__sfvwrite_r+0x1f0>
     bdc:	e595b000 	ldr	r11, [r5]
     be0:	e5958004 	ldr	r8, [r5, #4]
     be4:	e3a0c000 	mov	r12, #0
     be8:	e2855008 	add	r5, r5, #8
     bec:	eaffffd2 	b	b3c <__sfvwrite_r+0x1e8>
     bf0:	e5940000 	ldr	r0, [r4]
     bf4:	e5943010 	ldr	r3, [r4, #16]
     bf8:	e1500003 	cmp	r0, r3
     bfc:	9a000001 	bls	c08 <__sfvwrite_r+0x2b4>
     c00:	e1560008 	cmp	r6, r8
     c04:	8a000075 	bhi	de0 <__sfvwrite_r+0x48c>
     c08:	e5943014 	ldr	r3, [r4, #20]
     c0c:	e1560003 	cmp	r6, r3
     c10:	3a000026 	bcc	cb0 <__sfvwrite_r+0x35c>
     c14:	e1a0000a 	mov	r0, r10
     c18:	e594101c 	ldr	r1, [r4, #28]
     c1c:	e1a02009 	mov	r2, r9
     c20:	e594c024 	ldr	r12, [r4, #36]	; 0x24
     c24:	e1a0e00f 	mov	lr, pc
     c28:	e12fff1c 	bx	r12
     c2c:	e2508000 	subs	r8, r0, #0
     c30:	daffffb8 	ble	b18 <__sfvwrite_r+0x1c4>
     c34:	e1a03008 	mov	r3, r8
     c38:	eaffffa0 	b	ac0 <__sfvwrite_r+0x16c>
     c3c:	e1a02003 	mov	r2, r3
     c40:	e1a0100b 	mov	r1, r11
     c44:	e58d3004 	str	r3, [sp, #4]
     c48:	e58dc000 	str	r12, [sp]
     c4c:	eb000302 	bl	185c <memmove>
     c50:	e59d3004 	ldr	r3, [sp, #4]
     c54:	e5941008 	ldr	r1, [r4, #8]
     c58:	e5942000 	ldr	r2, [r4]
     c5c:	e1a06003 	mov	r6, r3
     c60:	e0631001 	rsb	r1, r3, r1
     c64:	e0822003 	add	r2, r2, r3
     c68:	e0599006 	subs	r9, r9, r6
     c6c:	e5841008 	str	r1, [r4, #8]
     c70:	e5842000 	str	r2, [r4]
     c74:	e59dc000 	ldr	r12, [sp]
     c78:	1affffce 	bne	bb8 <__sfvwrite_r+0x264>
     c7c:	e1a0000a 	mov	r0, r10
     c80:	e1a01004 	mov	r1, r4
     c84:	eb0004fe 	bl	2084 <_fflush_r>
     c88:	e3500000 	cmp	r0, #0
     c8c:	1affffa1 	bne	b18 <__sfvwrite_r+0x1c4>
     c90:	e1a0c009 	mov	r12, r9
     c94:	eaffffc7 	b	bb8 <__sfvwrite_r+0x264>
     c98:	e5940000 	ldr	r0, [r4]
     c9c:	e1a0b006 	mov	r11, r6
     ca0:	e1a03006 	mov	r3, r6
     ca4:	e1a08006 	mov	r8, r6
     ca8:	e1a0c006 	mov	r12, r6
     cac:	eaffff76 	b	a8c <__sfvwrite_r+0x138>
     cb0:	e1a02006 	mov	r2, r6
     cb4:	e1a01009 	mov	r1, r9
     cb8:	eb0002e7 	bl	185c <memmove>
     cbc:	e5942008 	ldr	r2, [r4, #8]
     cc0:	e5943000 	ldr	r3, [r4]
     cc4:	e0662002 	rsb	r2, r6, r2
     cc8:	e0833006 	add	r3, r3, r6
     ccc:	e5843000 	str	r3, [r4]
     cd0:	e5842008 	str	r2, [r4, #8]
     cd4:	e1a08006 	mov	r8, r6
     cd8:	e1a03006 	mov	r3, r6
     cdc:	eaffff77 	b	ac0 <__sfvwrite_r+0x16c>
     ce0:	e1a0000b 	mov	r0, r11
     ce4:	e3a0100a 	mov	r1, #10
     ce8:	e1a02008 	mov	r2, r8
     cec:	eb000210 	bl	1534 <memchr>
     cf0:	e3500000 	cmp	r0, #0
     cf4:	12809001 	addne	r9, r0, #1
     cf8:	106b9009 	rsbne	r9, r11, r9
     cfc:	02889001 	addeq	r9, r8, #1
     d00:	e3a0c001 	mov	r12, #1
     d04:	eaffff90 	b	b4c <__sfvwrite_r+0x1f8>
     d08:	e5941010 	ldr	r1, [r4, #16]
     d0c:	e594b000 	ldr	r11, [r4]
     d10:	e5948014 	ldr	r8, [r4, #20]
     d14:	e061b00b 	rsb	r11, r1, r11
     d18:	e0888088 	add	r8, r8, r8, lsl #1
     d1c:	e0888fa8 	add	r8, r8, r8, lsr #31
     d20:	e28b0001 	add	r0, r11, #1
     d24:	e1a080c8 	asr	r8, r8, #1
     d28:	e0800006 	add	r0, r0, r6
     d2c:	e1580000 	cmp	r8, r0
     d30:	e1a02008 	mov	r2, r8
     d34:	31a08000 	movcc	r8, r0
     d38:	31a02008 	movcc	r2, r8
     d3c:	e3130b01 	tst	r3, #1024	; 0x400
     d40:	e1a0000a 	mov	r0, r10
     d44:	0affff6b 	beq	af8 <__sfvwrite_r+0x1a4>
     d48:	e1a01002 	mov	r1, r2
     d4c:	eb000031 	bl	e18 <_malloc_r>
     d50:	e2503000 	subs	r3, r0, #0
     d54:	0affff6d 	beq	b10 <__sfvwrite_r+0x1bc>
     d58:	e5941010 	ldr	r1, [r4, #16]
     d5c:	e1a0200b 	mov	r2, r11
     d60:	e58d3004 	str	r3, [sp, #4]
     d64:	eb000239 	bl	1650 <memcpy>
     d68:	e1d420bc 	ldrh	r2, [r4, #12]
     d6c:	e3c22d12 	bic	r2, r2, #1152	; 0x480
     d70:	e3822080 	orr	r2, r2, #128	; 0x80
     d74:	e1c420bc 	strh	r2, [r4, #12]
     d78:	e59d3004 	ldr	r3, [sp, #4]
     d7c:	e083000b 	add	r0, r3, r11
     d80:	e06b2008 	rsb	r2, r11, r8
     d84:	e5843010 	str	r3, [r4, #16]
     d88:	e5848014 	str	r8, [r4, #20]
     d8c:	e5840000 	str	r0, [r4]
     d90:	e1a0b006 	mov	r11, r6
     d94:	e5842008 	str	r2, [r4, #8]
     d98:	e1a03006 	mov	r3, r6
     d9c:	e1a08006 	mov	r8, r6
     da0:	e1a0c006 	mov	r12, r6
     da4:	eaffff38 	b	a8c <__sfvwrite_r+0x138>
     da8:	e1a0100b 	mov	r1, r11
     dac:	e1a02006 	mov	r2, r6
     db0:	e58dc000 	str	r12, [sp]
     db4:	eb0002a8 	bl	185c <memmove>
     db8:	e5943000 	ldr	r3, [r4]
     dbc:	e0833006 	add	r3, r3, r6
     dc0:	e5843000 	str	r3, [r4]
     dc4:	e1a0000a 	mov	r0, r10
     dc8:	e1a01004 	mov	r1, r4
     dcc:	eb0004ac 	bl	2084 <_fflush_r>
     dd0:	e3500000 	cmp	r0, #0
     dd4:	e59dc000 	ldr	r12, [sp]
     dd8:	0affff74 	beq	bb0 <__sfvwrite_r+0x25c>
     ddc:	eaffff4d 	b	b18 <__sfvwrite_r+0x1c4>
     de0:	e1a01009 	mov	r1, r9
     de4:	e1a02008 	mov	r2, r8
     de8:	e58d8004 	str	r8, [sp, #4]
     dec:	eb00029a 	bl	185c <memmove>
     df0:	e5942000 	ldr	r2, [r4]
     df4:	e0822008 	add	r2, r2, r8
     df8:	e5842000 	str	r2, [r4]
     dfc:	e1a0000a 	mov	r0, r10
     e00:	e1a01004 	mov	r1, r4
     e04:	eb00049e 	bl	2084 <_fflush_r>
     e08:	e3500000 	cmp	r0, #0
     e0c:	e59d3004 	ldr	r3, [sp, #4]
     e10:	0affff2a 	beq	ac0 <__sfvwrite_r+0x16c>
     e14:	eaffff3f 	b	b18 <__sfvwrite_r+0x1c4>

00000e18 <_malloc_r>:
     e18:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     e1c:	e281500b 	add	r5, r1, #11
     e20:	e3550016 	cmp	r5, #22
     e24:	83c55007 	bichi	r5, r5, #7
     e28:	81a03fa5 	lsrhi	r3, r5, #31
     e2c:	93a03000 	movls	r3, #0
     e30:	93a05010 	movls	r5, #16
     e34:	e1550001 	cmp	r5, r1
     e38:	21a01003 	movcs	r1, r3
     e3c:	33831001 	orrcc	r1, r3, #1
     e40:	e3510000 	cmp	r1, #0
     e44:	13a0300c 	movne	r3, #12
     e48:	e24dd00c 	sub	sp, sp, #12
     e4c:	e1a06000 	mov	r6, r0
     e50:	15803000 	strne	r3, [r0]
     e54:	13a04000 	movne	r4, #0
     e58:	1a000015 	bne	eb4 <_malloc_r+0x9c>
     e5c:	eb0002cb 	bl	1990 <__malloc_lock>
     e60:	e3550f7e 	cmp	r5, #504	; 0x1f8
     e64:	2a000016 	bcs	ec4 <_malloc_r+0xac>
     e68:	e59f76b8 	ldr	r7, [pc, #1720]	; 1528 <_malloc_r+0x710>
     e6c:	e1a0e1a5 	lsr	lr, r5, #3
     e70:	e087318e 	add	r3, r7, lr, lsl #3
     e74:	e593400c 	ldr	r4, [r3, #12]
     e78:	e1540003 	cmp	r4, r3
     e7c:	0a00014b 	beq	13b0 <_malloc_r+0x598>
     e80:	e5943004 	ldr	r3, [r4, #4]
     e84:	e3c33003 	bic	r3, r3, #3
     e88:	e0843003 	add	r3, r4, r3
     e8c:	e5930004 	ldr	r0, [r3, #4]
     e90:	e2841008 	add	r1, r4, #8
     e94:	e8910006 	ldm	r1, {r1, r2}
     e98:	e3800001 	orr	r0, r0, #1
     e9c:	e5830004 	str	r0, [r3, #4]
     ea0:	e581200c 	str	r2, [r1, #12]
     ea4:	e5821008 	str	r1, [r2, #8]
     ea8:	e1a00006 	mov	r0, r6
     eac:	eb0002b8 	bl	1994 <__malloc_unlock>
     eb0:	e2844008 	add	r4, r4, #8
     eb4:	e1a00004 	mov	r0, r4
     eb8:	e28dd00c 	add	sp, sp, #12
     ebc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     ec0:	e12fff1e 	bx	lr
     ec4:	e1b0e4a5 	lsrs	lr, r5, #9
     ec8:	01a0e1a5 	lsreq	lr, r5, #3
     ecc:	01a0108e 	lsleq	r1, lr, #1
     ed0:	1a000061 	bne	105c <_malloc_r+0x244>
     ed4:	e59f764c 	ldr	r7, [pc, #1612]	; 1528 <_malloc_r+0x710>
     ed8:	e0871101 	add	r1, r7, r1, lsl #2
     edc:	e591400c 	ldr	r4, [r1, #12]
     ee0:	e1510004 	cmp	r1, r4
     ee4:	1a000005 	bne	f00 <_malloc_r+0xe8>
     ee8:	ea00000a 	b	f18 <_malloc_r+0x100>
     eec:	e3530000 	cmp	r3, #0
     ef0:	aa0000d7 	bge	1254 <_malloc_r+0x43c>
     ef4:	e594400c 	ldr	r4, [r4, #12]
     ef8:	e1510004 	cmp	r1, r4
     efc:	0a000005 	beq	f18 <_malloc_r+0x100>
     f00:	e5942004 	ldr	r2, [r4, #4]
     f04:	e3c22003 	bic	r2, r2, #3
     f08:	e0653002 	rsb	r3, r5, r2
     f0c:	e353000f 	cmp	r3, #15
     f10:	dafffff5 	ble	eec <_malloc_r+0xd4>
     f14:	e24ee001 	sub	lr, lr, #1
     f18:	e28ee001 	add	lr, lr, #1
     f1c:	e59f3604 	ldr	r3, [pc, #1540]	; 1528 <_malloc_r+0x710>
     f20:	e5974010 	ldr	r4, [r7, #16]
     f24:	e2838008 	add	r8, r3, #8
     f28:	e1540008 	cmp	r4, r8
     f2c:	05931004 	ldreq	r1, [r3, #4]
     f30:	0a000016 	beq	f90 <_malloc_r+0x178>
     f34:	e5942004 	ldr	r2, [r4, #4]
     f38:	e3c22003 	bic	r2, r2, #3
     f3c:	e0651002 	rsb	r1, r5, r2
     f40:	e351000f 	cmp	r1, #15
     f44:	ca0000f7 	bgt	1328 <_malloc_r+0x510>
     f48:	e3510000 	cmp	r1, #0
     f4c:	e5838014 	str	r8, [r3, #20]
     f50:	e5838010 	str	r8, [r3, #16]
     f54:	aa000046 	bge	1074 <_malloc_r+0x25c>
     f58:	e3520c02 	cmp	r2, #512	; 0x200
     f5c:	2a0000d2 	bcs	12ac <_malloc_r+0x494>
     f60:	e5930004 	ldr	r0, [r3, #4]
     f64:	e1a021a2 	lsr	r2, r2, #3
     f68:	e1a01142 	asr	r1, r2, #2
     f6c:	e3a0c001 	mov	r12, #1
     f70:	e180111c 	orr	r1, r0, r12, lsl r1
     f74:	e0832182 	add	r2, r3, r2, lsl #3
     f78:	e5920008 	ldr	r0, [r2, #8]
     f7c:	e584200c 	str	r2, [r4, #12]
     f80:	e5840008 	str	r0, [r4, #8]
     f84:	e5831004 	str	r1, [r3, #4]
     f88:	e5824008 	str	r4, [r2, #8]
     f8c:	e580400c 	str	r4, [r0, #12]
     f90:	e1a0014e 	asr	r0, lr, #2
     f94:	e3a03001 	mov	r3, #1
     f98:	e1a00013 	lsl	r0, r3, r0
     f9c:	e1500001 	cmp	r0, r1
     fa0:	8a00003b 	bhi	1094 <_malloc_r+0x27c>
     fa4:	e1110000 	tst	r1, r0
     fa8:	1a000008 	bne	fd0 <_malloc_r+0x1b8>
     fac:	e1a00310 	lsl	r0, r0, r3
     fb0:	e3cee003 	bic	lr, lr, #3
     fb4:	e1110000 	tst	r1, r0
     fb8:	e28ee004 	add	lr, lr, #4
     fbc:	1a000003 	bne	fd0 <_malloc_r+0x1b8>
     fc0:	e1a00080 	lsl	r0, r0, #1
     fc4:	e1110000 	tst	r1, r0
     fc8:	e28ee004 	add	lr, lr, #4
     fcc:	0afffffb 	beq	fc0 <_malloc_r+0x1a8>
     fd0:	e087a18e 	add	r10, r7, lr, lsl #3
     fd4:	e1a0c00a 	mov	r12, r10
     fd8:	e1a0400e 	mov	r4, lr
     fdc:	e59c300c 	ldr	r3, [r12, #12]
     fe0:	e15c0003 	cmp	r12, r3
     fe4:	1a000005 	bne	1000 <_malloc_r+0x1e8>
     fe8:	ea0000db 	b	135c <_malloc_r+0x544>
     fec:	e3520000 	cmp	r2, #0
     ff0:	aa0000f4 	bge	13c8 <_malloc_r+0x5b0>
     ff4:	e593300c 	ldr	r3, [r3, #12]
     ff8:	e15c0003 	cmp	r12, r3
     ffc:	0a0000d6 	beq	135c <_malloc_r+0x544>
    1000:	e5931004 	ldr	r1, [r3, #4]
    1004:	e3c11003 	bic	r1, r1, #3
    1008:	e0652001 	rsb	r2, r5, r1
    100c:	e352000f 	cmp	r2, #15
    1010:	dafffff5 	ble	fec <_malloc_r+0x1d4>
    1014:	e1a04003 	mov	r4, r3
    1018:	e593000c 	ldr	r0, [r3, #12]
    101c:	e5b4c008 	ldr	r12, [r4, #8]!
    1020:	e0831005 	add	r1, r3, r5
    1024:	e382e001 	orr	lr, r2, #1
    1028:	e3855001 	orr	r5, r5, #1
    102c:	e58c000c 	str	r0, [r12, #12]
    1030:	e580c008 	str	r12, [r0, #8]
    1034:	e5835004 	str	r5, [r3, #4]
    1038:	e5871014 	str	r1, [r7, #20]
    103c:	e5871010 	str	r1, [r7, #16]
    1040:	e581800c 	str	r8, [r1, #12]
    1044:	e5818008 	str	r8, [r1, #8]
    1048:	e581e004 	str	lr, [r1, #4]
    104c:	e7812002 	str	r2, [r1, r2]
    1050:	e1a00006 	mov	r0, r6
    1054:	eb00024e 	bl	1994 <__malloc_unlock>
    1058:	eaffff95 	b	eb4 <_malloc_r+0x9c>
    105c:	e35e0004 	cmp	lr, #4
    1060:	8a000087 	bhi	1284 <_malloc_r+0x46c>
    1064:	e1a0e325 	lsr	lr, r5, #6
    1068:	e28ee038 	add	lr, lr, #56	; 0x38
    106c:	e1a0108e 	lsl	r1, lr, #1
    1070:	eaffff97 	b	ed4 <_malloc_r+0xbc>
    1074:	e0842002 	add	r2, r4, r2
    1078:	e5923004 	ldr	r3, [r2, #4]
    107c:	e3833001 	orr	r3, r3, #1
    1080:	e5823004 	str	r3, [r2, #4]
    1084:	e1a00006 	mov	r0, r6
    1088:	eb000241 	bl	1994 <__malloc_unlock>
    108c:	e2844008 	add	r4, r4, #8
    1090:	eaffff87 	b	eb4 <_malloc_r+0x9c>
    1094:	e5974008 	ldr	r4, [r7, #8]
    1098:	e594a004 	ldr	r10, [r4, #4]
    109c:	e3caa003 	bic	r10, r10, #3
    10a0:	e155000a 	cmp	r5, r10
    10a4:	8a000002 	bhi	10b4 <_malloc_r+0x29c>
    10a8:	e065300a 	rsb	r3, r5, r10
    10ac:	e353000f 	cmp	r3, #15
    10b0:	ca00005d 	bgt	122c <_malloc_r+0x414>
    10b4:	e59f9470 	ldr	r9, [pc, #1136]	; 152c <_malloc_r+0x714>
    10b8:	e5973408 	ldr	r3, [r7, #1032]	; 0x408
    10bc:	e599b000 	ldr	r11, [r9]
    10c0:	e3730001 	cmn	r3, #1
    10c4:	e085b00b 	add	r11, r5, r11
    10c8:	128bba01 	addne	r11, r11, #4096	; 0x1000
    10cc:	128bb00f 	addne	r11, r11, #15
    10d0:	13cbbeff 	bicne	r11, r11, #4080	; 0xff0
    10d4:	028bb010 	addeq	r11, r11, #16
    10d8:	13cbb00f 	bicne	r11, r11, #15
    10dc:	e084200a 	add	r2, r4, r10
    10e0:	e1a00006 	mov	r0, r6
    10e4:	e1a0100b 	mov	r1, r11
    10e8:	e58d2004 	str	r2, [sp, #4]
    10ec:	eb000386 	bl	1f0c <_sbrk_r>
    10f0:	e3700001 	cmn	r0, #1
    10f4:	e1a08000 	mov	r8, r0
    10f8:	e59d2004 	ldr	r2, [sp, #4]
    10fc:	0a0000e2 	beq	148c <_malloc_r+0x674>
    1100:	e1520000 	cmp	r2, r0
    1104:	8a0000bf 	bhi	1408 <_malloc_r+0x5f0>
    1108:	e5993004 	ldr	r3, [r9, #4]
    110c:	e1520008 	cmp	r2, r8
    1110:	e08b3003 	add	r3, r11, r3
    1114:	e5893004 	str	r3, [r9, #4]
    1118:	0a0000df 	beq	149c <_malloc_r+0x684>
    111c:	e5971408 	ldr	r1, [r7, #1032]	; 0x408
    1120:	e3710001 	cmn	r1, #1
    1124:	10622008 	rsbne	r2, r2, r8
    1128:	059f33f8 	ldreq	r3, [pc, #1016]	; 1528 <_malloc_r+0x710>
    112c:	10833002 	addne	r3, r3, r2
    1130:	05838408 	streq	r8, [r3, #1032]	; 0x408
    1134:	15893004 	strne	r3, [r9, #4]
    1138:	e2183007 	ands	r3, r8, #7
    113c:	12632008 	rsbne	r2, r3, #8
    1140:	10888002 	addne	r8, r8, r2
    1144:	12633a01 	rsbne	r3, r3, #4096	; 0x1000
    1148:	12832008 	addne	r2, r3, #8
    114c:	e088300b 	add	r3, r8, r11
    1150:	03a02a01 	moveq	r2, #4096	; 0x1000
    1154:	e1a03a03 	lsl	r3, r3, #20
    1158:	e042ba23 	sub	r11, r2, r3, lsr #20
    115c:	e1a0100b 	mov	r1, r11
    1160:	e1a00006 	mov	r0, r6
    1164:	eb000368 	bl	1f0c <_sbrk_r>
    1168:	e3700001 	cmn	r0, #1
    116c:	10682000 	rsbne	r2, r8, r0
    1170:	e5993004 	ldr	r3, [r9, #4]
    1174:	108b2002 	addne	r2, r11, r2
    1178:	03a0b000 	moveq	r11, #0
    117c:	13822001 	orrne	r2, r2, #1
    1180:	03a02001 	moveq	r2, #1
    1184:	e08b3003 	add	r3, r11, r3
    1188:	e1540007 	cmp	r4, r7
    118c:	e5893004 	str	r3, [r9, #4]
    1190:	e5878008 	str	r8, [r7, #8]
    1194:	e5882004 	str	r2, [r8, #4]
    1198:	0a00000d 	beq	11d4 <_malloc_r+0x3bc>
    119c:	e35a000f 	cmp	r10, #15
    11a0:	9a0000ac 	bls	1458 <_malloc_r+0x640>
    11a4:	e594c004 	ldr	r12, [r4, #4]
    11a8:	e24a200c 	sub	r2, r10, #12
    11ac:	e3c22007 	bic	r2, r2, #7
    11b0:	e20cc001 	and	r12, r12, #1
    11b4:	e0841002 	add	r1, r4, r2
    11b8:	e3a00005 	mov	r0, #5
    11bc:	e182c00c 	orr	r12, r2, r12
    11c0:	e352000f 	cmp	r2, #15
    11c4:	e584c004 	str	r12, [r4, #4]
    11c8:	e5810004 	str	r0, [r1, #4]
    11cc:	e5810008 	str	r0, [r1, #8]
    11d0:	8a0000b8 	bhi	14b8 <_malloc_r+0x6a0>
    11d4:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
    11d8:	e1530002 	cmp	r3, r2
    11dc:	859f2348 	ldrhi	r2, [pc, #840]	; 152c <_malloc_r+0x714>
    11e0:	8582302c 	strhi	r3, [r2, #44]	; 0x2c
    11e4:	e5992030 	ldr	r2, [r9, #48]	; 0x30
    11e8:	e5974008 	ldr	r4, [r7, #8]
    11ec:	e1530002 	cmp	r3, r2
    11f0:	95943004 	ldrls	r3, [r4, #4]
    11f4:	85942004 	ldrhi	r2, [r4, #4]
    11f8:	859f132c 	ldrhi	r1, [pc, #812]	; 152c <_malloc_r+0x714>
    11fc:	93c33003 	bicls	r3, r3, #3
    1200:	85813030 	strhi	r3, [r1, #48]	; 0x30
    1204:	83c23003 	bichi	r3, r2, #3
    1208:	e1550003 	cmp	r5, r3
    120c:	e0653003 	rsb	r3, r5, r3
    1210:	8a000001 	bhi	121c <_malloc_r+0x404>
    1214:	e353000f 	cmp	r3, #15
    1218:	ca000003 	bgt	122c <_malloc_r+0x414>
    121c:	e1a00006 	mov	r0, r6
    1220:	eb0001db 	bl	1994 <__malloc_unlock>
    1224:	e3a04000 	mov	r4, #0
    1228:	eaffff21 	b	eb4 <_malloc_r+0x9c>
    122c:	e0842005 	add	r2, r4, r5
    1230:	e3833001 	orr	r3, r3, #1
    1234:	e3855001 	orr	r5, r5, #1
    1238:	e5845004 	str	r5, [r4, #4]
    123c:	e1a00006 	mov	r0, r6
    1240:	e5823004 	str	r3, [r2, #4]
    1244:	e5872008 	str	r2, [r7, #8]
    1248:	e2844008 	add	r4, r4, #8
    124c:	eb0001d0 	bl	1994 <__malloc_unlock>
    1250:	eaffff17 	b	eb4 <_malloc_r+0x9c>
    1254:	e0842002 	add	r2, r4, r2
    1258:	e5920004 	ldr	r0, [r2, #4]
    125c:	e2841008 	add	r1, r4, #8
    1260:	e891000a 	ldm	r1, {r1, r3}
    1264:	e3800001 	orr	r0, r0, #1
    1268:	e5820004 	str	r0, [r2, #4]
    126c:	e581300c 	str	r3, [r1, #12]
    1270:	e5831008 	str	r1, [r3, #8]
    1274:	e1a00006 	mov	r0, r6
    1278:	eb0001c5 	bl	1994 <__malloc_unlock>
    127c:	e2844008 	add	r4, r4, #8
    1280:	eaffff0b 	b	eb4 <_malloc_r+0x9c>
    1284:	e35e0014 	cmp	lr, #20
    1288:	928ee05b 	addls	lr, lr, #91	; 0x5b
    128c:	91a0108e 	lslls	r1, lr, #1
    1290:	9affff0f 	bls	ed4 <_malloc_r+0xbc>
    1294:	e35e0054 	cmp	lr, #84	; 0x54
    1298:	8a000061 	bhi	1424 <_malloc_r+0x60c>
    129c:	e1a0e625 	lsr	lr, r5, #12
    12a0:	e28ee06e 	add	lr, lr, #110	; 0x6e
    12a4:	e1a0108e 	lsl	r1, lr, #1
    12a8:	eaffff09 	b	ed4 <_malloc_r+0xbc>
    12ac:	e1a034a2 	lsr	r3, r2, #9
    12b0:	e3530004 	cmp	r3, #4
    12b4:	9a00004f 	bls	13f8 <_malloc_r+0x5e0>
    12b8:	e3530014 	cmp	r3, #20
    12bc:	9283a05b 	addls	r10, r3, #91	; 0x5b
    12c0:	91a0008a 	lslls	r0, r10, #1
    12c4:	9a000004 	bls	12dc <_malloc_r+0x4c4>
    12c8:	e3530054 	cmp	r3, #84	; 0x54
    12cc:	8a00007f 	bhi	14d0 <_malloc_r+0x6b8>
    12d0:	e1a0a622 	lsr	r10, r2, #12
    12d4:	e28aa06e 	add	r10, r10, #110	; 0x6e
    12d8:	e1a0008a 	lsl	r0, r10, #1
    12dc:	e0870100 	add	r0, r7, r0, lsl #2
    12e0:	e5903008 	ldr	r3, [r0, #8]
    12e4:	e1530000 	cmp	r3, r0
    12e8:	e59fc238 	ldr	r12, [pc, #568]	; 1528 <_malloc_r+0x710>
    12ec:	0a000052 	beq	143c <_malloc_r+0x624>
    12f0:	e5931004 	ldr	r1, [r3, #4]
    12f4:	e3c11003 	bic	r1, r1, #3
    12f8:	e1520001 	cmp	r2, r1
    12fc:	2a000002 	bcs	130c <_malloc_r+0x4f4>
    1300:	e5933008 	ldr	r3, [r3, #8]
    1304:	e1500003 	cmp	r0, r3
    1308:	1afffff8 	bne	12f0 <_malloc_r+0x4d8>
    130c:	e593200c 	ldr	r2, [r3, #12]
    1310:	e5971004 	ldr	r1, [r7, #4]
    1314:	e584200c 	str	r2, [r4, #12]
    1318:	e5843008 	str	r3, [r4, #8]
    131c:	e583400c 	str	r4, [r3, #12]
    1320:	e5824008 	str	r4, [r2, #8]
    1324:	eaffff19 	b	f90 <_malloc_r+0x178>
    1328:	e0842005 	add	r2, r4, r5
    132c:	e3810001 	orr	r0, r1, #1
    1330:	e3855001 	orr	r5, r5, #1
    1334:	e5845004 	str	r5, [r4, #4]
    1338:	e5832014 	str	r2, [r3, #20]
    133c:	e5832010 	str	r2, [r3, #16]
    1340:	e582800c 	str	r8, [r2, #12]
    1344:	e9820101 	stmib	r2, {r0, r8}
    1348:	e7821001 	str	r1, [r2, r1]
    134c:	e1a00006 	mov	r0, r6
    1350:	eb00018f 	bl	1994 <__malloc_unlock>
    1354:	e2844008 	add	r4, r4, #8
    1358:	eafffed5 	b	eb4 <_malloc_r+0x9c>
    135c:	e2844001 	add	r4, r4, #1
    1360:	e3140003 	tst	r4, #3
    1364:	e28cc008 	add	r12, r12, #8
    1368:	1affff1b 	bne	fdc <_malloc_r+0x1c4>
    136c:	e31e0003 	tst	lr, #3
    1370:	e24a3008 	sub	r3, r10, #8
    1374:	0a000062 	beq	1504 <_malloc_r+0x6ec>
    1378:	e59aa000 	ldr	r10, [r10]
    137c:	e15a0003 	cmp	r10, r3
    1380:	e24ee001 	sub	lr, lr, #1
    1384:	0afffff8 	beq	136c <_malloc_r+0x554>
    1388:	e5973004 	ldr	r3, [r7, #4]
    138c:	e1a00080 	lsl	r0, r0, #1
    1390:	e1500003 	cmp	r0, r3
    1394:	8affff3e 	bhi	1094 <_malloc_r+0x27c>
    1398:	e3500000 	cmp	r0, #0
    139c:	0affff3c 	beq	1094 <_malloc_r+0x27c>
    13a0:	e1130000 	tst	r3, r0
    13a4:	0a00005a 	beq	1514 <_malloc_r+0x6fc>
    13a8:	e1a0e004 	mov	lr, r4
    13ac:	eaffff07 	b	fd0 <_malloc_r+0x1b8>
    13b0:	e2843008 	add	r3, r4, #8
    13b4:	e5944014 	ldr	r4, [r4, #20]
    13b8:	e1530004 	cmp	r3, r4
    13bc:	028ee002 	addeq	lr, lr, #2
    13c0:	0afffed5 	beq	f1c <_malloc_r+0x104>
    13c4:	eafffead 	b	e80 <_malloc_r+0x68>
    13c8:	e0831001 	add	r1, r3, r1
    13cc:	e5910004 	ldr	r0, [r1, #4]
    13d0:	e1a04003 	mov	r4, r3
    13d4:	e5b42008 	ldr	r2, [r4, #8]!
    13d8:	e593300c 	ldr	r3, [r3, #12]
    13dc:	e3800001 	orr	r0, r0, #1
    13e0:	e5810004 	str	r0, [r1, #4]
    13e4:	e582300c 	str	r3, [r2, #12]
    13e8:	e5832008 	str	r2, [r3, #8]
    13ec:	e1a00006 	mov	r0, r6
    13f0:	eb000167 	bl	1994 <__malloc_unlock>
    13f4:	eafffeae 	b	eb4 <_malloc_r+0x9c>
    13f8:	e1a0a322 	lsr	r10, r2, #6
    13fc:	e28aa038 	add	r10, r10, #56	; 0x38
    1400:	e1a0008a 	lsl	r0, r10, #1
    1404:	eaffffb4 	b	12dc <_malloc_r+0x4c4>
    1408:	e1540007 	cmp	r4, r7
    140c:	0affff3d 	beq	1108 <_malloc_r+0x2f0>
    1410:	e59f3110 	ldr	r3, [pc, #272]	; 1528 <_malloc_r+0x710>
    1414:	e5934008 	ldr	r4, [r3, #8]
    1418:	e5943004 	ldr	r3, [r4, #4]
    141c:	e3c33003 	bic	r3, r3, #3
    1420:	eaffff78 	b	1208 <_malloc_r+0x3f0>
    1424:	e35e0f55 	cmp	lr, #340	; 0x154
    1428:	8a00000f 	bhi	146c <_malloc_r+0x654>
    142c:	e1a0e7a5 	lsr	lr, r5, #15
    1430:	e28ee077 	add	lr, lr, #119	; 0x77
    1434:	e1a0108e 	lsl	r1, lr, #1
    1438:	eafffea5 	b	ed4 <_malloc_r+0xbc>
    143c:	e59c2004 	ldr	r2, [r12, #4]
    1440:	e1a0a14a 	asr	r10, r10, #2
    1444:	e3a01001 	mov	r1, #1
    1448:	e1821a11 	orr	r1, r2, r1, lsl r10
    144c:	e1a02003 	mov	r2, r3
    1450:	e58c1004 	str	r1, [r12, #4]
    1454:	eaffffae 	b	1314 <_malloc_r+0x4fc>
    1458:	e3a03001 	mov	r3, #1
    145c:	e5883004 	str	r3, [r8, #4]
    1460:	e1a04008 	mov	r4, r8
    1464:	e3a03000 	mov	r3, #0
    1468:	eaffff66 	b	1208 <_malloc_r+0x3f0>
    146c:	e59f30bc 	ldr	r3, [pc, #188]	; 1530 <_malloc_r+0x718>
    1470:	e15e0003 	cmp	lr, r3
    1474:	91a0e925 	lsrls	lr, r5, #18
    1478:	928ee07c 	addls	lr, lr, #124	; 0x7c
    147c:	91a0108e 	lslls	r1, lr, #1
    1480:	83a010fc 	movhi	r1, #252	; 0xfc
    1484:	83a0e07e 	movhi	lr, #126	; 0x7e
    1488:	eafffe91 	b	ed4 <_malloc_r+0xbc>
    148c:	e5974008 	ldr	r4, [r7, #8]
    1490:	e5943004 	ldr	r3, [r4, #4]
    1494:	e3c33003 	bic	r3, r3, #3
    1498:	eaffff5a 	b	1208 <_malloc_r+0x3f0>
    149c:	e1b01a02 	lsls	r1, r2, #20
    14a0:	1affff1d 	bne	111c <_malloc_r+0x304>
    14a4:	e5972008 	ldr	r2, [r7, #8]
    14a8:	e08b100a 	add	r1, r11, r10
    14ac:	e3811001 	orr	r1, r1, #1
    14b0:	e5821004 	str	r1, [r2, #4]
    14b4:	eaffff46 	b	11d4 <_malloc_r+0x3bc>
    14b8:	e1a00006 	mov	r0, r6
    14bc:	e2841008 	add	r1, r4, #8
    14c0:	eb00047a 	bl	26b0 <_free_r>
    14c4:	e59f3060 	ldr	r3, [pc, #96]	; 152c <_malloc_r+0x714>
    14c8:	e5933004 	ldr	r3, [r3, #4]
    14cc:	eaffff40 	b	11d4 <_malloc_r+0x3bc>
    14d0:	e3530f55 	cmp	r3, #340	; 0x154
    14d4:	91a0a7a2 	lsrls	r10, r2, #15
    14d8:	928aa077 	addls	r10, r10, #119	; 0x77
    14dc:	91a0008a 	lslls	r0, r10, #1
    14e0:	9affff7d 	bls	12dc <_malloc_r+0x4c4>
    14e4:	e59f1044 	ldr	r1, [pc, #68]	; 1530 <_malloc_r+0x718>
    14e8:	e1530001 	cmp	r3, r1
    14ec:	91a0a922 	lsrls	r10, r2, #18
    14f0:	928aa07c 	addls	r10, r10, #124	; 0x7c
    14f4:	91a0008a 	lslls	r0, r10, #1
    14f8:	83a000fc 	movhi	r0, #252	; 0xfc
    14fc:	83a0a07e 	movhi	r10, #126	; 0x7e
    1500:	eaffff75 	b	12dc <_malloc_r+0x4c4>
    1504:	e5973004 	ldr	r3, [r7, #4]
    1508:	e1c33000 	bic	r3, r3, r0
    150c:	e5873004 	str	r3, [r7, #4]
    1510:	eaffff9d 	b	138c <_malloc_r+0x574>
    1514:	e1a00080 	lsl	r0, r0, #1
    1518:	e1130000 	tst	r3, r0
    151c:	e2844004 	add	r4, r4, #4
    1520:	1affffa0 	bne	13a8 <_malloc_r+0x590>
    1524:	eafffffa 	b	1514 <_malloc_r+0x6fc>
    1528:	00003db0 	.word	0x00003db0
    152c:	000041e4 	.word	0x000041e4
    1530:	00000554 	.word	0x00000554

00001534 <memchr>:
    1534:	e3100003 	tst	r0, #3
    1538:	e92d0070 	push	{r4, r5, r6}
    153c:	e20110ff 	and	r1, r1, #255	; 0xff
    1540:	0a00003c 	beq	1638 <memchr+0x104>
    1544:	e3520000 	cmp	r2, #0
    1548:	e242c001 	sub	r12, r2, #1
    154c:	0a00003b 	beq	1640 <memchr+0x10c>
    1550:	e5d03000 	ldrb	r3, [r0]
    1554:	e1530001 	cmp	r3, r1
    1558:	0a00001f 	beq	15dc <memchr+0xa8>
    155c:	e2803001 	add	r3, r0, #1
    1560:	ea000006 	b	1580 <memchr+0x4c>
    1564:	e35c0000 	cmp	r12, #0
    1568:	0a00001d 	beq	15e4 <memchr+0xb0>
    156c:	e5d02000 	ldrb	r2, [r0]
    1570:	e1520001 	cmp	r2, r1
    1574:	e2833001 	add	r3, r3, #1
    1578:	e24cc001 	sub	r12, r12, #1
    157c:	0a000016 	beq	15dc <memchr+0xa8>
    1580:	e3130003 	tst	r3, #3
    1584:	e1a00003 	mov	r0, r3
    1588:	1afffff5 	bne	1564 <memchr+0x30>
    158c:	e35c0003 	cmp	r12, #3
    1590:	8a000015 	bhi	15ec <memchr+0xb8>
    1594:	e35c0000 	cmp	r12, #0
    1598:	e24c4001 	sub	r4, r12, #1
    159c:	0a000010 	beq	15e4 <memchr+0xb0>
    15a0:	e5d03000 	ldrb	r3, [r0]
    15a4:	e1530001 	cmp	r3, r1
    15a8:	0a00000b 	beq	15dc <memchr+0xa8>
    15ac:	e2802001 	add	r2, r0, #1
    15b0:	e3a03000 	mov	r3, #0
    15b4:	ea000004 	b	15cc <memchr+0x98>
    15b8:	e5d0c000 	ldrb	r12, [r0]
    15bc:	e15c0001 	cmp	r12, r1
    15c0:	e2822001 	add	r2, r2, #1
    15c4:	e2833001 	add	r3, r3, #1
    15c8:	0a000003 	beq	15dc <memchr+0xa8>
    15cc:	e1540003 	cmp	r4, r3
    15d0:	e1a00002 	mov	r0, r2
    15d4:	1afffff7 	bne	15b8 <memchr+0x84>
    15d8:	e3a00000 	mov	r0, #0
    15dc:	e8bd0070 	pop	{r4, r5, r6}
    15e0:	e12fff1e 	bx	lr
    15e4:	e1a0000c 	mov	r0, r12
    15e8:	eafffffb 	b	15dc <memchr+0xa8>
    15ec:	e1816401 	orr	r6, r1, r1, lsl #8
    15f0:	e1866806 	orr	r6, r6, r6, lsl #16
    15f4:	e5903000 	ldr	r3, [r0]
    15f8:	e59f4048 	ldr	r4, [pc, #72]	; 1648 <memchr+0x114>
    15fc:	e0263003 	eor	r3, r6, r3
    1600:	e0834004 	add	r4, r3, r4
    1604:	e59f2040 	ldr	r2, [pc, #64]	; 164c <memchr+0x118>
    1608:	e1c44003 	bic	r4, r4, r3
    160c:	e0042002 	and	r2, r4, r2
    1610:	e3520000 	cmp	r2, #0
    1614:	e1a05000 	mov	r5, r0
    1618:	e2800004 	add	r0, r0, #4
    161c:	1a000003 	bne	1630 <memchr+0xfc>
    1620:	e24cc004 	sub	r12, r12, #4
    1624:	e35c0003 	cmp	r12, #3
    1628:	8afffff1 	bhi	15f4 <memchr+0xc0>
    162c:	eaffffd8 	b	1594 <memchr+0x60>
    1630:	e1a00005 	mov	r0, r5
    1634:	eaffffd6 	b	1594 <memchr+0x60>
    1638:	e1a0c002 	mov	r12, r2
    163c:	eaffffd2 	b	158c <memchr+0x58>
    1640:	e1a00002 	mov	r0, r2
    1644:	eaffffe4 	b	15dc <memchr+0xa8>
    1648:	fefefeff 	.word	0xfefefeff
    164c:	80808080 	.word	0x80808080

00001650 <memcpy>:
    1650:	e3520003 	cmp	r2, #3
    1654:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    1658:	8a000009 	bhi	1684 <memcpy+0x34>
    165c:	e3520000 	cmp	r2, #0
    1660:	0a000005 	beq	167c <memcpy+0x2c>
    1664:	e3a03000 	mov	r3, #0
    1668:	e7d1c003 	ldrb	r12, [r1, r3]
    166c:	e7c0c003 	strb	r12, [r0, r3]
    1670:	e2833001 	add	r3, r3, #1
    1674:	e1530002 	cmp	r3, r2
    1678:	1afffffa 	bne	1668 <memcpy+0x18>
    167c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    1680:	e12fff1e 	bx	lr
    1684:	e3100003 	tst	r0, #3
    1688:	e0802002 	add	r2, r0, r2
    168c:	0a00000b 	beq	16c0 <memcpy+0x70>
    1690:	e280c001 	add	r12, r0, #1
    1694:	e2814001 	add	r4, r1, #1
    1698:	e20c3003 	and	r3, r12, #3
    169c:	e5545001 	ldrb	r5, [r4, #-1]
    16a0:	e3530000 	cmp	r3, #0
    16a4:	e1a01004 	mov	r1, r4
    16a8:	e1a0300c 	mov	r3, r12
    16ac:	e54c5001 	strb	r5, [r12, #-1]
    16b0:	e2844001 	add	r4, r4, #1
    16b4:	e28cc001 	add	r12, r12, #1
    16b8:	1afffff6 	bne	1698 <memcpy+0x48>
    16bc:	ea000000 	b	16c4 <memcpy+0x74>
    16c0:	e1a03000 	mov	r3, r0
    16c4:	e211c003 	ands	r12, r1, #3
    16c8:	1a00004f 	bne	180c <memcpy+0x1bc>
    16cc:	e063c002 	rsb	r12, r3, r2
    16d0:	e35c003f 	cmp	r12, #63	; 0x3f
    16d4:	da000024 	ble	176c <memcpy+0x11c>
    16d8:	e591c000 	ldr	r12, [r1]
    16dc:	e583c000 	str	r12, [r3]
    16e0:	e591c004 	ldr	r12, [r1, #4]
    16e4:	e583c004 	str	r12, [r3, #4]
    16e8:	e591c008 	ldr	r12, [r1, #8]
    16ec:	e583c008 	str	r12, [r3, #8]
    16f0:	e591c00c 	ldr	r12, [r1, #12]
    16f4:	e583c00c 	str	r12, [r3, #12]
    16f8:	e591c010 	ldr	r12, [r1, #16]
    16fc:	e583c010 	str	r12, [r3, #16]
    1700:	e591c014 	ldr	r12, [r1, #20]
    1704:	e583c014 	str	r12, [r3, #20]
    1708:	e591c018 	ldr	r12, [r1, #24]
    170c:	e583c018 	str	r12, [r3, #24]
    1710:	e591c01c 	ldr	r12, [r1, #28]
    1714:	e583c01c 	str	r12, [r3, #28]
    1718:	e591c020 	ldr	r12, [r1, #32]
    171c:	e583c020 	str	r12, [r3, #32]
    1720:	e591c024 	ldr	r12, [r1, #36]	; 0x24
    1724:	e583c024 	str	r12, [r3, #36]	; 0x24
    1728:	e591c028 	ldr	r12, [r1, #40]	; 0x28
    172c:	e583c028 	str	r12, [r3, #40]	; 0x28
    1730:	e591c02c 	ldr	r12, [r1, #44]	; 0x2c
    1734:	e583c02c 	str	r12, [r3, #44]	; 0x2c
    1738:	e591c030 	ldr	r12, [r1, #48]	; 0x30
    173c:	e583c030 	str	r12, [r3, #48]	; 0x30
    1740:	e591c034 	ldr	r12, [r1, #52]	; 0x34
    1744:	e583c034 	str	r12, [r3, #52]	; 0x34
    1748:	e591c038 	ldr	r12, [r1, #56]	; 0x38
    174c:	e583c038 	str	r12, [r3, #56]	; 0x38
    1750:	e591c03c 	ldr	r12, [r1, #60]	; 0x3c
    1754:	e2833040 	add	r3, r3, #64	; 0x40
    1758:	e503c004 	str	r12, [r3, #-4]
    175c:	e063c002 	rsb	r12, r3, r2
    1760:	e35c003f 	cmp	r12, #63	; 0x3f
    1764:	e2811040 	add	r1, r1, #64	; 0x40
    1768:	caffffda 	bgt	16d8 <memcpy+0x88>
    176c:	e35c000f 	cmp	r12, #15
    1770:	da00000c 	ble	17a8 <memcpy+0x158>
    1774:	e591c000 	ldr	r12, [r1]
    1778:	e583c000 	str	r12, [r3]
    177c:	e591c004 	ldr	r12, [r1, #4]
    1780:	e583c004 	str	r12, [r3, #4]
    1784:	e591c008 	ldr	r12, [r1, #8]
    1788:	e583c008 	str	r12, [r3, #8]
    178c:	e591c00c 	ldr	r12, [r1, #12]
    1790:	e2833010 	add	r3, r3, #16
    1794:	e503c004 	str	r12, [r3, #-4]
    1798:	e063c002 	rsb	r12, r3, r2
    179c:	e35c000f 	cmp	r12, #15
    17a0:	e2811010 	add	r1, r1, #16
    17a4:	cafffff2 	bgt	1774 <memcpy+0x124>
    17a8:	e35c0003 	cmp	r12, #3
    17ac:	da00000a 	ble	17dc <memcpy+0x18c>
    17b0:	e283c004 	add	r12, r3, #4
    17b4:	e2814004 	add	r4, r1, #4
    17b8:	e06c3002 	rsb	r3, r12, r2
    17bc:	e5145004 	ldr	r5, [r4, #-4]
    17c0:	e3530003 	cmp	r3, #3
    17c4:	e1a01004 	mov	r1, r4
    17c8:	e1a0300c 	mov	r3, r12
    17cc:	e50c5004 	str	r5, [r12, #-4]
    17d0:	e2844004 	add	r4, r4, #4
    17d4:	e28cc004 	add	r12, r12, #4
    17d8:	cafffff6 	bgt	17b8 <memcpy+0x168>
    17dc:	e1520003 	cmp	r2, r3
    17e0:	82833001 	addhi	r3, r3, #1
    17e4:	82811001 	addhi	r1, r1, #1
    17e8:	82822001 	addhi	r2, r2, #1
    17ec:	9affffa2 	bls	167c <memcpy+0x2c>
    17f0:	e551c001 	ldrb	r12, [r1, #-1]
    17f4:	e2833001 	add	r3, r3, #1
    17f8:	e1530002 	cmp	r3, r2
    17fc:	e543c002 	strb	r12, [r3, #-2]
    1800:	e2811001 	add	r1, r1, #1
    1804:	1afffff9 	bne	17f0 <memcpy+0x1a0>
    1808:	eaffff9b 	b	167c <memcpy+0x2c>
    180c:	e0635002 	rsb	r5, r3, r2
    1810:	e06c4001 	rsb	r4, r12, r1
    1814:	e3550003 	cmp	r5, #3
    1818:	e5945000 	ldr	r5, [r4]
    181c:	daffffee 	ble	17dc <memcpy+0x18c>
    1820:	e26c6004 	rsb	r6, r12, #4
    1824:	e1a0718c 	lsl	r7, r12, #3
    1828:	e1a06186 	lsl	r6, r6, #3
    182c:	e283c004 	add	r12, r3, #4
    1830:	e1a08735 	lsr	r8, r5, r7
    1834:	e5b45004 	ldr	r5, [r4, #4]!
    1838:	e1888615 	orr	r8, r8, r5, lsl r6
    183c:	e06c3002 	rsb	r3, r12, r2
    1840:	e3530003 	cmp	r3, #3
    1844:	e50c8004 	str	r8, [r12, #-4]
    1848:	e1a0300c 	mov	r3, r12
    184c:	e2811004 	add	r1, r1, #4
    1850:	e28cc004 	add	r12, r12, #4
    1854:	cafffff5 	bgt	1830 <memcpy+0x1e0>
    1858:	eaffffdf 	b	17dc <memcpy+0x18c>

0000185c <memmove>:
    185c:	e1500001 	cmp	r0, r1
    1860:	e92d00f0 	push	{r4, r5, r6, r7}
    1864:	9a00000e 	bls	18a4 <memmove+0x48>
    1868:	e081c002 	add	r12, r1, r2
    186c:	e150000c 	cmp	r0, r12
    1870:	2a00000b 	bcs	18a4 <memmove+0x48>
    1874:	e3520000 	cmp	r2, #0
    1878:	e0803002 	add	r3, r0, r2
    187c:	e2422001 	sub	r2, r2, #1
    1880:	0a000005 	beq	189c <memmove+0x40>
    1884:	e1a0100c 	mov	r1, r12
    1888:	e571c001 	ldrb	r12, [r1, #-1]!
    188c:	e2422001 	sub	r2, r2, #1
    1890:	e3720001 	cmn	r2, #1
    1894:	e563c001 	strb	r12, [r3, #-1]!
    1898:	1afffffa 	bne	1888 <memmove+0x2c>
    189c:	e8bd00f0 	pop	{r4, r5, r6, r7}
    18a0:	e12fff1e 	bx	lr
    18a4:	e352000f 	cmp	r2, #15
    18a8:	8a000009 	bhi	18d4 <memmove+0x78>
    18ac:	e1a03000 	mov	r3, r0
    18b0:	e3520000 	cmp	r2, #0
    18b4:	0afffff8 	beq	189c <memmove+0x40>
    18b8:	e2411001 	sub	r1, r1, #1
    18bc:	e0832002 	add	r2, r3, r2
    18c0:	e5f1c001 	ldrb	r12, [r1, #1]!
    18c4:	e4c3c001 	strb	r12, [r3], #1
    18c8:	e1530002 	cmp	r3, r2
    18cc:	1afffffb 	bne	18c0 <memmove+0x64>
    18d0:	eafffff1 	b	189c <memmove+0x40>
    18d4:	e1813000 	orr	r3, r1, r0
    18d8:	e3130003 	tst	r3, #3
    18dc:	1a000027 	bne	1980 <memmove+0x124>
    18e0:	e1a0c001 	mov	r12, r1
    18e4:	e1a03000 	mov	r3, r0
    18e8:	e1a04002 	mov	r4, r2
    18ec:	e59c5000 	ldr	r5, [r12]
    18f0:	e5835000 	str	r5, [r3]
    18f4:	e59c5004 	ldr	r5, [r12, #4]
    18f8:	e5835004 	str	r5, [r3, #4]
    18fc:	e59c5008 	ldr	r5, [r12, #8]
    1900:	e5835008 	str	r5, [r3, #8]
    1904:	e2444010 	sub	r4, r4, #16
    1908:	e59c500c 	ldr	r5, [r12, #12]
    190c:	e354000f 	cmp	r4, #15
    1910:	e583500c 	str	r5, [r3, #12]
    1914:	e28cc010 	add	r12, r12, #16
    1918:	e2833010 	add	r3, r3, #16
    191c:	8afffff2 	bhi	18ec <memmove+0x90>
    1920:	e2424010 	sub	r4, r2, #16
    1924:	e3c4400f 	bic	r4, r4, #15
    1928:	e202c00f 	and	r12, r2, #15
    192c:	e2844010 	add	r4, r4, #16
    1930:	e35c0003 	cmp	r12, #3
    1934:	e0803004 	add	r3, r0, r4
    1938:	e0811004 	add	r1, r1, r4
    193c:	9a000011 	bls	1988 <memmove+0x12c>
    1940:	e24cc004 	sub	r12, r12, #4
    1944:	e1a0712c 	lsr	r7, r12, #2
    1948:	e0816107 	add	r6, r1, r7, lsl #2
    194c:	e1a0c001 	mov	r12, r1
    1950:	e2866004 	add	r6, r6, #4
    1954:	e1a04003 	mov	r4, r3
    1958:	e49c5004 	ldr	r5, [r12], #4
    195c:	e15c0006 	cmp	r12, r6
    1960:	e4845004 	str	r5, [r4], #4
    1964:	1afffffb 	bne	1958 <memmove+0xfc>
    1968:	e287c001 	add	r12, r7, #1
    196c:	e1a0c10c 	lsl	r12, r12, #2
    1970:	e2022003 	and	r2, r2, #3
    1974:	e081100c 	add	r1, r1, r12
    1978:	e083300c 	add	r3, r3, r12
    197c:	eaffffcb 	b	18b0 <memmove+0x54>
    1980:	e1a03000 	mov	r3, r0
    1984:	eaffffcb 	b	18b8 <memmove+0x5c>
    1988:	e1a0200c 	mov	r2, r12
    198c:	eaffffc7 	b	18b0 <memmove+0x54>

00001990 <__malloc_lock>:
    1990:	e12fff1e 	bx	lr

00001994 <__malloc_unlock>:
    1994:	e12fff1e 	bx	lr

00001998 <_realloc_r>:
    1998:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    199c:	e2514000 	subs	r4, r1, #0
    19a0:	e24dd00c 	sub	sp, sp, #12
    19a4:	e1a08000 	mov	r8, r0
    19a8:	e1a0b002 	mov	r11, r2
    19ac:	0a0000d1 	beq	1cf8 <_realloc_r+0x360>
    19b0:	ebfffff6 	bl	1990 <__malloc_lock>
    19b4:	e28b500b 	add	r5, r11, #11
    19b8:	e3550016 	cmp	r5, #22
    19bc:	83c55007 	bichi	r5, r5, #7
    19c0:	93a01010 	movls	r1, #16
    19c4:	81a06fa5 	lsrhi	r6, r5, #31
    19c8:	93a06000 	movls	r6, #0
    19cc:	91a05001 	movls	r5, r1
    19d0:	e5143004 	ldr	r3, [r4, #-4]
    19d4:	81a01005 	movhi	r1, r5
    19d8:	e155000b 	cmp	r5, r11
    19dc:	33866001 	orrcc	r6, r6, #1
    19e0:	e3560000 	cmp	r6, #0
    19e4:	e3c37003 	bic	r7, r3, #3
    19e8:	13a0300c 	movne	r3, #12
    19ec:	e244a008 	sub	r10, r4, #8
    19f0:	15883000 	strne	r3, [r8]
    19f4:	13a06000 	movne	r6, #0
    19f8:	1a00000f 	bne	1a3c <_realloc_r+0xa4>
    19fc:	e1570001 	cmp	r7, r1
    1a00:	ba000011 	blt	1a4c <_realloc_r+0xb4>
    1a04:	e1a06007 	mov	r6, r7
    1a08:	e0652006 	rsb	r2, r5, r6
    1a0c:	e352000f 	cmp	r2, #15
    1a10:	e2033001 	and	r3, r3, #1
    1a14:	8a00005e 	bhi	1b94 <_realloc_r+0x1fc>
    1a18:	e1833006 	orr	r3, r3, r6
    1a1c:	e58a3004 	str	r3, [r10, #4]
    1a20:	e08aa006 	add	r10, r10, r6
    1a24:	e59a3004 	ldr	r3, [r10, #4]
    1a28:	e3833001 	orr	r3, r3, #1
    1a2c:	e58a3004 	str	r3, [r10, #4]
    1a30:	e1a00008 	mov	r0, r8
    1a34:	ebffffd6 	bl	1994 <__malloc_unlock>
    1a38:	e1a06004 	mov	r6, r4
    1a3c:	e1a00006 	mov	r0, r6
    1a40:	e28dd00c 	add	sp, sp, #12
    1a44:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1a48:	e12fff1e 	bx	lr
    1a4c:	e59f24b4 	ldr	r2, [pc, #1204]	; 1f08 <_realloc_r+0x570>
    1a50:	e592c008 	ldr	r12, [r2, #8]
    1a54:	e08a0007 	add	r0, r10, r7
    1a58:	e15c0000 	cmp	r12, r0
    1a5c:	0a0000a9 	beq	1d08 <_realloc_r+0x370>
    1a60:	e590e004 	ldr	lr, [r0, #4]
    1a64:	e3ce9001 	bic	r9, lr, #1
    1a68:	e0809009 	add	r9, r0, r9
    1a6c:	e5999004 	ldr	r9, [r9, #4]
    1a70:	e3190001 	tst	r9, #1
    1a74:	11a0e006 	movne	lr, r6
    1a78:	11a0000e 	movne	r0, lr
    1a7c:	0a00003b 	beq	1b70 <_realloc_r+0x1d8>
    1a80:	e3130001 	tst	r3, #1
    1a84:	1a00004f 	bne	1bc8 <_realloc_r+0x230>
    1a88:	e5149008 	ldr	r9, [r4, #-8]
    1a8c:	e069900a 	rsb	r9, r9, r10
    1a90:	e5993004 	ldr	r3, [r9, #4]
    1a94:	e3500000 	cmp	r0, #0
    1a98:	e3c33003 	bic	r3, r3, #3
    1a9c:	0a000067 	beq	1c40 <_realloc_r+0x2a8>
    1aa0:	e150000c 	cmp	r0, r12
    1aa4:	e083c007 	add	r12, r3, r7
    1aa8:	0a0000ce 	beq	1de8 <_realloc_r+0x450>
    1aac:	e08e600c 	add	r6, lr, r12
    1ab0:	e1560001 	cmp	r6, r1
    1ab4:	ba000062 	blt	1c44 <_realloc_r+0x2ac>
    1ab8:	e2802008 	add	r2, r0, #8
    1abc:	e892000c 	ldm	r2, {r2, r3}
    1ac0:	e5832008 	str	r2, [r3, #8]
    1ac4:	e582300c 	str	r3, [r2, #12]
    1ac8:	e1a0a009 	mov	r10, r9
    1acc:	e599300c 	ldr	r3, [r9, #12]
    1ad0:	e5ba1008 	ldr	r1, [r10, #8]!
    1ad4:	e2472004 	sub	r2, r7, #4
    1ad8:	e3520024 	cmp	r2, #36	; 0x24
    1adc:	e581300c 	str	r3, [r1, #12]
    1ae0:	e5831008 	str	r1, [r3, #8]
    1ae4:	8a0000fa 	bhi	1ed4 <_realloc_r+0x53c>
    1ae8:	e3520013 	cmp	r2, #19
    1aec:	91a0300a 	movls	r3, r10
    1af0:	9a000014 	bls	1b48 <_realloc_r+0x1b0>
    1af4:	e5943000 	ldr	r3, [r4]
    1af8:	e5893008 	str	r3, [r9, #8]
    1afc:	e5943004 	ldr	r3, [r4, #4]
    1b00:	e352001b 	cmp	r2, #27
    1b04:	e589300c 	str	r3, [r9, #12]
    1b08:	92844008 	addls	r4, r4, #8
    1b0c:	92893010 	addls	r3, r9, #16
    1b10:	9a00000c 	bls	1b48 <_realloc_r+0x1b0>
    1b14:	e5943008 	ldr	r3, [r4, #8]
    1b18:	e5893010 	str	r3, [r9, #16]
    1b1c:	e594300c 	ldr	r3, [r4, #12]
    1b20:	e5893014 	str	r3, [r9, #20]
    1b24:	e3520024 	cmp	r2, #36	; 0x24
    1b28:	05943010 	ldreq	r3, [r4, #16]
    1b2c:	05893018 	streq	r3, [r9, #24]
    1b30:	05942014 	ldreq	r2, [r4, #20]
    1b34:	0589201c 	streq	r2, [r9, #28]
    1b38:	12893018 	addne	r3, r9, #24
    1b3c:	12844010 	addne	r4, r4, #16
    1b40:	02893020 	addeq	r3, r9, #32
    1b44:	02844018 	addeq	r4, r4, #24
    1b48:	e5942000 	ldr	r2, [r4]
    1b4c:	e5832000 	str	r2, [r3]
    1b50:	e5942004 	ldr	r2, [r4, #4]
    1b54:	e5832004 	str	r2, [r3, #4]
    1b58:	e5942008 	ldr	r2, [r4, #8]
    1b5c:	e5832008 	str	r2, [r3, #8]
    1b60:	e1a0400a 	mov	r4, r10
    1b64:	e5993004 	ldr	r3, [r9, #4]
    1b68:	e1a0a009 	mov	r10, r9
    1b6c:	eaffffa5 	b	1a08 <_realloc_r+0x70>
    1b70:	e3cee003 	bic	lr, lr, #3
    1b74:	e08e6007 	add	r6, lr, r7
    1b78:	e1560001 	cmp	r6, r1
    1b7c:	baffffbf 	blt	1a80 <_realloc_r+0xe8>
    1b80:	e2801008 	add	r1, r0, #8
    1b84:	e8910006 	ldm	r1, {r1, r2}
    1b88:	e581200c 	str	r2, [r1, #12]
    1b8c:	e5821008 	str	r1, [r2, #8]
    1b90:	eaffff9c 	b	1a08 <_realloc_r+0x70>
    1b94:	e08a1005 	add	r1, r10, r5
    1b98:	e3820001 	orr	r0, r2, #1
    1b9c:	e1835005 	orr	r5, r3, r5
    1ba0:	e58a5004 	str	r5, [r10, #4]
    1ba4:	e5810004 	str	r0, [r1, #4]
    1ba8:	e0812002 	add	r2, r1, r2
    1bac:	e5923004 	ldr	r3, [r2, #4]
    1bb0:	e3833001 	orr	r3, r3, #1
    1bb4:	e5823004 	str	r3, [r2, #4]
    1bb8:	e1a00008 	mov	r0, r8
    1bbc:	e2811008 	add	r1, r1, #8
    1bc0:	eb0002ba 	bl	26b0 <_free_r>
    1bc4:	eaffff99 	b	1a30 <_realloc_r+0x98>
    1bc8:	e1a00008 	mov	r0, r8
    1bcc:	e1a0100b 	mov	r1, r11
    1bd0:	ebfffc90 	bl	e18 <_malloc_r>
    1bd4:	e2506000 	subs	r6, r0, #0
    1bd8:	0a000015 	beq	1c34 <_realloc_r+0x29c>
    1bdc:	e5143004 	ldr	r3, [r4, #-4]
    1be0:	e3c32001 	bic	r2, r3, #1
    1be4:	e2461008 	sub	r1, r6, #8
    1be8:	e08a2002 	add	r2, r10, r2
    1bec:	e1510002 	cmp	r1, r2
    1bf0:	0a0000b3 	beq	1ec4 <_realloc_r+0x52c>
    1bf4:	e2472004 	sub	r2, r7, #4
    1bf8:	e3520024 	cmp	r2, #36	; 0x24
    1bfc:	8a000076 	bhi	1ddc <_realloc_r+0x444>
    1c00:	e3520013 	cmp	r2, #19
    1c04:	91a03006 	movls	r3, r6
    1c08:	91a02004 	movls	r2, r4
    1c0c:	8a000052 	bhi	1d5c <_realloc_r+0x3c4>
    1c10:	e5921000 	ldr	r1, [r2]
    1c14:	e5831000 	str	r1, [r3]
    1c18:	e5921004 	ldr	r1, [r2, #4]
    1c1c:	e5831004 	str	r1, [r3, #4]
    1c20:	e5922008 	ldr	r2, [r2, #8]
    1c24:	e5832008 	str	r2, [r3, #8]
    1c28:	e1a00008 	mov	r0, r8
    1c2c:	e1a01004 	mov	r1, r4
    1c30:	eb00029e 	bl	26b0 <_free_r>
    1c34:	e1a00008 	mov	r0, r8
    1c38:	ebffff55 	bl	1994 <__malloc_unlock>
    1c3c:	eaffff7e 	b	1a3c <_realloc_r+0xa4>
    1c40:	e083c007 	add	r12, r3, r7
    1c44:	e15c0001 	cmp	r12, r1
    1c48:	baffffde 	blt	1bc8 <_realloc_r+0x230>
    1c4c:	e1a06009 	mov	r6, r9
    1c50:	e599300c 	ldr	r3, [r9, #12]
    1c54:	e5b61008 	ldr	r1, [r6, #8]!
    1c58:	e2472004 	sub	r2, r7, #4
    1c5c:	e3520024 	cmp	r2, #36	; 0x24
    1c60:	e581300c 	str	r3, [r1, #12]
    1c64:	e5831008 	str	r1, [r3, #8]
    1c68:	8a000051 	bhi	1db4 <_realloc_r+0x41c>
    1c6c:	e3520013 	cmp	r2, #19
    1c70:	91a03006 	movls	r3, r6
    1c74:	9a000014 	bls	1ccc <_realloc_r+0x334>
    1c78:	e5943000 	ldr	r3, [r4]
    1c7c:	e5893008 	str	r3, [r9, #8]
    1c80:	e5943004 	ldr	r3, [r4, #4]
    1c84:	e352001b 	cmp	r2, #27
    1c88:	e589300c 	str	r3, [r9, #12]
    1c8c:	92844008 	addls	r4, r4, #8
    1c90:	92893010 	addls	r3, r9, #16
    1c94:	9a00000c 	bls	1ccc <_realloc_r+0x334>
    1c98:	e5943008 	ldr	r3, [r4, #8]
    1c9c:	e5893010 	str	r3, [r9, #16]
    1ca0:	e594300c 	ldr	r3, [r4, #12]
    1ca4:	e5893014 	str	r3, [r9, #20]
    1ca8:	e3520024 	cmp	r2, #36	; 0x24
    1cac:	05943010 	ldreq	r3, [r4, #16]
    1cb0:	05893018 	streq	r3, [r9, #24]
    1cb4:	05942014 	ldreq	r2, [r4, #20]
    1cb8:	0589201c 	streq	r2, [r9, #28]
    1cbc:	12893018 	addne	r3, r9, #24
    1cc0:	12844010 	addne	r4, r4, #16
    1cc4:	02893020 	addeq	r3, r9, #32
    1cc8:	02844018 	addeq	r4, r4, #24
    1ccc:	e5942000 	ldr	r2, [r4]
    1cd0:	e5832000 	str	r2, [r3]
    1cd4:	e5942004 	ldr	r2, [r4, #4]
    1cd8:	e5832004 	str	r2, [r3, #4]
    1cdc:	e5942008 	ldr	r2, [r4, #8]
    1ce0:	e5832008 	str	r2, [r3, #8]
    1ce4:	e1a04006 	mov	r4, r6
    1ce8:	e5993004 	ldr	r3, [r9, #4]
    1cec:	e1a0600c 	mov	r6, r12
    1cf0:	e1a0a009 	mov	r10, r9
    1cf4:	eaffff43 	b	1a08 <_realloc_r+0x70>
    1cf8:	e1a01002 	mov	r1, r2
    1cfc:	ebfffc45 	bl	e18 <_malloc_r>
    1d00:	e1a06000 	mov	r6, r0
    1d04:	eaffff4c 	b	1a3c <_realloc_r+0xa4>
    1d08:	e59ce004 	ldr	lr, [r12, #4]
    1d0c:	e3cee003 	bic	lr, lr, #3
    1d10:	e08e0007 	add	r0, lr, r7
    1d14:	e2856010 	add	r6, r5, #16
    1d18:	e1500006 	cmp	r0, r6
    1d1c:	b1a0000c 	movlt	r0, r12
    1d20:	baffff56 	blt	1a80 <_realloc_r+0xe8>
    1d24:	e0653000 	rsb	r3, r5, r0
    1d28:	e08aa005 	add	r10, r10, r5
    1d2c:	e3833001 	orr	r3, r3, #1
    1d30:	e58a3004 	str	r3, [r10, #4]
    1d34:	e5143004 	ldr	r3, [r4, #-4]
    1d38:	e2033001 	and	r3, r3, #1
    1d3c:	e1855003 	orr	r5, r5, r3
    1d40:	e59f31c0 	ldr	r3, [pc, #448]	; 1f08 <_realloc_r+0x570>
    1d44:	e5045004 	str	r5, [r4, #-4]
    1d48:	e1a00008 	mov	r0, r8
    1d4c:	e583a008 	str	r10, [r3, #8]
    1d50:	e1a06004 	mov	r6, r4
    1d54:	ebffff0e 	bl	1994 <__malloc_unlock>
    1d58:	eaffff37 	b	1a3c <_realloc_r+0xa4>
    1d5c:	e5943000 	ldr	r3, [r4]
    1d60:	e5863000 	str	r3, [r6]
    1d64:	e5943004 	ldr	r3, [r4, #4]
    1d68:	e352001b 	cmp	r2, #27
    1d6c:	e5863004 	str	r3, [r6, #4]
    1d70:	92842008 	addls	r2, r4, #8
    1d74:	92863008 	addls	r3, r6, #8
    1d78:	9affffa4 	bls	1c10 <_realloc_r+0x278>
    1d7c:	e5943008 	ldr	r3, [r4, #8]
    1d80:	e5863008 	str	r3, [r6, #8]
    1d84:	e594300c 	ldr	r3, [r4, #12]
    1d88:	e586300c 	str	r3, [r6, #12]
    1d8c:	e3520024 	cmp	r2, #36	; 0x24
    1d90:	05943010 	ldreq	r3, [r4, #16]
    1d94:	05863010 	streq	r3, [r6, #16]
    1d98:	05942014 	ldreq	r2, [r4, #20]
    1d9c:	12863010 	addne	r3, r6, #16
    1da0:	05862014 	streq	r2, [r6, #20]
    1da4:	12842010 	addne	r2, r4, #16
    1da8:	02863018 	addeq	r3, r6, #24
    1dac:	02842018 	addeq	r2, r4, #24
    1db0:	eaffff96 	b	1c10 <_realloc_r+0x278>
    1db4:	e1a01004 	mov	r1, r4
    1db8:	e1a00006 	mov	r0, r6
    1dbc:	e58dc004 	str	r12, [sp, #4]
    1dc0:	ebfffea5 	bl	185c <memmove>
    1dc4:	e59dc004 	ldr	r12, [sp, #4]
    1dc8:	e1a04006 	mov	r4, r6
    1dcc:	e5993004 	ldr	r3, [r9, #4]
    1dd0:	e1a0600c 	mov	r6, r12
    1dd4:	e1a0a009 	mov	r10, r9
    1dd8:	eaffff0a 	b	1a08 <_realloc_r+0x70>
    1ddc:	e1a01004 	mov	r1, r4
    1de0:	ebfffe9d 	bl	185c <memmove>
    1de4:	eaffff8f 	b	1c28 <_realloc_r+0x290>
    1de8:	e08e300c 	add	r3, lr, r12
    1dec:	e2850010 	add	r0, r5, #16
    1df0:	e1530000 	cmp	r3, r0
    1df4:	baffff92 	blt	1c44 <_realloc_r+0x2ac>
    1df8:	e1a06009 	mov	r6, r9
    1dfc:	e599100c 	ldr	r1, [r9, #12]
    1e00:	e5b60008 	ldr	r0, [r6, #8]!
    1e04:	e2472004 	sub	r2, r7, #4
    1e08:	e3520024 	cmp	r2, #36	; 0x24
    1e0c:	e580100c 	str	r1, [r0, #12]
    1e10:	e5810008 	str	r0, [r1, #8]
    1e14:	8a000035 	bhi	1ef0 <_realloc_r+0x558>
    1e18:	e3520013 	cmp	r2, #19
    1e1c:	91a02006 	movls	r2, r6
    1e20:	9a000014 	bls	1e78 <_realloc_r+0x4e0>
    1e24:	e5941000 	ldr	r1, [r4]
    1e28:	e5891008 	str	r1, [r9, #8]
    1e2c:	e5941004 	ldr	r1, [r4, #4]
    1e30:	e352001b 	cmp	r2, #27
    1e34:	e589100c 	str	r1, [r9, #12]
    1e38:	92892010 	addls	r2, r9, #16
    1e3c:	92844008 	addls	r4, r4, #8
    1e40:	9a00000c 	bls	1e78 <_realloc_r+0x4e0>
    1e44:	e5941008 	ldr	r1, [r4, #8]
    1e48:	e5891010 	str	r1, [r9, #16]
    1e4c:	e594100c 	ldr	r1, [r4, #12]
    1e50:	e5891014 	str	r1, [r9, #20]
    1e54:	e3520024 	cmp	r2, #36	; 0x24
    1e58:	05942010 	ldreq	r2, [r4, #16]
    1e5c:	05892018 	streq	r2, [r9, #24]
    1e60:	05941014 	ldreq	r1, [r4, #20]
    1e64:	0589101c 	streq	r1, [r9, #28]
    1e68:	12892018 	addne	r2, r9, #24
    1e6c:	12844010 	addne	r4, r4, #16
    1e70:	02892020 	addeq	r2, r9, #32
    1e74:	02844018 	addeq	r4, r4, #24
    1e78:	e5941000 	ldr	r1, [r4]
    1e7c:	e5821000 	str	r1, [r2]
    1e80:	e5941004 	ldr	r1, [r4, #4]
    1e84:	e5821004 	str	r1, [r2, #4]
    1e88:	e5941008 	ldr	r1, [r4, #8]
    1e8c:	e5821008 	str	r1, [r2, #8]
    1e90:	e0653003 	rsb	r3, r5, r3
    1e94:	e0892005 	add	r2, r9, r5
    1e98:	e3833001 	orr	r3, r3, #1
    1e9c:	e5823004 	str	r3, [r2, #4]
    1ea0:	e5993004 	ldr	r3, [r9, #4]
    1ea4:	e2033001 	and	r3, r3, #1
    1ea8:	e1855003 	orr	r5, r5, r3
    1eac:	e59f3054 	ldr	r3, [pc, #84]	; 1f08 <_realloc_r+0x570>
    1eb0:	e5895004 	str	r5, [r9, #4]
    1eb4:	e1a00008 	mov	r0, r8
    1eb8:	e5832008 	str	r2, [r3, #8]
    1ebc:	ebfffeb4 	bl	1994 <__malloc_unlock>
    1ec0:	eafffedd 	b	1a3c <_realloc_r+0xa4>
    1ec4:	e5166004 	ldr	r6, [r6, #-4]
    1ec8:	e3c66003 	bic	r6, r6, #3
    1ecc:	e0866007 	add	r6, r6, r7
    1ed0:	eafffecc 	b	1a08 <_realloc_r+0x70>
    1ed4:	e1a01004 	mov	r1, r4
    1ed8:	e1a0000a 	mov	r0, r10
    1edc:	ebfffe5e 	bl	185c <memmove>
    1ee0:	e1a0400a 	mov	r4, r10
    1ee4:	e5993004 	ldr	r3, [r9, #4]
    1ee8:	e1a0a009 	mov	r10, r9
    1eec:	eafffec5 	b	1a08 <_realloc_r+0x70>
    1ef0:	e1a00006 	mov	r0, r6
    1ef4:	e1a01004 	mov	r1, r4
    1ef8:	e58d3004 	str	r3, [sp, #4]
    1efc:	ebfffe56 	bl	185c <memmove>
    1f00:	e59d3004 	ldr	r3, [sp, #4]
    1f04:	eaffffe1 	b	1e90 <_realloc_r+0x4f8>
    1f08:	00003db0 	.word	0x00003db0

00001f0c <_sbrk_r>:
    1f0c:	e92d4038 	push	{r3, r4, r5, lr}
    1f10:	e59f4030 	ldr	r4, [pc, #48]	; 1f48 <_sbrk_r+0x3c>
    1f14:	e3a03000 	mov	r3, #0
    1f18:	e1a05000 	mov	r5, r0
    1f1c:	e1a00001 	mov	r0, r1
    1f20:	e5843000 	str	r3, [r4]
    1f24:	eb00055c 	bl	349c <_sbrk>
    1f28:	e3700001 	cmn	r0, #1
    1f2c:	0a000001 	beq	1f38 <_sbrk_r+0x2c>
    1f30:	e8bd4038 	pop	{r3, r4, r5, lr}
    1f34:	e12fff1e 	bx	lr
    1f38:	e5943000 	ldr	r3, [r4]
    1f3c:	e3530000 	cmp	r3, #0
    1f40:	15853000 	strne	r3, [r5]
    1f44:	eafffff9 	b	1f30 <_sbrk_r+0x24>
    1f48:	00004218 	.word	0x00004218

00001f4c <__swsetup_r>:
    1f4c:	e92d4038 	push	{r3, r4, r5, lr}
    1f50:	e59f3128 	ldr	r3, [pc, #296]	; 2080 <__swsetup_r+0x134>
    1f54:	e5933000 	ldr	r3, [r3]
    1f58:	e3530000 	cmp	r3, #0
    1f5c:	e1a05000 	mov	r5, r0
    1f60:	e1a04001 	mov	r4, r1
    1f64:	0a000002 	beq	1f74 <__swsetup_r+0x28>
    1f68:	e5932038 	ldr	r2, [r3, #56]	; 0x38
    1f6c:	e3520000 	cmp	r2, #0
    1f70:	0a00002e 	beq	2030 <__swsetup_r+0xe4>
    1f74:	e1d430bc 	ldrh	r3, [r4, #12]
    1f78:	e3130008 	tst	r3, #8
    1f7c:	e1a02003 	mov	r2, r3
    1f80:	0a00000c 	beq	1fb8 <__swsetup_r+0x6c>
    1f84:	e5942010 	ldr	r2, [r4, #16]
    1f88:	e3520000 	cmp	r2, #0
    1f8c:	0a000012 	beq	1fdc <__swsetup_r+0x90>
    1f90:	e2131001 	ands	r1, r3, #1
    1f94:	1a000019 	bne	2000 <__swsetup_r+0xb4>
    1f98:	e3130002 	tst	r3, #2
    1f9c:	05941014 	ldreq	r1, [r4, #20]
    1fa0:	e3520000 	cmp	r2, #0
    1fa4:	e5841008 	str	r1, [r4, #8]
    1fa8:	0a00001b 	beq	201c <__swsetup_r+0xd0>
    1fac:	e3a00000 	mov	r0, #0
    1fb0:	e8bd4038 	pop	{r3, r4, r5, lr}
    1fb4:	e12fff1e 	bx	lr
    1fb8:	e3130010 	tst	r3, #16
    1fbc:	0a000019 	beq	2028 <__swsetup_r+0xdc>
    1fc0:	e3120004 	tst	r2, #4
    1fc4:	1a00001c 	bne	203c <__swsetup_r+0xf0>
    1fc8:	e5942010 	ldr	r2, [r4, #16]
    1fcc:	e3833008 	orr	r3, r3, #8
    1fd0:	e3520000 	cmp	r2, #0
    1fd4:	e1c430bc 	strh	r3, [r4, #12]
    1fd8:	1affffec 	bne	1f90 <__swsetup_r+0x44>
    1fdc:	e2031d0a 	and	r1, r3, #640	; 0x280
    1fe0:	e3510c02 	cmp	r1, #512	; 0x200
    1fe4:	0affffe9 	beq	1f90 <__swsetup_r+0x44>
    1fe8:	e1a00005 	mov	r0, r5
    1fec:	e1a01004 	mov	r1, r4
    1ff0:	eb00028e 	bl	2a30 <__smakebuf_r>
    1ff4:	e1d430bc 	ldrh	r3, [r4, #12]
    1ff8:	e5942010 	ldr	r2, [r4, #16]
    1ffc:	eaffffe3 	b	1f90 <__swsetup_r+0x44>
    2000:	e5943014 	ldr	r3, [r4, #20]
    2004:	e3a01000 	mov	r1, #0
    2008:	e2633000 	rsb	r3, r3, #0
    200c:	e3520000 	cmp	r2, #0
    2010:	e5841008 	str	r1, [r4, #8]
    2014:	e5843018 	str	r3, [r4, #24]
    2018:	1affffe3 	bne	1fac <__swsetup_r+0x60>
    201c:	e1d430bc 	ldrh	r3, [r4, #12]
    2020:	e3130080 	tst	r3, #128	; 0x80
    2024:	0affffe0 	beq	1fac <__swsetup_r+0x60>
    2028:	e3e00000 	mvn	r0, #0
    202c:	eaffffdf 	b	1fb0 <__swsetup_r+0x64>
    2030:	e1a00003 	mov	r0, r3
    2034:	eb0000ec 	bl	23ec <__sinit>
    2038:	eaffffcd 	b	1f74 <__swsetup_r+0x28>
    203c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    2040:	e3510000 	cmp	r1, #0
    2044:	0a000007 	beq	2068 <__swsetup_r+0x11c>
    2048:	e2842040 	add	r2, r4, #64	; 0x40
    204c:	e1510002 	cmp	r1, r2
    2050:	0a000002 	beq	2060 <__swsetup_r+0x114>
    2054:	e1a00005 	mov	r0, r5
    2058:	eb000194 	bl	26b0 <_free_r>
    205c:	e1d430bc 	ldrh	r3, [r4, #12]
    2060:	e3a02000 	mov	r2, #0
    2064:	e5842030 	str	r2, [r4, #48]	; 0x30
    2068:	e5942010 	ldr	r2, [r4, #16]
    206c:	e3a01000 	mov	r1, #0
    2070:	e3c33024 	bic	r3, r3, #36	; 0x24
    2074:	e5841004 	str	r1, [r4, #4]
    2078:	e5842000 	str	r2, [r4]
    207c:	eaffffd2 	b	1fcc <__swsetup_r+0x80>
    2080:	00003980 	.word	0x00003980

00002084 <_fflush_r>:
    2084:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    2088:	e2507000 	subs	r7, r0, #0
    208c:	e1a04001 	mov	r4, r1
    2090:	0a000002 	beq	20a0 <_fflush_r+0x1c>
    2094:	e5973038 	ldr	r3, [r7, #56]	; 0x38
    2098:	e3530000 	cmp	r3, #0
    209c:	0a000059 	beq	2208 <_fflush_r+0x184>
    20a0:	e1d420bc 	ldrh	r2, [r4, #12]
    20a4:	e3520000 	cmp	r2, #0
    20a8:	0a000023 	beq	213c <_fflush_r+0xb8>
    20ac:	e3120008 	tst	r2, #8
    20b0:	0a000024 	beq	2148 <_fflush_r+0xc4>
    20b4:	e5946010 	ldr	r6, [r4, #16]
    20b8:	e3560000 	cmp	r6, #0
    20bc:	0a00001e 	beq	213c <_fflush_r+0xb8>
    20c0:	e5945000 	ldr	r5, [r4]
    20c4:	e3120003 	tst	r2, #3
    20c8:	05943014 	ldreq	r3, [r4, #20]
    20cc:	e0665005 	rsb	r5, r6, r5
    20d0:	13a03000 	movne	r3, #0
    20d4:	e3550000 	cmp	r5, #0
    20d8:	e5846000 	str	r6, [r4]
    20dc:	e5843008 	str	r3, [r4, #8]
    20e0:	ca000003 	bgt	20f4 <_fflush_r+0x70>
    20e4:	ea000014 	b	213c <_fflush_r+0xb8>
    20e8:	e3550000 	cmp	r5, #0
    20ec:	e0866000 	add	r6, r6, r0
    20f0:	da000011 	ble	213c <_fflush_r+0xb8>
    20f4:	e1a03005 	mov	r3, r5
    20f8:	e1a02006 	mov	r2, r6
    20fc:	e1a00007 	mov	r0, r7
    2100:	e594101c 	ldr	r1, [r4, #28]
    2104:	e594c024 	ldr	r12, [r4, #36]	; 0x24
    2108:	e1a0e00f 	mov	lr, pc
    210c:	e12fff1c 	bx	r12
    2110:	e3500000 	cmp	r0, #0
    2114:	e0605005 	rsb	r5, r0, r5
    2118:	cafffff2 	bgt	20e8 <_fflush_r+0x64>
    211c:	e1d430bc 	ldrh	r3, [r4, #12]
    2120:	e3833040 	orr	r3, r3, #64	; 0x40
    2124:	e1c430bc 	strh	r3, [r4, #12]
    2128:	e3e00000 	mvn	r0, #0
    212c:	ea000003 	b	2140 <_fflush_r+0xbc>
    2130:	e594103c 	ldr	r1, [r4, #60]	; 0x3c
    2134:	e3510000 	cmp	r1, #0
    2138:	ca000007 	bgt	215c <_fflush_r+0xd8>
    213c:	e3a00000 	mov	r0, #0
    2140:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2144:	e12fff1e 	bx	lr
    2148:	e5941004 	ldr	r1, [r4, #4]
    214c:	e3823b02 	orr	r3, r2, #2048	; 0x800
    2150:	e3510000 	cmp	r1, #0
    2154:	e1c430bc 	strh	r3, [r4, #12]
    2158:	dafffff4 	ble	2130 <_fflush_r+0xac>
    215c:	e594c028 	ldr	r12, [r4, #40]	; 0x28
    2160:	e35c0000 	cmp	r12, #0
    2164:	0afffff4 	beq	213c <_fflush_r+0xb8>
    2168:	e3a01000 	mov	r1, #0
    216c:	e2126a01 	ands	r6, r2, #4096	; 0x1000
    2170:	e5975000 	ldr	r5, [r7]
    2174:	e5871000 	str	r1, [r7]
    2178:	0a000024 	beq	2210 <_fflush_r+0x18c>
    217c:	e5942050 	ldr	r2, [r4, #80]	; 0x50
    2180:	e3130004 	tst	r3, #4
    2184:	0a000005 	beq	21a0 <_fflush_r+0x11c>
    2188:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    218c:	e5943004 	ldr	r3, [r4, #4]
    2190:	e3510000 	cmp	r1, #0
    2194:	e0632002 	rsb	r2, r3, r2
    2198:	1594303c 	ldrne	r3, [r4, #60]	; 0x3c
    219c:	10632002 	rsbne	r2, r3, r2
    21a0:	e1a00007 	mov	r0, r7
    21a4:	e594101c 	ldr	r1, [r4, #28]
    21a8:	e3a03000 	mov	r3, #0
    21ac:	e1a0e00f 	mov	lr, pc
    21b0:	e12fff1c 	bx	r12
    21b4:	e3700001 	cmn	r0, #1
    21b8:	0a000020 	beq	2240 <_fflush_r+0x1bc>
    21bc:	e1d430bc 	ldrh	r3, [r4, #12]
    21c0:	e5942010 	ldr	r2, [r4, #16]
    21c4:	e3c31b02 	bic	r1, r3, #2048	; 0x800
    21c8:	e3130a01 	tst	r3, #4096	; 0x1000
    21cc:	e3a03000 	mov	r3, #0
    21d0:	e1c410bc 	strh	r1, [r4, #12]
    21d4:	e884000c 	stm	r4, {r2, r3}
    21d8:	1a000028 	bne	2280 <_fflush_r+0x1fc>
    21dc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    21e0:	e3510000 	cmp	r1, #0
    21e4:	e5875000 	str	r5, [r7]
    21e8:	0affffd3 	beq	213c <_fflush_r+0xb8>
    21ec:	e2843040 	add	r3, r4, #64	; 0x40
    21f0:	e1510003 	cmp	r1, r3
    21f4:	11a00007 	movne	r0, r7
    21f8:	1b00012c 	blne	26b0 <_free_r>
    21fc:	e3a00000 	mov	r0, #0
    2200:	e5840030 	str	r0, [r4, #48]	; 0x30
    2204:	eaffffcd 	b	2140 <_fflush_r+0xbc>
    2208:	eb000077 	bl	23ec <__sinit>
    220c:	eaffffa3 	b	20a0 <_fflush_r+0x1c>
    2210:	e1a02006 	mov	r2, r6
    2214:	e1a00007 	mov	r0, r7
    2218:	e594101c 	ldr	r1, [r4, #28]
    221c:	e3a03001 	mov	r3, #1
    2220:	e1a0e00f 	mov	lr, pc
    2224:	e12fff1c 	bx	r12
    2228:	e3700001 	cmn	r0, #1
    222c:	e1a02000 	mov	r2, r0
    2230:	0a000014 	beq	2288 <_fflush_r+0x204>
    2234:	e1d430bc 	ldrh	r3, [r4, #12]
    2238:	e594c028 	ldr	r12, [r4, #40]	; 0x28
    223c:	eaffffcf 	b	2180 <_fflush_r+0xfc>
    2240:	e597c000 	ldr	r12, [r7]
    2244:	e35c001d 	cmp	r12, #29
    2248:	8affffb3 	bhi	211c <_fflush_r+0x98>
    224c:	e59f3058 	ldr	r3, [pc, #88]	; 22ac <_fflush_r+0x228>
    2250:	e1b03c13 	lsls	r3, r3, r12
    2254:	5affffb0 	bpl	211c <_fflush_r+0x98>
    2258:	e1d430bc 	ldrh	r3, [r4, #12]
    225c:	e5942010 	ldr	r2, [r4, #16]
    2260:	e3c31b02 	bic	r1, r3, #2048	; 0x800
    2264:	e3130a01 	tst	r3, #4096	; 0x1000
    2268:	e3a03000 	mov	r3, #0
    226c:	e1c410bc 	strh	r1, [r4, #12]
    2270:	e884000c 	stm	r4, {r2, r3}
    2274:	0affffd8 	beq	21dc <_fflush_r+0x158>
    2278:	e35c0000 	cmp	r12, #0
    227c:	1affffd6 	bne	21dc <_fflush_r+0x158>
    2280:	e5840050 	str	r0, [r4, #80]	; 0x50
    2284:	eaffffd4 	b	21dc <_fflush_r+0x158>
    2288:	e5973000 	ldr	r3, [r7]
    228c:	e3530000 	cmp	r3, #0
    2290:	0affffe7 	beq	2234 <_fflush_r+0x1b0>
    2294:	e353001d 	cmp	r3, #29
    2298:	13530016 	cmpne	r3, #22
    229c:	05875000 	streq	r5, [r7]
    22a0:	01a00006 	moveq	r0, r6
    22a4:	0affffa5 	beq	2140 <_fflush_r+0xbc>
    22a8:	eaffff9b 	b	211c <_fflush_r+0x98>
    22ac:	80000204 	.word	0x80000204

000022b0 <fflush>:
    22b0:	e2501000 	subs	r1, r0, #0
    22b4:	e92d4008 	push	{r3, lr}
    22b8:	0a000003 	beq	22cc <fflush+0x1c>
    22bc:	e59f3020 	ldr	r3, [pc, #32]	; 22e4 <fflush+0x34>
    22c0:	e5930000 	ldr	r0, [r3]
    22c4:	e8bd4008 	pop	{r3, lr}
    22c8:	eaffff6d 	b	2084 <_fflush_r>
    22cc:	e59f3014 	ldr	r3, [pc, #20]	; 22e8 <fflush+0x38>
    22d0:	e59f1014 	ldr	r1, [pc, #20]	; 22ec <fflush+0x3c>
    22d4:	e5930000 	ldr	r0, [r3]
    22d8:	eb0001b1 	bl	29a4 <_fwalk_reent>
    22dc:	e8bd4008 	pop	{r3, lr}
    22e0:	e12fff1e 	bx	lr
    22e4:	00003980 	.word	0x00003980
    22e8:	00003914 	.word	0x00003914
    22ec:	00002084 	.word	0x00002084

000022f0 <__fp_lock>:
    22f0:	e3a00000 	mov	r0, #0
    22f4:	e12fff1e 	bx	lr

000022f8 <__fp_unlock>:
    22f8:	e3a00000 	mov	r0, #0
    22fc:	e12fff1e 	bx	lr

00002300 <_cleanup_r>:
    2300:	e92d4008 	push	{r3, lr}
    2304:	e59f1008 	ldr	r1, [pc, #8]	; 2314 <_cleanup_r+0x14>
    2308:	eb000183 	bl	291c <_fwalk>
    230c:	e8bd4008 	pop	{r3, lr}
    2310:	e12fff1e 	bx	lr
    2314:	000030b0 	.word	0x000030b0

00002318 <std.isra.0>:
    2318:	e3a03000 	mov	r3, #0
    231c:	e92d4010 	push	{r4, lr}
    2320:	e1a04000 	mov	r4, r0
    2324:	e1c010bc 	strh	r1, [r0, #12]
    2328:	e1c020be 	strh	r2, [r0, #14]
    232c:	e5803000 	str	r3, [r0]
    2330:	e5803004 	str	r3, [r0, #4]
    2334:	e5803008 	str	r3, [r0, #8]
    2338:	e5803064 	str	r3, [r0, #100]	; 0x64
    233c:	e5803010 	str	r3, [r0, #16]
    2340:	e5803014 	str	r3, [r0, #20]
    2344:	e5803018 	str	r3, [r0, #24]
    2348:	e1a01003 	mov	r1, r3
    234c:	e280005c 	add	r0, r0, #92	; 0x5c
    2350:	e3a02008 	mov	r2, #8
    2354:	eb00020c 	bl	2b8c <memset>
    2358:	e59f3024 	ldr	r3, [pc, #36]	; 2384 <std.isra.0+0x6c>
    235c:	e5843020 	str	r3, [r4, #32]
    2360:	e59f3020 	ldr	r3, [pc, #32]	; 2388 <std.isra.0+0x70>
    2364:	e5843024 	str	r3, [r4, #36]	; 0x24
    2368:	e59f301c 	ldr	r3, [pc, #28]	; 238c <std.isra.0+0x74>
    236c:	e5843028 	str	r3, [r4, #40]	; 0x28
    2370:	e59f3018 	ldr	r3, [pc, #24]	; 2390 <std.isra.0+0x78>
    2374:	e584401c 	str	r4, [r4, #28]
    2378:	e584302c 	str	r3, [r4, #44]	; 0x2c
    237c:	e8bd4010 	pop	{r4, lr}
    2380:	e12fff1e 	bx	lr
    2384:	00002e5c 	.word	0x00002e5c
    2388:	00002e98 	.word	0x00002e98
    238c:	00002ef0 	.word	0x00002ef0
    2390:	00002f24 	.word	0x00002f24

00002394 <__sfmoreglue>:
    2394:	e92d4070 	push	{r4, r5, r6, lr}
    2398:	e0816081 	add	r6, r1, r1, lsl #1
    239c:	e0816106 	add	r6, r1, r6, lsl #2
    23a0:	e1a06186 	lsl	r6, r6, #3
    23a4:	e1a05001 	mov	r5, r1
    23a8:	e286100c 	add	r1, r6, #12
    23ac:	ebfffa99 	bl	e18 <_malloc_r>
    23b0:	e2504000 	subs	r4, r0, #0
    23b4:	0a000005 	beq	23d0 <__sfmoreglue+0x3c>
    23b8:	e284000c 	add	r0, r4, #12
    23bc:	e3a01000 	mov	r1, #0
    23c0:	e8840022 	stm	r4, {r1, r5}
    23c4:	e5840008 	str	r0, [r4, #8]
    23c8:	e1a02006 	mov	r2, r6
    23cc:	eb0001ee 	bl	2b8c <memset>
    23d0:	e1a00004 	mov	r0, r4
    23d4:	e8bd4070 	pop	{r4, r5, r6, lr}
    23d8:	e12fff1e 	bx	lr

000023dc <_cleanup>:
    23dc:	e59f3004 	ldr	r3, [pc, #4]	; 23e8 <_cleanup+0xc>
    23e0:	e5930000 	ldr	r0, [r3]
    23e4:	eaffffc5 	b	2300 <_cleanup_r>
    23e8:	00003914 	.word	0x00003914

000023ec <__sinit>:
    23ec:	e92d4038 	push	{r3, r4, r5, lr}
    23f0:	e5903038 	ldr	r3, [r0, #56]	; 0x38
    23f4:	e3530000 	cmp	r3, #0
    23f8:	e1a04000 	mov	r4, r0
    23fc:	0a000001 	beq	2408 <__sinit+0x1c>
    2400:	e8bd4038 	pop	{r3, r4, r5, lr}
    2404:	e12fff1e 	bx	lr
    2408:	e59fe050 	ldr	lr, [pc, #80]	; 2460 <__sinit+0x74>
    240c:	e280cfbb 	add	r12, r0, #748	; 0x2ec
    2410:	e3a05001 	mov	r5, #1
    2414:	e1a02003 	mov	r2, r3
    2418:	e58432e0 	str	r3, [r4, #736]	; 0x2e0
    241c:	e3a03003 	mov	r3, #3
    2420:	e584e03c 	str	lr, [r4, #60]	; 0x3c
    2424:	e58432e4 	str	r3, [r4, #740]	; 0x2e4
    2428:	e584c2e8 	str	r12, [r4, #744]	; 0x2e8
    242c:	e5900004 	ldr	r0, [r0, #4]
    2430:	e3a01004 	mov	r1, #4
    2434:	e5845038 	str	r5, [r4, #56]	; 0x38
    2438:	ebffffb6 	bl	2318 <std.isra.0>
    243c:	e5940008 	ldr	r0, [r4, #8]
    2440:	e1a02005 	mov	r2, r5
    2444:	e3a01009 	mov	r1, #9
    2448:	ebffffb2 	bl	2318 <std.isra.0>
    244c:	e594000c 	ldr	r0, [r4, #12]
    2450:	e3a01012 	mov	r1, #18
    2454:	e3a02002 	mov	r2, #2
    2458:	e8bd4038 	pop	{r3, r4, r5, lr}
    245c:	eaffffad 	b	2318 <std.isra.0>
    2460:	00002300 	.word	0x00002300

00002464 <__sfp>:
    2464:	e59f30ec 	ldr	r3, [pc, #236]	; 2558 <__sfp+0xf4>
    2468:	e92d4070 	push	{r4, r5, r6, lr}
    246c:	e5935000 	ldr	r5, [r3]
    2470:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    2474:	e3530000 	cmp	r3, #0
    2478:	e1a06000 	mov	r6, r0
    247c:	0a000028 	beq	2524 <__sfp+0xc0>
    2480:	e2855e2e 	add	r5, r5, #736	; 0x2e0
    2484:	e5953004 	ldr	r3, [r5, #4]
    2488:	e2533001 	subs	r3, r3, #1
    248c:	e5954008 	ldr	r4, [r5, #8]
    2490:	5a000004 	bpl	24a8 <__sfp+0x44>
    2494:	ea00001d 	b	2510 <__sfp+0xac>
    2498:	e2433001 	sub	r3, r3, #1
    249c:	e3730001 	cmn	r3, #1
    24a0:	e2844068 	add	r4, r4, #104	; 0x68
    24a4:	0a000019 	beq	2510 <__sfp+0xac>
    24a8:	e1d420fc 	ldrsh	r2, [r4, #12]
    24ac:	e3520000 	cmp	r2, #0
    24b0:	1afffff8 	bne	2498 <__sfp+0x34>
    24b4:	e3e03000 	mvn	r3, #0
    24b8:	e3a05000 	mov	r5, #0
    24bc:	e1c430be 	strh	r3, [r4, #14]
    24c0:	e3a03001 	mov	r3, #1
    24c4:	e1c430bc 	strh	r3, [r4, #12]
    24c8:	e5845064 	str	r5, [r4, #100]	; 0x64
    24cc:	e5845000 	str	r5, [r4]
    24d0:	e5845008 	str	r5, [r4, #8]
    24d4:	e5845004 	str	r5, [r4, #4]
    24d8:	e5845010 	str	r5, [r4, #16]
    24dc:	e5845014 	str	r5, [r4, #20]
    24e0:	e5845018 	str	r5, [r4, #24]
    24e4:	e284005c 	add	r0, r4, #92	; 0x5c
    24e8:	e1a01005 	mov	r1, r5
    24ec:	e3a02008 	mov	r2, #8
    24f0:	eb0001a5 	bl	2b8c <memset>
    24f4:	e5845030 	str	r5, [r4, #48]	; 0x30
    24f8:	e5845034 	str	r5, [r4, #52]	; 0x34
    24fc:	e5845044 	str	r5, [r4, #68]	; 0x44
    2500:	e5845048 	str	r5, [r4, #72]	; 0x48
    2504:	e1a00004 	mov	r0, r4
    2508:	e8bd4070 	pop	{r4, r5, r6, lr}
    250c:	e12fff1e 	bx	lr
    2510:	e5950000 	ldr	r0, [r5]
    2514:	e3500000 	cmp	r0, #0
    2518:	0a000004 	beq	2530 <__sfp+0xcc>
    251c:	e1a05000 	mov	r5, r0
    2520:	eaffffd7 	b	2484 <__sfp+0x20>
    2524:	e1a00005 	mov	r0, r5
    2528:	ebffffaf 	bl	23ec <__sinit>
    252c:	eaffffd3 	b	2480 <__sfp+0x1c>
    2530:	e1a00006 	mov	r0, r6
    2534:	e3a01004 	mov	r1, #4
    2538:	ebffff95 	bl	2394 <__sfmoreglue>
    253c:	e3500000 	cmp	r0, #0
    2540:	e5850000 	str	r0, [r5]
    2544:	1afffff4 	bne	251c <__sfp+0xb8>
    2548:	e3a0300c 	mov	r3, #12
    254c:	e5863000 	str	r3, [r6]
    2550:	e1a04000 	mov	r4, r0
    2554:	eaffffea 	b	2504 <__sfp+0xa0>
    2558:	00003914 	.word	0x00003914

0000255c <__sfp_lock_acquire>:
    255c:	e12fff1e 	bx	lr

00002560 <__sfp_lock_release>:
    2560:	e12fff1e 	bx	lr

00002564 <__sinit_lock_acquire>:
    2564:	e12fff1e 	bx	lr

00002568 <__sinit_lock_release>:
    2568:	e12fff1e 	bx	lr

0000256c <__fp_lock_all>:
    256c:	e92d4008 	push	{r3, lr}
    2570:	e59f3010 	ldr	r3, [pc, #16]	; 2588 <__fp_lock_all+0x1c>
    2574:	e59f1010 	ldr	r1, [pc, #16]	; 258c <__fp_lock_all+0x20>
    2578:	e5930000 	ldr	r0, [r3]
    257c:	eb0000e6 	bl	291c <_fwalk>
    2580:	e8bd4008 	pop	{r3, lr}
    2584:	e12fff1e 	bx	lr
    2588:	00003980 	.word	0x00003980
    258c:	000022f0 	.word	0x000022f0

00002590 <__fp_unlock_all>:
    2590:	e92d4008 	push	{r3, lr}
    2594:	e59f3010 	ldr	r3, [pc, #16]	; 25ac <__fp_unlock_all+0x1c>
    2598:	e59f1010 	ldr	r1, [pc, #16]	; 25b0 <__fp_unlock_all+0x20>
    259c:	e5930000 	ldr	r0, [r3]
    25a0:	eb0000dd 	bl	291c <_fwalk>
    25a4:	e8bd4008 	pop	{r3, lr}
    25a8:	e12fff1e 	bx	lr
    25ac:	00003980 	.word	0x00003980
    25b0:	000022f8 	.word	0x000022f8

000025b4 <_malloc_trim_r>:
    25b4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    25b8:	e59f50e4 	ldr	r5, [pc, #228]	; 26a4 <_malloc_trim_r+0xf0>
    25bc:	e1a07001 	mov	r7, r1
    25c0:	e1a04000 	mov	r4, r0
    25c4:	ebfffcf1 	bl	1990 <__malloc_lock>
    25c8:	e5953008 	ldr	r3, [r5, #8]
    25cc:	e5936004 	ldr	r6, [r3, #4]
    25d0:	e3c66003 	bic	r6, r6, #3
    25d4:	e2863efe 	add	r3, r6, #4064	; 0xfe0
    25d8:	e283300f 	add	r3, r3, #15
    25dc:	e0677003 	rsb	r7, r7, r3
    25e0:	e1a07627 	lsr	r7, r7, #12
    25e4:	e2477001 	sub	r7, r7, #1
    25e8:	e1a07607 	lsl	r7, r7, #12
    25ec:	e3570a01 	cmp	r7, #4096	; 0x1000
    25f0:	ba000006 	blt	2610 <_malloc_trim_r+0x5c>
    25f4:	e1a00004 	mov	r0, r4
    25f8:	e3a01000 	mov	r1, #0
    25fc:	ebfffe42 	bl	1f0c <_sbrk_r>
    2600:	e5953008 	ldr	r3, [r5, #8]
    2604:	e0833006 	add	r3, r3, r6
    2608:	e1500003 	cmp	r0, r3
    260c:	0a000004 	beq	2624 <_malloc_trim_r+0x70>
    2610:	e1a00004 	mov	r0, r4
    2614:	ebfffcde 	bl	1994 <__malloc_unlock>
    2618:	e3a00000 	mov	r0, #0
    261c:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2620:	e12fff1e 	bx	lr
    2624:	e1a00004 	mov	r0, r4
    2628:	e2671000 	rsb	r1, r7, #0
    262c:	ebfffe36 	bl	1f0c <_sbrk_r>
    2630:	e3700001 	cmn	r0, #1
    2634:	0a00000b 	beq	2668 <_malloc_trim_r+0xb4>
    2638:	e59f3068 	ldr	r3, [pc, #104]	; 26a8 <_malloc_trim_r+0xf4>
    263c:	e5952008 	ldr	r2, [r5, #8]
    2640:	e5931000 	ldr	r1, [r3]
    2644:	e0676006 	rsb	r6, r7, r6
    2648:	e3866001 	orr	r6, r6, #1
    264c:	e0677001 	rsb	r7, r7, r1
    2650:	e1a00004 	mov	r0, r4
    2654:	e5826004 	str	r6, [r2, #4]
    2658:	e5837000 	str	r7, [r3]
    265c:	ebfffccc 	bl	1994 <__malloc_unlock>
    2660:	e3a00001 	mov	r0, #1
    2664:	eaffffec 	b	261c <_malloc_trim_r+0x68>
    2668:	e1a00004 	mov	r0, r4
    266c:	e3a01000 	mov	r1, #0
    2670:	ebfffe25 	bl	1f0c <_sbrk_r>
    2674:	e5953008 	ldr	r3, [r5, #8]
    2678:	e0632000 	rsb	r2, r3, r0
    267c:	e352000f 	cmp	r2, #15
    2680:	daffffe2 	ble	2610 <_malloc_trim_r+0x5c>
    2684:	e59f1020 	ldr	r1, [pc, #32]	; 26ac <_malloc_trim_r+0xf8>
    2688:	e5911000 	ldr	r1, [r1]
    268c:	e0610000 	rsb	r0, r1, r0
    2690:	e59f1010 	ldr	r1, [pc, #16]	; 26a8 <_malloc_trim_r+0xf4>
    2694:	e3822001 	orr	r2, r2, #1
    2698:	e5810000 	str	r0, [r1]
    269c:	e5832004 	str	r2, [r3, #4]
    26a0:	eaffffda 	b	2610 <_malloc_trim_r+0x5c>
    26a4:	00003db0 	.word	0x00003db0
    26a8:	000041e8 	.word	0x000041e8
    26ac:	000041b8 	.word	0x000041b8

000026b0 <_free_r>:
    26b0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    26b4:	e2514000 	subs	r4, r1, #0
    26b8:	e1a06000 	mov	r6, r0
    26bc:	0a000046 	beq	27dc <_free_r+0x12c>
    26c0:	ebfffcb2 	bl	1990 <__malloc_lock>
    26c4:	e514e004 	ldr	lr, [r4, #-4]
    26c8:	e59f1238 	ldr	r1, [pc, #568]	; 2908 <_free_r+0x258>
    26cc:	e244c008 	sub	r12, r4, #8
    26d0:	e3ce3001 	bic	r3, lr, #1
    26d4:	e08c2003 	add	r2, r12, r3
    26d8:	e5910008 	ldr	r0, [r1, #8]
    26dc:	e5925004 	ldr	r5, [r2, #4]
    26e0:	e1500002 	cmp	r0, r2
    26e4:	e3c55003 	bic	r5, r5, #3
    26e8:	0a00004a 	beq	2818 <_free_r+0x168>
    26ec:	e21ee001 	ands	lr, lr, #1
    26f0:	e5825004 	str	r5, [r2, #4]
    26f4:	13a0e000 	movne	lr, #0
    26f8:	1a000009 	bne	2724 <_free_r+0x74>
    26fc:	e5144008 	ldr	r4, [r4, #-8]
    2700:	e064c00c 	rsb	r12, r4, r12
    2704:	e59c0008 	ldr	r0, [r12, #8]
    2708:	e2817008 	add	r7, r1, #8
    270c:	e1500007 	cmp	r0, r7
    2710:	e0833004 	add	r3, r3, r4
    2714:	159c400c 	ldrne	r4, [r12, #12]
    2718:	1580400c 	strne	r4, [r0, #12]
    271c:	15840008 	strne	r0, [r4, #8]
    2720:	03a0e001 	moveq	lr, #1
    2724:	e0820005 	add	r0, r2, r5
    2728:	e5900004 	ldr	r0, [r0, #4]
    272c:	e3100001 	tst	r0, #1
    2730:	1a000009 	bne	275c <_free_r+0xac>
    2734:	e35e0000 	cmp	lr, #0
    2738:	e5920008 	ldr	r0, [r2, #8]
    273c:	e0833005 	add	r3, r3, r5
    2740:	1a000002 	bne	2750 <_free_r+0xa0>
    2744:	e59f41c0 	ldr	r4, [pc, #448]	; 290c <_free_r+0x25c>
    2748:	e1500004 	cmp	r0, r4
    274c:	0a000047 	beq	2870 <_free_r+0x1c0>
    2750:	e592200c 	ldr	r2, [r2, #12]
    2754:	e580200c 	str	r2, [r0, #12]
    2758:	e5820008 	str	r0, [r2, #8]
    275c:	e3832001 	orr	r2, r3, #1
    2760:	e35e0000 	cmp	lr, #0
    2764:	e58c2004 	str	r2, [r12, #4]
    2768:	e78c3003 	str	r3, [r12, r3]
    276c:	1a000018 	bne	27d4 <_free_r+0x124>
    2770:	e3530c02 	cmp	r3, #512	; 0x200
    2774:	3a00001a 	bcc	27e4 <_free_r+0x134>
    2778:	e1a024a3 	lsr	r2, r3, #9
    277c:	e3520004 	cmp	r2, #4
    2780:	8a000042 	bhi	2890 <_free_r+0x1e0>
    2784:	e1a0e323 	lsr	lr, r3, #6
    2788:	e28ee038 	add	lr, lr, #56	; 0x38
    278c:	e1a0008e 	lsl	r0, lr, #1
    2790:	e0810100 	add	r0, r1, r0, lsl #2
    2794:	e5902008 	ldr	r2, [r0, #8]
    2798:	e1520000 	cmp	r2, r0
    279c:	e59f1164 	ldr	r1, [pc, #356]	; 2908 <_free_r+0x258>
    27a0:	0a000044 	beq	28b8 <_free_r+0x208>
    27a4:	e5921004 	ldr	r1, [r2, #4]
    27a8:	e3c11003 	bic	r1, r1, #3
    27ac:	e1530001 	cmp	r3, r1
    27b0:	2a000002 	bcs	27c0 <_free_r+0x110>
    27b4:	e5922008 	ldr	r2, [r2, #8]
    27b8:	e1500002 	cmp	r0, r2
    27bc:	1afffff8 	bne	27a4 <_free_r+0xf4>
    27c0:	e592300c 	ldr	r3, [r2, #12]
    27c4:	e58c300c 	str	r3, [r12, #12]
    27c8:	e58c2008 	str	r2, [r12, #8]
    27cc:	e582c00c 	str	r12, [r2, #12]
    27d0:	e583c008 	str	r12, [r3, #8]
    27d4:	e1a00006 	mov	r0, r6
    27d8:	ebfffc6d 	bl	1994 <__malloc_unlock>
    27dc:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    27e0:	e12fff1e 	bx	lr
    27e4:	e5912004 	ldr	r2, [r1, #4]
    27e8:	e1a031a3 	lsr	r3, r3, #3
    27ec:	e1a00143 	asr	r0, r3, #2
    27f0:	e3a0e001 	mov	lr, #1
    27f4:	e182001e 	orr	r0, r2, lr, lsl r0
    27f8:	e0813183 	add	r3, r1, r3, lsl #3
    27fc:	e5932008 	ldr	r2, [r3, #8]
    2800:	e58c300c 	str	r3, [r12, #12]
    2804:	e58c2008 	str	r2, [r12, #8]
    2808:	e5810004 	str	r0, [r1, #4]
    280c:	e583c008 	str	r12, [r3, #8]
    2810:	e582c00c 	str	r12, [r2, #12]
    2814:	eaffffee 	b	27d4 <_free_r+0x124>
    2818:	e31e0001 	tst	lr, #1
    281c:	e0853003 	add	r3, r5, r3
    2820:	1a000006 	bne	2840 <_free_r+0x190>
    2824:	e5142008 	ldr	r2, [r4, #-8]
    2828:	e062c00c 	rsb	r12, r2, r12
    282c:	e59c000c 	ldr	r0, [r12, #12]
    2830:	e59ce008 	ldr	lr, [r12, #8]
    2834:	e58e000c 	str	r0, [lr, #12]
    2838:	e580e008 	str	lr, [r0, #8]
    283c:	e0833002 	add	r3, r3, r2
    2840:	e59f20c8 	ldr	r2, [pc, #200]	; 2910 <_free_r+0x260>
    2844:	e5920000 	ldr	r0, [r2]
    2848:	e3832001 	orr	r2, r3, #1
    284c:	e1530000 	cmp	r3, r0
    2850:	e58c2004 	str	r2, [r12, #4]
    2854:	e581c008 	str	r12, [r1, #8]
    2858:	3affffdd 	bcc	27d4 <_free_r+0x124>
    285c:	e59f30b0 	ldr	r3, [pc, #176]	; 2914 <_free_r+0x264>
    2860:	e1a00006 	mov	r0, r6
    2864:	e5931000 	ldr	r1, [r3]
    2868:	ebffff51 	bl	25b4 <_malloc_trim_r>
    286c:	eaffffd8 	b	27d4 <_free_r+0x124>
    2870:	e3832001 	orr	r2, r3, #1
    2874:	e581c014 	str	r12, [r1, #20]
    2878:	e581c010 	str	r12, [r1, #16]
    287c:	e58c000c 	str	r0, [r12, #12]
    2880:	e58c0008 	str	r0, [r12, #8]
    2884:	e58c2004 	str	r2, [r12, #4]
    2888:	e78c3003 	str	r3, [r12, r3]
    288c:	eaffffd0 	b	27d4 <_free_r+0x124>
    2890:	e3520014 	cmp	r2, #20
    2894:	9282e05b 	addls	lr, r2, #91	; 0x5b
    2898:	91a0008e 	lslls	r0, lr, #1
    289c:	9affffbb 	bls	2790 <_free_r+0xe0>
    28a0:	e3520054 	cmp	r2, #84	; 0x54
    28a4:	8a00000a 	bhi	28d4 <_free_r+0x224>
    28a8:	e1a0e623 	lsr	lr, r3, #12
    28ac:	e28ee06e 	add	lr, lr, #110	; 0x6e
    28b0:	e1a0008e 	lsl	r0, lr, #1
    28b4:	eaffffb5 	b	2790 <_free_r+0xe0>
    28b8:	e5913004 	ldr	r3, [r1, #4]
    28bc:	e1a0e14e 	asr	lr, lr, #2
    28c0:	e3a00001 	mov	r0, #1
    28c4:	e1830e10 	orr	r0, r3, r0, lsl lr
    28c8:	e1a03002 	mov	r3, r2
    28cc:	e5810004 	str	r0, [r1, #4]
    28d0:	eaffffbb 	b	27c4 <_free_r+0x114>
    28d4:	e3520f55 	cmp	r2, #340	; 0x154
    28d8:	91a0e7a3 	lsrls	lr, r3, #15
    28dc:	928ee077 	addls	lr, lr, #119	; 0x77
    28e0:	91a0008e 	lslls	r0, lr, #1
    28e4:	9affffa9 	bls	2790 <_free_r+0xe0>
    28e8:	e59f0028 	ldr	r0, [pc, #40]	; 2918 <_free_r+0x268>
    28ec:	e1520000 	cmp	r2, r0
    28f0:	91a0e923 	lsrls	lr, r3, #18
    28f4:	928ee07c 	addls	lr, lr, #124	; 0x7c
    28f8:	91a0008e 	lslls	r0, lr, #1
    28fc:	83a000fc 	movhi	r0, #252	; 0xfc
    2900:	83a0e07e 	movhi	lr, #126	; 0x7e
    2904:	eaffffa1 	b	2790 <_free_r+0xe0>
    2908:	00003db0 	.word	0x00003db0
    290c:	00003db8 	.word	0x00003db8
    2910:	000041bc 	.word	0x000041bc
    2914:	000041e4 	.word	0x000041e4
    2918:	00000554 	.word	0x00000554

0000291c <_fwalk>:
    291c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    2920:	e1a06000 	mov	r6, r0
    2924:	e1a08001 	mov	r8, r1
    2928:	ebffff0b 	bl	255c <__sfp_lock_acquire>
    292c:	e2966e2e 	adds	r6, r6, #736	; 0x2e0
    2930:	0a000019 	beq	299c <_fwalk+0x80>
    2934:	e3a07000 	mov	r7, #0
    2938:	e5965004 	ldr	r5, [r6, #4]
    293c:	e2555001 	subs	r5, r5, #1
    2940:	e5964008 	ldr	r4, [r6, #8]
    2944:	4a00000d 	bmi	2980 <_fwalk+0x64>
    2948:	e1d430fc 	ldrsh	r3, [r4, #12]
    294c:	e3530000 	cmp	r3, #0
    2950:	e2455001 	sub	r5, r5, #1
    2954:	0a000006 	beq	2974 <_fwalk+0x58>
    2958:	e1d430fe 	ldrsh	r3, [r4, #14]
    295c:	e3730001 	cmn	r3, #1
    2960:	e1a00004 	mov	r0, r4
    2964:	0a000002 	beq	2974 <_fwalk+0x58>
    2968:	e1a0e00f 	mov	lr, pc
    296c:	e12fff18 	bx	r8
    2970:	e1877000 	orr	r7, r7, r0
    2974:	e3750001 	cmn	r5, #1
    2978:	e2844068 	add	r4, r4, #104	; 0x68
    297c:	1afffff1 	bne	2948 <_fwalk+0x2c>
    2980:	e5966000 	ldr	r6, [r6]
    2984:	e3560000 	cmp	r6, #0
    2988:	1affffea 	bne	2938 <_fwalk+0x1c>
    298c:	ebfffef3 	bl	2560 <__sfp_lock_release>
    2990:	e1a00007 	mov	r0, r7
    2994:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    2998:	e12fff1e 	bx	lr
    299c:	e1a07006 	mov	r7, r6
    29a0:	eafffff9 	b	298c <_fwalk+0x70>

000029a4 <_fwalk_reent>:
    29a4:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    29a8:	e1a07000 	mov	r7, r0
    29ac:	e1a08001 	mov	r8, r1
    29b0:	ebfffee9 	bl	255c <__sfp_lock_acquire>
    29b4:	e2976e2e 	adds	r6, r7, #736	; 0x2e0
    29b8:	0a00001a 	beq	2a28 <_fwalk_reent+0x84>
    29bc:	e3a0a000 	mov	r10, #0
    29c0:	e5965004 	ldr	r5, [r6, #4]
    29c4:	e2555001 	subs	r5, r5, #1
    29c8:	e5964008 	ldr	r4, [r6, #8]
    29cc:	4a00000e 	bmi	2a0c <_fwalk_reent+0x68>
    29d0:	e1d430fc 	ldrsh	r3, [r4, #12]
    29d4:	e3530000 	cmp	r3, #0
    29d8:	e2455001 	sub	r5, r5, #1
    29dc:	0a000007 	beq	2a00 <_fwalk_reent+0x5c>
    29e0:	e1d430fe 	ldrsh	r3, [r4, #14]
    29e4:	e3730001 	cmn	r3, #1
    29e8:	e1a01004 	mov	r1, r4
    29ec:	e1a00007 	mov	r0, r7
    29f0:	0a000002 	beq	2a00 <_fwalk_reent+0x5c>
    29f4:	e1a0e00f 	mov	lr, pc
    29f8:	e12fff18 	bx	r8
    29fc:	e18aa000 	orr	r10, r10, r0
    2a00:	e3750001 	cmn	r5, #1
    2a04:	e2844068 	add	r4, r4, #104	; 0x68
    2a08:	1afffff0 	bne	29d0 <_fwalk_reent+0x2c>
    2a0c:	e5966000 	ldr	r6, [r6]
    2a10:	e3560000 	cmp	r6, #0
    2a14:	1affffe9 	bne	29c0 <_fwalk_reent+0x1c>
    2a18:	ebfffed0 	bl	2560 <__sfp_lock_release>
    2a1c:	e1a0000a 	mov	r0, r10
    2a20:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    2a24:	e12fff1e 	bx	lr
    2a28:	e1a0a006 	mov	r10, r6
    2a2c:	eafffff9 	b	2a18 <_fwalk_reent+0x74>

00002a30 <__smakebuf_r>:
    2a30:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    2a34:	e1d130bc 	ldrh	r3, [r1, #12]
    2a38:	e3130002 	tst	r3, #2
    2a3c:	e24dd044 	sub	sp, sp, #68	; 0x44
    2a40:	e1a04001 	mov	r4, r1
    2a44:	e1a05000 	mov	r5, r0
    2a48:	1a00002b 	bne	2afc <__smakebuf_r+0xcc>
    2a4c:	e1d110fe 	ldrsh	r1, [r1, #14]
    2a50:	e3510000 	cmp	r1, #0
    2a54:	ba000010 	blt	2a9c <__smakebuf_r+0x6c>
    2a58:	e28d2004 	add	r2, sp, #4
    2a5c:	eb000198 	bl	30c4 <_fstat_r>
    2a60:	e3500000 	cmp	r0, #0
    2a64:	ba00000b 	blt	2a98 <__smakebuf_r+0x68>
    2a68:	e59d3008 	ldr	r3, [sp, #8]
    2a6c:	e2033a0f 	and	r3, r3, #61440	; 0xf000
    2a70:	e2532a02 	subs	r2, r3, #8192	; 0x2000
    2a74:	e2727000 	rsbs	r7, r2, #0
    2a78:	e0b77002 	adcs	r7, r7, r2
    2a7c:	e3530902 	cmp	r3, #32768	; 0x8000
    2a80:	0a000023 	beq	2b14 <__smakebuf_r+0xe4>
    2a84:	e1d430bc 	ldrh	r3, [r4, #12]
    2a88:	e3833b02 	orr	r3, r3, #2048	; 0x800
    2a8c:	e1c430bc 	strh	r3, [r4, #12]
    2a90:	e3a06b01 	mov	r6, #1024	; 0x400
    2a94:	ea000006 	b	2ab4 <__smakebuf_r+0x84>
    2a98:	e1d430bc 	ldrh	r3, [r4, #12]
    2a9c:	e3130080 	tst	r3, #128	; 0x80
    2aa0:	e3833b02 	orr	r3, r3, #2048	; 0x800
    2aa4:	e1c430bc 	strh	r3, [r4, #12]
    2aa8:	03a06b01 	moveq	r6, #1024	; 0x400
    2aac:	13a06040 	movne	r6, #64	; 0x40
    2ab0:	e3a07000 	mov	r7, #0
    2ab4:	e1a00005 	mov	r0, r5
    2ab8:	e1a01006 	mov	r1, r6
    2abc:	ebfff8d5 	bl	e18 <_malloc_r>
    2ac0:	e3500000 	cmp	r0, #0
    2ac4:	e1d430bc 	ldrh	r3, [r4, #12]
    2ac8:	0a000023 	beq	2b5c <__smakebuf_r+0x12c>
    2acc:	e59f20b0 	ldr	r2, [pc, #176]	; 2b84 <__smakebuf_r+0x154>
    2ad0:	e3833080 	orr	r3, r3, #128	; 0x80
    2ad4:	e3570000 	cmp	r7, #0
    2ad8:	e585203c 	str	r2, [r5, #60]	; 0x3c
    2adc:	e1c430bc 	strh	r3, [r4, #12]
    2ae0:	e5840000 	str	r0, [r4]
    2ae4:	e5840010 	str	r0, [r4, #16]
    2ae8:	e5846014 	str	r6, [r4, #20]
    2aec:	1a000012 	bne	2b3c <__smakebuf_r+0x10c>
    2af0:	e28dd044 	add	sp, sp, #68	; 0x44
    2af4:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
    2af8:	e12fff1e 	bx	lr
    2afc:	e2813043 	add	r3, r1, #67	; 0x43
    2b00:	e5813000 	str	r3, [r1]
    2b04:	e5813010 	str	r3, [r1, #16]
    2b08:	e3a03001 	mov	r3, #1
    2b0c:	e5813014 	str	r3, [r1, #20]
    2b10:	eafffff6 	b	2af0 <__smakebuf_r+0xc0>
    2b14:	e5942028 	ldr	r2, [r4, #40]	; 0x28
    2b18:	e59f3068 	ldr	r3, [pc, #104]	; 2b88 <__smakebuf_r+0x158>
    2b1c:	e1520003 	cmp	r2, r3
    2b20:	1affffd7 	bne	2a84 <__smakebuf_r+0x54>
    2b24:	e1d430bc 	ldrh	r3, [r4, #12]
    2b28:	e3a06b01 	mov	r6, #1024	; 0x400
    2b2c:	e1833006 	orr	r3, r3, r6
    2b30:	e1c430bc 	strh	r3, [r4, #12]
    2b34:	e584604c 	str	r6, [r4, #76]	; 0x4c
    2b38:	eaffffdd 	b	2ab4 <__smakebuf_r+0x84>
    2b3c:	e1a00005 	mov	r0, r5
    2b40:	e1d410fe 	ldrsh	r1, [r4, #14]
    2b44:	eb00016e 	bl	3104 <_isatty_r>
    2b48:	e3500000 	cmp	r0, #0
    2b4c:	11d430bc 	ldrhne	r3, [r4, #12]
    2b50:	13833001 	orrne	r3, r3, #1
    2b54:	11c430bc 	strhne	r3, [r4, #12]
    2b58:	eaffffe4 	b	2af0 <__smakebuf_r+0xc0>
    2b5c:	e3130c02 	tst	r3, #512	; 0x200
    2b60:	1affffe2 	bne	2af0 <__smakebuf_r+0xc0>
    2b64:	e3833002 	orr	r3, r3, #2
    2b68:	e2842043 	add	r2, r4, #67	; 0x43
    2b6c:	e1c430bc 	strh	r3, [r4, #12]
    2b70:	e3a03001 	mov	r3, #1
    2b74:	e5842000 	str	r2, [r4]
    2b78:	e5842010 	str	r2, [r4, #16]
    2b7c:	e5843014 	str	r3, [r4, #20]
    2b80:	eaffffda 	b	2af0 <__smakebuf_r+0xc0>
    2b84:	00002300 	.word	0x00002300
    2b88:	00002ef0 	.word	0x00002ef0

00002b8c <memset>:
    2b8c:	e3520003 	cmp	r2, #3
    2b90:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    2b94:	e20110ff 	and	r1, r1, #255	; 0xff
    2b98:	8a000008 	bhi	2bc0 <memset+0x34>
    2b9c:	e3520000 	cmp	r2, #0
    2ba0:	0a000004 	beq	2bb8 <memset+0x2c>
    2ba4:	e1a03000 	mov	r3, r0
    2ba8:	e0822000 	add	r2, r2, r0
    2bac:	e4c31001 	strb	r1, [r3], #1
    2bb0:	e1530002 	cmp	r3, r2
    2bb4:	1afffffc 	bne	2bac <memset+0x20>
    2bb8:	e8bd0010 	ldmfd	sp!, {r4}
    2bbc:	e12fff1e 	bx	lr
    2bc0:	e3100003 	tst	r0, #3
    2bc4:	e0802002 	add	r2, r0, r2
    2bc8:	0a000007 	beq	2bec <memset+0x60>
    2bcc:	e280c001 	add	r12, r0, #1
    2bd0:	e20c3003 	and	r3, r12, #3
    2bd4:	e3530000 	cmp	r3, #0
    2bd8:	e54c1001 	strb	r1, [r12, #-1]
    2bdc:	e1a0300c 	mov	r3, r12
    2be0:	e28cc001 	add	r12, r12, #1
    2be4:	1afffff9 	bne	2bd0 <memset+0x44>
    2be8:	ea000000 	b	2bf0 <memset+0x64>
    2bec:	e1a03000 	mov	r3, r0
    2bf0:	e0634002 	rsb	r4, r3, r2
    2bf4:	e081c401 	add	r12, r1, r1, lsl #8
    2bf8:	e354003f 	cmp	r4, #63	; 0x3f
    2bfc:	e08cc80c 	add	r12, r12, r12, lsl #16
    2c00:	da00001a 	ble	2c70 <memset+0xe4>
    2c04:	e583c000 	str	r12, [r3]
    2c08:	e583c004 	str	r12, [r3, #4]
    2c0c:	e583c008 	str	r12, [r3, #8]
    2c10:	e583c00c 	str	r12, [r3, #12]
    2c14:	e583c010 	str	r12, [r3, #16]
    2c18:	e583c014 	str	r12, [r3, #20]
    2c1c:	e583c018 	str	r12, [r3, #24]
    2c20:	e583c01c 	str	r12, [r3, #28]
    2c24:	e583c020 	str	r12, [r3, #32]
    2c28:	e583c024 	str	r12, [r3, #36]	; 0x24
    2c2c:	e583c028 	str	r12, [r3, #40]	; 0x28
    2c30:	e583c02c 	str	r12, [r3, #44]	; 0x2c
    2c34:	e583c030 	str	r12, [r3, #48]	; 0x30
    2c38:	e583c034 	str	r12, [r3, #52]	; 0x34
    2c3c:	e583c038 	str	r12, [r3, #56]	; 0x38
    2c40:	e583c03c 	str	r12, [r3, #60]	; 0x3c
    2c44:	e2833040 	add	r3, r3, #64	; 0x40
    2c48:	e0634002 	rsb	r4, r3, r2
    2c4c:	e354003f 	cmp	r4, #63	; 0x3f
    2c50:	caffffeb 	bgt	2c04 <memset+0x78>
    2c54:	ea000005 	b	2c70 <memset+0xe4>
    2c58:	e583c000 	str	r12, [r3]
    2c5c:	e583c004 	str	r12, [r3, #4]
    2c60:	e583c008 	str	r12, [r3, #8]
    2c64:	e583c00c 	str	r12, [r3, #12]
    2c68:	e2833010 	add	r3, r3, #16
    2c6c:	e0634002 	rsb	r4, r3, r2
    2c70:	e354000f 	cmp	r4, #15
    2c74:	cafffff7 	bgt	2c58 <memset+0xcc>
    2c78:	e3540003 	cmp	r4, #3
    2c7c:	da000006 	ble	2c9c <memset+0x110>
    2c80:	e2834004 	add	r4, r3, #4
    2c84:	e0643002 	rsb	r3, r4, r2
    2c88:	e3530003 	cmp	r3, #3
    2c8c:	e504c004 	str	r12, [r4, #-4]
    2c90:	e1a03004 	mov	r3, r4
    2c94:	e2844004 	add	r4, r4, #4
    2c98:	cafffff9 	bgt	2c84 <memset+0xf8>
    2c9c:	e1520003 	cmp	r2, r3
    2ca0:	9affffc4 	bls	2bb8 <memset+0x2c>
    2ca4:	e2833001 	add	r3, r3, #1
    2ca8:	e2822001 	add	r2, r2, #1
    2cac:	e5431001 	strb	r1, [r3, #-1]
    2cb0:	e2833001 	add	r3, r3, #1
    2cb4:	e1530002 	cmp	r3, r2
    2cb8:	1afffffb 	bne	2cac <memset+0x120>
    2cbc:	eaffffbd 	b	2bb8 <memset+0x2c>

00002cc0 <cleanup_glue>:
    2cc0:	e92d4038 	push	{r3, r4, r5, lr}
    2cc4:	e1a04001 	mov	r4, r1
    2cc8:	e5911000 	ldr	r1, [r1]
    2ccc:	e3510000 	cmp	r1, #0
    2cd0:	e1a05000 	mov	r5, r0
    2cd4:	1bfffff9 	blne	2cc0 <cleanup_glue>
    2cd8:	e1a00005 	mov	r0, r5
    2cdc:	e1a01004 	mov	r1, r4
    2ce0:	ebfffe72 	bl	26b0 <_free_r>
    2ce4:	e8bd4038 	pop	{r3, r4, r5, lr}
    2ce8:	e12fff1e 	bx	lr

00002cec <_reclaim_reent>:
    2cec:	e59f30f0 	ldr	r3, [pc, #240]	; 2de4 <_reclaim_reent+0xf8>
    2cf0:	e5933000 	ldr	r3, [r3]
    2cf4:	e1500003 	cmp	r0, r3
    2cf8:	e92d4070 	push	{r4, r5, r6, lr}
    2cfc:	e1a05000 	mov	r5, r0
    2d00:	0a00002b 	beq	2db4 <_reclaim_reent+0xc8>
    2d04:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
    2d08:	e3520000 	cmp	r2, #0
    2d0c:	0a000011 	beq	2d58 <_reclaim_reent+0x6c>
    2d10:	e3a03000 	mov	r3, #0
    2d14:	e1a06003 	mov	r6, r3
    2d18:	e7921103 	ldr	r1, [r2, r3, lsl #2]
    2d1c:	e3510000 	cmp	r1, #0
    2d20:	0a000005 	beq	2d3c <_reclaim_reent+0x50>
    2d24:	e5914000 	ldr	r4, [r1]
    2d28:	e1a00005 	mov	r0, r5
    2d2c:	ebfffe5f 	bl	26b0 <_free_r>
    2d30:	e2541000 	subs	r1, r4, #0
    2d34:	1afffffa 	bne	2d24 <_reclaim_reent+0x38>
    2d38:	e595204c 	ldr	r2, [r5, #76]	; 0x4c
    2d3c:	e2866001 	add	r6, r6, #1
    2d40:	e3560020 	cmp	r6, #32
    2d44:	e1a03006 	mov	r3, r6
    2d48:	1afffff2 	bne	2d18 <_reclaim_reent+0x2c>
    2d4c:	e1a00005 	mov	r0, r5
    2d50:	e1a01002 	mov	r1, r2
    2d54:	ebfffe55 	bl	26b0 <_free_r>
    2d58:	e5951040 	ldr	r1, [r5, #64]	; 0x40
    2d5c:	e3510000 	cmp	r1, #0
    2d60:	11a00005 	movne	r0, r5
    2d64:	1bfffe51 	blne	26b0 <_free_r>
    2d68:	e5951148 	ldr	r1, [r5, #328]	; 0x148
    2d6c:	e3510000 	cmp	r1, #0
    2d70:	0a000008 	beq	2d98 <_reclaim_reent+0xac>
    2d74:	e2856f53 	add	r6, r5, #332	; 0x14c
    2d78:	e1510006 	cmp	r1, r6
    2d7c:	0a000005 	beq	2d98 <_reclaim_reent+0xac>
    2d80:	e5914000 	ldr	r4, [r1]
    2d84:	e1a00005 	mov	r0, r5
    2d88:	ebfffe48 	bl	26b0 <_free_r>
    2d8c:	e1560004 	cmp	r6, r4
    2d90:	e1a01004 	mov	r1, r4
    2d94:	1afffff9 	bne	2d80 <_reclaim_reent+0x94>
    2d98:	e5951054 	ldr	r1, [r5, #84]	; 0x54
    2d9c:	e3510000 	cmp	r1, #0
    2da0:	11a00005 	movne	r0, r5
    2da4:	1bfffe41 	blne	26b0 <_free_r>
    2da8:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    2dac:	e3530000 	cmp	r3, #0
    2db0:	1a000001 	bne	2dbc <_reclaim_reent+0xd0>
    2db4:	e8bd4070 	pop	{r4, r5, r6, lr}
    2db8:	e12fff1e 	bx	lr
    2dbc:	e1a00005 	mov	r0, r5
    2dc0:	e595c03c 	ldr	r12, [r5, #60]	; 0x3c
    2dc4:	e1a0e00f 	mov	lr, pc
    2dc8:	e12fff1c 	bx	r12
    2dcc:	e59512e0 	ldr	r1, [r5, #736]	; 0x2e0
    2dd0:	e3510000 	cmp	r1, #0
    2dd4:	0afffff6 	beq	2db4 <_reclaim_reent+0xc8>
    2dd8:	e1a00005 	mov	r0, r5
    2ddc:	e8bd4070 	pop	{r4, r5, r6, lr}
    2de0:	eaffffb6 	b	2cc0 <cleanup_glue>
    2de4:	00003980 	.word	0x00003980

00002de8 <_wrapup_reent>:
    2de8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    2dec:	e2507000 	subs	r7, r0, #0
    2df0:	059f3060 	ldreq	r3, [pc, #96]	; 2e58 <_wrapup_reent+0x70>
    2df4:	05937000 	ldreq	r7, [r3]
    2df8:	e5976148 	ldr	r6, [r7, #328]	; 0x148
    2dfc:	e3560000 	cmp	r6, #0
    2e00:	0a00000d 	beq	2e3c <_wrapup_reent+0x54>
    2e04:	e5965004 	ldr	r5, [r6, #4]
    2e08:	e2554001 	subs	r4, r5, #1
    2e0c:	52855002 	addpl	r5, r5, #2
    2e10:	50865105 	addpl	r5, r6, r5, lsl #2
    2e14:	4a000005 	bmi	2e30 <_wrapup_reent+0x48>
    2e18:	e5353004 	ldr	r3, [r5, #-4]!
    2e1c:	e2444001 	sub	r4, r4, #1
    2e20:	e1a0e00f 	mov	lr, pc
    2e24:	e12fff13 	bx	r3
    2e28:	e3740001 	cmn	r4, #1
    2e2c:	1afffff9 	bne	2e18 <_wrapup_reent+0x30>
    2e30:	e5966000 	ldr	r6, [r6]
    2e34:	e3560000 	cmp	r6, #0
    2e38:	1afffff1 	bne	2e04 <_wrapup_reent+0x1c>
    2e3c:	e597303c 	ldr	r3, [r7, #60]	; 0x3c
    2e40:	e3530000 	cmp	r3, #0
    2e44:	11a00007 	movne	r0, r7
    2e48:	11a0e00f 	movne	lr, pc
    2e4c:	112fff13 	bxne	r3
    2e50:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2e54:	e12fff1e 	bx	lr
    2e58:	00003980 	.word	0x00003980

00002e5c <__sread>:
    2e5c:	e92d4010 	push	{r4, lr}
    2e60:	e1a04001 	mov	r4, r1
    2e64:	e1d110fe 	ldrsh	r1, [r1, #14]
    2e68:	eb0000c5 	bl	3184 <_read_r>
    2e6c:	e3500000 	cmp	r0, #0
    2e70:	a5943050 	ldrge	r3, [r4, #80]	; 0x50
    2e74:	b1d430bc 	ldrhlt	r3, [r4, #12]
    2e78:	a0833000 	addge	r3, r3, r0
    2e7c:	b3c33a01 	biclt	r3, r3, #4096	; 0x1000
    2e80:	a5843050 	strge	r3, [r4, #80]	; 0x50
    2e84:	b1c430bc 	strhlt	r3, [r4, #12]
    2e88:	e8bd4010 	pop	{r4, lr}
    2e8c:	e12fff1e 	bx	lr

00002e90 <__seofread>:
    2e90:	e3a00000 	mov	r0, #0
    2e94:	e12fff1e 	bx	lr

00002e98 <__swrite>:
    2e98:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    2e9c:	e1a04001 	mov	r4, r1
    2ea0:	e1d110bc 	ldrh	r1, [r1, #12]
    2ea4:	e3110c01 	tst	r1, #256	; 0x100
    2ea8:	e1a07000 	mov	r7, r0
    2eac:	e1a06002 	mov	r6, r2
    2eb0:	e1a05003 	mov	r5, r3
    2eb4:	0a000004 	beq	2ecc <__swrite+0x34>
    2eb8:	e1d410fe 	ldrsh	r1, [r4, #14]
    2ebc:	e3a02000 	mov	r2, #0
    2ec0:	e3a03002 	mov	r3, #2
    2ec4:	eb00009d 	bl	3140 <_lseek_r>
    2ec8:	e1d410bc 	ldrh	r1, [r4, #12]
    2ecc:	e3c11a01 	bic	r1, r1, #4096	; 0x1000
    2ed0:	e1c410bc 	strh	r1, [r4, #12]
    2ed4:	e1a00007 	mov	r0, r7
    2ed8:	e1d410fe 	ldrsh	r1, [r4, #14]
    2edc:	e1a02006 	mov	r2, r6
    2ee0:	e1a03005 	mov	r3, r5
    2ee4:	eb000013 	bl	2f38 <_write_r>
    2ee8:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2eec:	e12fff1e 	bx	lr

00002ef0 <__sseek>:
    2ef0:	e92d4010 	push	{r4, lr}
    2ef4:	e1a04001 	mov	r4, r1
    2ef8:	e1d110fe 	ldrsh	r1, [r1, #14]
    2efc:	eb00008f 	bl	3140 <_lseek_r>
    2f00:	e1d430bc 	ldrh	r3, [r4, #12]
    2f04:	e3700001 	cmn	r0, #1
    2f08:	03c33a01 	biceq	r3, r3, #4096	; 0x1000
    2f0c:	13833a01 	orrne	r3, r3, #4096	; 0x1000
    2f10:	01c430bc 	strheq	r3, [r4, #12]
    2f14:	11c430bc 	strhne	r3, [r4, #12]
    2f18:	15840050 	strne	r0, [r4, #80]	; 0x50
    2f1c:	e8bd4010 	pop	{r4, lr}
    2f20:	e12fff1e 	bx	lr

00002f24 <__sclose>:
    2f24:	e92d4008 	push	{r3, lr}
    2f28:	e1d110fe 	ldrsh	r1, [r1, #14]
    2f2c:	eb000012 	bl	2f7c <_close_r>
    2f30:	e8bd4008 	pop	{r3, lr}
    2f34:	e12fff1e 	bx	lr

00002f38 <_write_r>:
    2f38:	e92d4038 	push	{r3, r4, r5, lr}
    2f3c:	e59f4034 	ldr	r4, [pc, #52]	; 2f78 <_write_r+0x40>
    2f40:	e1a05000 	mov	r5, r0
    2f44:	e1a00001 	mov	r0, r1
    2f48:	e1a01002 	mov	r1, r2
    2f4c:	e1a02003 	mov	r2, r3
    2f50:	e3a03000 	mov	r3, #0
    2f54:	e5843000 	str	r3, [r4]
    2f58:	eb000137 	bl	343c <_write>
    2f5c:	e3700001 	cmn	r0, #1
    2f60:	1a000002 	bne	2f70 <_write_r+0x38>
    2f64:	e5943000 	ldr	r3, [r4]
    2f68:	e3530000 	cmp	r3, #0
    2f6c:	15853000 	strne	r3, [r5]
    2f70:	e8bd4038 	pop	{r3, r4, r5, lr}
    2f74:	e12fff1e 	bx	lr
    2f78:	00004218 	.word	0x00004218

00002f7c <_close_r>:
    2f7c:	e92d4038 	push	{r3, r4, r5, lr}
    2f80:	e59f402c 	ldr	r4, [pc, #44]	; 2fb4 <_close_r+0x38>
    2f84:	e3a03000 	mov	r3, #0
    2f88:	e1a05000 	mov	r5, r0
    2f8c:	e1a00001 	mov	r0, r1
    2f90:	e5843000 	str	r3, [r4]
    2f94:	eb00009e 	bl	3214 <_close>
    2f98:	e3700001 	cmn	r0, #1
    2f9c:	1a000002 	bne	2fac <_close_r+0x30>
    2fa0:	e5943000 	ldr	r3, [r4]
    2fa4:	e3530000 	cmp	r3, #0
    2fa8:	15853000 	strne	r3, [r5]
    2fac:	e8bd4038 	pop	{r3, r4, r5, lr}
    2fb0:	e12fff1e 	bx	lr
    2fb4:	00004218 	.word	0x00004218

00002fb8 <_fclose_r>:
    2fb8:	e92d4070 	push	{r4, r5, r6, lr}
    2fbc:	e2514000 	subs	r4, r1, #0
    2fc0:	e1a05000 	mov	r5, r0
    2fc4:	01a06004 	moveq	r6, r4
    2fc8:	0a00002b 	beq	307c <_fclose_r+0xc4>
    2fcc:	ebfffd62 	bl	255c <__sfp_lock_acquire>
    2fd0:	e3550000 	cmp	r5, #0
    2fd4:	0a000002 	beq	2fe4 <_fclose_r+0x2c>
    2fd8:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    2fdc:	e3530000 	cmp	r3, #0
    2fe0:	0a000028 	beq	3088 <_fclose_r+0xd0>
    2fe4:	e1d460fc 	ldrsh	r6, [r4, #12]
    2fe8:	e3560000 	cmp	r6, #0
    2fec:	0a000021 	beq	3078 <_fclose_r+0xc0>
    2ff0:	e1a00005 	mov	r0, r5
    2ff4:	e1a01004 	mov	r1, r4
    2ff8:	ebfffc21 	bl	2084 <_fflush_r>
    2ffc:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
    3000:	e3530000 	cmp	r3, #0
    3004:	e1a06000 	mov	r6, r0
    3008:	0a000005 	beq	3024 <_fclose_r+0x6c>
    300c:	e1a00005 	mov	r0, r5
    3010:	e594101c 	ldr	r1, [r4, #28]
    3014:	e1a0e00f 	mov	lr, pc
    3018:	e12fff13 	bx	r3
    301c:	e3500000 	cmp	r0, #0
    3020:	b3e06000 	mvnlt	r6, #0
    3024:	e1d430bc 	ldrh	r3, [r4, #12]
    3028:	e3130080 	tst	r3, #128	; 0x80
    302c:	1a00001b 	bne	30a0 <_fclose_r+0xe8>
    3030:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    3034:	e3510000 	cmp	r1, #0
    3038:	0a000005 	beq	3054 <_fclose_r+0x9c>
    303c:	e2843040 	add	r3, r4, #64	; 0x40
    3040:	e1510003 	cmp	r1, r3
    3044:	11a00005 	movne	r0, r5
    3048:	1bfffd98 	blne	26b0 <_free_r>
    304c:	e3a03000 	mov	r3, #0
    3050:	e5843030 	str	r3, [r4, #48]	; 0x30
    3054:	e5941044 	ldr	r1, [r4, #68]	; 0x44
    3058:	e3510000 	cmp	r1, #0
    305c:	0a000003 	beq	3070 <_fclose_r+0xb8>
    3060:	e1a00005 	mov	r0, r5
    3064:	ebfffd91 	bl	26b0 <_free_r>
    3068:	e3a03000 	mov	r3, #0
    306c:	e5843044 	str	r3, [r4, #68]	; 0x44
    3070:	e3a03000 	mov	r3, #0
    3074:	e1c430bc 	strh	r3, [r4, #12]
    3078:	ebfffd38 	bl	2560 <__sfp_lock_release>
    307c:	e1a00006 	mov	r0, r6
    3080:	e8bd4070 	pop	{r4, r5, r6, lr}
    3084:	e12fff1e 	bx	lr
    3088:	e1a00005 	mov	r0, r5
    308c:	ebfffcd6 	bl	23ec <__sinit>
    3090:	e1d460fc 	ldrsh	r6, [r4, #12]
    3094:	e3560000 	cmp	r6, #0
    3098:	1affffd4 	bne	2ff0 <_fclose_r+0x38>
    309c:	eafffff5 	b	3078 <_fclose_r+0xc0>
    30a0:	e1a00005 	mov	r0, r5
    30a4:	e5941010 	ldr	r1, [r4, #16]
    30a8:	ebfffd80 	bl	26b0 <_free_r>
    30ac:	eaffffdf 	b	3030 <_fclose_r+0x78>

000030b0 <fclose>:
    30b0:	e59f3008 	ldr	r3, [pc, #8]	; 30c0 <fclose+0x10>
    30b4:	e1a01000 	mov	r1, r0
    30b8:	e5930000 	ldr	r0, [r3]
    30bc:	eaffffbd 	b	2fb8 <_fclose_r>
    30c0:	00003980 	.word	0x00003980

000030c4 <_fstat_r>:
    30c4:	e92d4038 	push	{r3, r4, r5, lr}
    30c8:	e59f4030 	ldr	r4, [pc, #48]	; 3100 <_fstat_r+0x3c>
    30cc:	e3a03000 	mov	r3, #0
    30d0:	e1a05000 	mov	r5, r0
    30d4:	e1a00001 	mov	r0, r1
    30d8:	e1a01002 	mov	r1, r2
    30dc:	e5843000 	str	r3, [r4]
    30e0:	eb00006f 	bl	32a4 <_fstat>
    30e4:	e3700001 	cmn	r0, #1
    30e8:	1a000002 	bne	30f8 <_fstat_r+0x34>
    30ec:	e5943000 	ldr	r3, [r4]
    30f0:	e3530000 	cmp	r3, #0
    30f4:	15853000 	strne	r3, [r5]
    30f8:	e8bd4038 	pop	{r3, r4, r5, lr}
    30fc:	e12fff1e 	bx	lr
    3100:	00004218 	.word	0x00004218

00003104 <_isatty_r>:
    3104:	e92d4038 	push	{r3, r4, r5, lr}
    3108:	e59f402c 	ldr	r4, [pc, #44]	; 313c <_isatty_r+0x38>
    310c:	e3a03000 	mov	r3, #0
    3110:	e1a05000 	mov	r5, r0
    3114:	e1a00001 	mov	r0, r1
    3118:	e5843000 	str	r3, [r4]
    311c:	eb000078 	bl	3304 <_isatty>
    3120:	e3700001 	cmn	r0, #1
    3124:	1a000002 	bne	3134 <_isatty_r+0x30>
    3128:	e5943000 	ldr	r3, [r4]
    312c:	e3530000 	cmp	r3, #0
    3130:	15853000 	strne	r3, [r5]
    3134:	e8bd4038 	pop	{r3, r4, r5, lr}
    3138:	e12fff1e 	bx	lr
    313c:	00004218 	.word	0x00004218

00003140 <_lseek_r>:
    3140:	e92d4038 	push	{r3, r4, r5, lr}
    3144:	e59f4034 	ldr	r4, [pc, #52]	; 3180 <_lseek_r+0x40>
    3148:	e1a05000 	mov	r5, r0
    314c:	e1a00001 	mov	r0, r1
    3150:	e1a01002 	mov	r1, r2
    3154:	e1a02003 	mov	r2, r3
    3158:	e3a03000 	mov	r3, #0
    315c:	e5843000 	str	r3, [r4]
    3160:	eb000071 	bl	332c <_lseek>
    3164:	e3700001 	cmn	r0, #1
    3168:	1a000002 	bne	3178 <_lseek_r+0x38>
    316c:	e5943000 	ldr	r3, [r4]
    3170:	e3530000 	cmp	r3, #0
    3174:	15853000 	strne	r3, [r5]
    3178:	e8bd4038 	pop	{r3, r4, r5, lr}
    317c:	e12fff1e 	bx	lr
    3180:	00004218 	.word	0x00004218

00003184 <_read_r>:
    3184:	e92d4038 	push	{r3, r4, r5, lr}
    3188:	e59f4034 	ldr	r4, [pc, #52]	; 31c4 <_read_r+0x40>
    318c:	e1a05000 	mov	r5, r0
    3190:	e1a00001 	mov	r0, r1
    3194:	e1a01002 	mov	r1, r2
    3198:	e1a02003 	mov	r2, r3
    319c:	e3a03000 	mov	r3, #0
    31a0:	e5843000 	str	r3, [r4]
    31a4:	eb00008c 	bl	33dc <_read>
    31a8:	e3700001 	cmn	r0, #1
    31ac:	1a000002 	bne	31bc <_read_r+0x38>
    31b0:	e5943000 	ldr	r3, [r4]
    31b4:	e3530000 	cmp	r3, #0
    31b8:	15853000 	strne	r3, [r5]
    31bc:	e8bd4038 	pop	{r3, r4, r5, lr}
    31c0:	e12fff1e 	bx	lr
    31c4:	00004218 	.word	0x00004218

000031c8 <__cs3_premain>:
    31c8:	e92d4008 	push	{r3, lr}
    31cc:	eb0001a5 	bl	3868 <__libc_init_array>
    31d0:	e59f3030 	ldr	r3, [pc, #48]	; 3208 <__cs3_premain+0x40>
    31d4:	e3530000 	cmp	r3, #0
    31d8:	15930000 	ldrne	r0, [r3]
    31dc:	01a00003 	moveq	r0, r3
    31e0:	e59f3024 	ldr	r3, [pc, #36]	; 320c <__cs3_premain+0x44>
    31e4:	e3530000 	cmp	r3, #0
    31e8:	15931000 	ldrne	r1, [r3]
    31ec:	01a01003 	moveq	r1, r3
    31f0:	e3a02000 	mov	r2, #0
    31f4:	ebfff4ae 	bl	4b4 <main>
    31f8:	e59f3010 	ldr	r3, [pc, #16]	; 3210 <__cs3_premain+0x48>
    31fc:	e3530000 	cmp	r3, #0
    3200:	1bfff4ca 	blne	530 <exit>
    3204:	eafffffe 	b	3204 <__cs3_premain+0x3c>
    3208:	000042c0 	.word	0x000042c0
    320c:	000042c4 	.word	0x000042c4
    3210:	00000530 	.word	0x00000530

00003214 <_close>:
    3214:	e92d4038 	push	{r3, r4, r5, lr}
    3218:	e1a05000 	mov	r5, r0
    321c:	eb0000e8 	bl	35c4 <__cs3_openslot>
    3220:	e2504000 	subs	r4, r0, #0
    3224:	0a000016 	beq	3284 <_close+0x70>
    3228:	e2453001 	sub	r3, r5, #1
    322c:	e3530001 	cmp	r3, #1
    3230:	9a000008 	bls	3258 <_close+0x44>
    3234:	e3a00002 	mov	r0, #2
    3238:	e1a01004 	mov	r1, r4
    323c:	ef123456 	svc	0x00123456
    3240:	e3500000 	cmp	r0, #0
    3244:	03e03000 	mvneq	r3, #0
    3248:	05843000 	streq	r3, [r4]
    324c:	eb00010a 	bl	367c <__cs3_checkerror>
    3250:	e8bd4038 	pop	{r3, r4, r5, lr}
    3254:	e12fff1e 	bx	lr
    3258:	e3550001 	cmp	r5, #1
    325c:	13e03007 	mvnne	r3, #7
    3260:	03a03008 	moveq	r3, #8
    3264:	e7943003 	ldr	r3, [r4, r3]
    3268:	e5942000 	ldr	r2, [r4]
    326c:	e1520003 	cmp	r2, r3
    3270:	03e03000 	mvneq	r3, #0
    3274:	05843000 	streq	r3, [r4]
    3278:	03a00000 	moveq	r0, #0
    327c:	1affffec 	bne	3234 <_close+0x20>
    3280:	eafffff2 	b	3250 <_close+0x3c>
    3284:	e3e00000 	mvn	r0, #0
    3288:	eafffff0 	b	3250 <_close+0x3c>

0000328c <_exit>:
    328c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    3290:	e3a00018 	mov	r0, #24
    3294:	e59f1004 	ldr	r1, [pc, #4]	; 32a0 <_exit+0x14>
    3298:	ef123456 	svc	0x00123456
    329c:	eafffffe 	b	329c <_exit+0x10>
    32a0:	00020026 	.word	0x00020026

000032a4 <_fstat>:
    32a4:	e92d4038 	push	{r3, r4, r5, lr}
    32a8:	e1a04001 	mov	r4, r1
    32ac:	eb0000c4 	bl	35c4 <__cs3_openslot>
    32b0:	e2505000 	subs	r5, r0, #0
    32b4:	0a000010 	beq	32fc <_fstat+0x58>
    32b8:	e1a00004 	mov	r0, r4
    32bc:	e3a01000 	mov	r1, #0
    32c0:	e3a0203c 	mov	r2, #60	; 0x3c
    32c4:	ebfffe30 	bl	2b8c <memset>
    32c8:	e3a03a02 	mov	r3, #8192	; 0x2000
    32cc:	e5843004 	str	r3, [r4, #4]
    32d0:	e3a03b01 	mov	r3, #1024	; 0x400
    32d4:	e584302c 	str	r3, [r4, #44]	; 0x2c
    32d8:	e3a0000c 	mov	r0, #12
    32dc:	e1a01005 	mov	r1, r5
    32e0:	ef123456 	svc	0x00123456
    32e4:	e3700001 	cmn	r0, #1
    32e8:	15840010 	strne	r0, [r4, #16]
    32ec:	13a00000 	movne	r0, #0
    32f0:	eb0000e1 	bl	367c <__cs3_checkerror>
    32f4:	e8bd4038 	pop	{r3, r4, r5, lr}
    32f8:	e12fff1e 	bx	lr
    32fc:	e3e00000 	mvn	r0, #0
    3300:	eafffffb 	b	32f4 <_fstat+0x50>

00003304 <_isatty>:
    3304:	e92d4008 	push	{r3, lr}
    3308:	eb0000ad 	bl	35c4 <__cs3_openslot>
    330c:	e2501000 	subs	r1, r0, #0
    3310:	01a00001 	moveq	r0, r1
    3314:	0a000002 	beq	3324 <_isatty+0x20>
    3318:	e3a00009 	mov	r0, #9
    331c:	ef123456 	svc	0x00123456
    3320:	eb0000d5 	bl	367c <__cs3_checkerror>
    3324:	e8bd4008 	pop	{r3, lr}
    3328:	e12fff1e 	bx	lr

0000332c <_lseek>:
    332c:	e92d4070 	push	{r4, r5, r6, lr}
    3330:	e24dd008 	sub	sp, sp, #8
    3334:	e1a04001 	mov	r4, r1
    3338:	e1a05002 	mov	r5, r2
    333c:	eb0000a0 	bl	35c4 <__cs3_openslot>
    3340:	e2506000 	subs	r6, r0, #0
    3344:	0a000022 	beq	33d4 <_lseek+0xa8>
    3348:	e3550001 	cmp	r5, #1
    334c:	0a00001d 	beq	33c8 <_lseek+0x9c>
    3350:	e3550002 	cmp	r5, #2
    3354:	0a000014 	beq	33ac <_lseek+0x80>
    3358:	e3550000 	cmp	r5, #0
    335c:	1a00000d 	bne	3398 <_lseek+0x6c>
    3360:	e5963000 	ldr	r3, [r6]
    3364:	e3540000 	cmp	r4, #0
    3368:	e88d0018 	stm	sp, {r3, r4}
    336c:	ba000009 	blt	3398 <_lseek+0x6c>
    3370:	e3a0000a 	mov	r0, #10
    3374:	e1a0100d 	mov	r1, sp
    3378:	ef123456 	svc	0x00123456
    337c:	e3700001 	cmn	r0, #1
    3380:	15864004 	strne	r4, [r6, #4]
    3384:	11a00004 	movne	r0, r4
    3388:	eb0000bb 	bl	367c <__cs3_checkerror>
    338c:	e28dd008 	add	sp, sp, #8
    3390:	e8bd4070 	pop	{r4, r5, r6, lr}
    3394:	e12fff1e 	bx	lr
    3398:	eb00012e 	bl	3858 <__errno>
    339c:	e3a03016 	mov	r3, #22
    33a0:	e5803000 	str	r3, [r0]
    33a4:	e3e00000 	mvn	r0, #0
    33a8:	eafffff7 	b	338c <_lseek+0x60>
    33ac:	e3a0000c 	mov	r0, #12
    33b0:	e1a01006 	mov	r1, r6
    33b4:	ef123456 	svc	0x00123456
    33b8:	e3700001 	cmn	r0, #1
    33bc:	10844000 	addne	r4, r4, r0
    33c0:	1affffe6 	bne	3360 <_lseek+0x34>
    33c4:	eaffffef 	b	3388 <_lseek+0x5c>
    33c8:	e5963004 	ldr	r3, [r6, #4]
    33cc:	e0844003 	add	r4, r4, r3
    33d0:	eaffffe2 	b	3360 <_lseek+0x34>
    33d4:	e3e00000 	mvn	r0, #0
    33d8:	eaffffeb 	b	338c <_lseek+0x60>

000033dc <_read>:
    33dc:	e92d4070 	push	{r4, r5, r6, lr}
    33e0:	e24dd010 	sub	sp, sp, #16
    33e4:	e1a06001 	mov	r6, r1
    33e8:	e1a05002 	mov	r5, r2
    33ec:	eb000074 	bl	35c4 <__cs3_openslot>
    33f0:	e2504000 	subs	r4, r0, #0
    33f4:	0a00000e 	beq	3434 <_read+0x58>
    33f8:	e5943000 	ldr	r3, [r4]
    33fc:	e98d0048 	stmib	sp, {r3, r6}
    3400:	e58d500c 	str	r5, [sp, #12]
    3404:	e3a00006 	mov	r0, #6
    3408:	e28d1004 	add	r1, sp, #4
    340c:	ef123456 	svc	0x00123456
    3410:	e3700001 	cmn	r0, #1
    3414:	15943004 	ldrne	r3, [r4, #4]
    3418:	10600005 	rsbne	r0, r0, r5
    341c:	10833000 	addne	r3, r3, r0
    3420:	15843004 	strne	r3, [r4, #4]
    3424:	eb000094 	bl	367c <__cs3_checkerror>
    3428:	e28dd010 	add	sp, sp, #16
    342c:	e8bd4070 	pop	{r4, r5, r6, lr}
    3430:	e12fff1e 	bx	lr
    3434:	e3e00000 	mvn	r0, #0
    3438:	eafffffa 	b	3428 <_read+0x4c>

0000343c <_write>:
    343c:	e92d4070 	push	{r4, r5, r6, lr}
    3440:	e24dd010 	sub	sp, sp, #16
    3444:	e1a06001 	mov	r6, r1
    3448:	e1a05002 	mov	r5, r2
    344c:	eb00005c 	bl	35c4 <__cs3_openslot>
    3450:	e2504000 	subs	r4, r0, #0
    3454:	0a00000e 	beq	3494 <_write+0x58>
    3458:	e5943000 	ldr	r3, [r4]
    345c:	e98d0048 	stmib	sp, {r3, r6}
    3460:	e58d500c 	str	r5, [sp, #12]
    3464:	e3a00005 	mov	r0, #5
    3468:	e28d1004 	add	r1, sp, #4
    346c:	ef123456 	svc	0x00123456
    3470:	e3700001 	cmn	r0, #1
    3474:	15943004 	ldrne	r3, [r4, #4]
    3478:	10600005 	rsbne	r0, r0, r5
    347c:	10833000 	addne	r3, r3, r0
    3480:	15843004 	strne	r3, [r4, #4]
    3484:	eb00007c 	bl	367c <__cs3_checkerror>
    3488:	e28dd010 	add	sp, sp, #16
    348c:	e8bd4070 	pop	{r4, r5, r6, lr}
    3490:	e12fff1e 	bx	lr
    3494:	e3e00000 	mvn	r0, #0
    3498:	eafffffa 	b	3488 <_write+0x4c>

0000349c <_sbrk>:
    349c:	e92d4008 	push	{r3, lr}
    34a0:	e59f305c 	ldr	r3, [pc, #92]	; 3504 <_sbrk+0x68>
    34a4:	e59f105c 	ldr	r1, [pc, #92]	; 3508 <_sbrk+0x6c>
    34a8:	e5932000 	ldr	r2, [r3]
    34ac:	e5913000 	ldr	r3, [r1]
    34b0:	e3520000 	cmp	r2, #0
    34b4:	e0830000 	add	r0, r3, r0
    34b8:	0a000002 	beq	34c8 <_sbrk+0x2c>
    34bc:	e0602002 	rsb	r2, r0, r2
    34c0:	e3520000 	cmp	r2, #0
    34c4:	ba000009 	blt	34f0 <_sbrk+0x54>
    34c8:	e04d2003 	sub	r2, sp, r3
    34cc:	e3520000 	cmp	r2, #0
    34d0:	ba000002 	blt	34e0 <_sbrk+0x44>
    34d4:	e04d2000 	sub	r2, sp, r0
    34d8:	e35200ff 	cmp	r2, #255	; 0xff
    34dc:	da000003 	ble	34f0 <_sbrk+0x54>
    34e0:	e5810000 	str	r0, [r1]
    34e4:	e1a00003 	mov	r0, r3
    34e8:	e8bd4008 	pop	{r3, lr}
    34ec:	e12fff1e 	bx	lr
    34f0:	eb0000d8 	bl	3858 <__errno>
    34f4:	e3a0300c 	mov	r3, #12
    34f8:	e5803000 	str	r3, [r0]
    34fc:	e3e03000 	mvn	r3, #0
    3500:	eafffff7 	b	34e4 <_sbrk+0x48>
    3504:	000041c0 	.word	0x000041c0
    3508:	000041c4 	.word	0x000041c4

0000350c <initialize_monitor_handles.part.0>:
    350c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    3510:	e59f50a4 	ldr	r5, [pc, #164]	; 35bc <initialize_monitor_handles.part.0+0xb0>
    3514:	e24dd014 	sub	sp, sp, #20
    3518:	e3a03000 	mov	r3, #0
    351c:	e3e02000 	mvn	r2, #0
    3520:	e7852003 	str	r2, [r5, r3]
    3524:	e2833008 	add	r3, r3, #8
    3528:	e35300a0 	cmp	r3, #160	; 0xa0
    352c:	e59f4088 	ldr	r4, [pc, #136]	; 35bc <initialize_monitor_handles.part.0+0xb0>
    3530:	1afffffa 	bne	3520 <initialize_monitor_handles.part.0+0x14>
    3534:	e59f7084 	ldr	r7, [pc, #132]	; 35c0 <initialize_monitor_handles.part.0+0xb4>
    3538:	e3a06003 	mov	r6, #3
    353c:	e3a03000 	mov	r3, #0
    3540:	e58d7004 	str	r7, [sp, #4]
    3544:	e58d600c 	str	r6, [sp, #12]
    3548:	e58d3008 	str	r3, [sp, #8]
    354c:	e3a00001 	mov	r0, #1
    3550:	e28d1004 	add	r1, sp, #4
    3554:	ef123456 	svc	0x00123456
    3558:	e3a03004 	mov	r3, #4
    355c:	e5840000 	str	r0, [r4]
    3560:	e58d7004 	str	r7, [sp, #4]
    3564:	e58d600c 	str	r6, [sp, #12]
    3568:	e58d3008 	str	r3, [sp, #8]
    356c:	e3a00001 	mov	r0, #1
    3570:	e08d1003 	add	r1, sp, r3
    3574:	ef123456 	svc	0x00123456
    3578:	e3a03008 	mov	r3, #8
    357c:	e5840008 	str	r0, [r4, #8]
    3580:	e58d7004 	str	r7, [sp, #4]
    3584:	e58d600c 	str	r6, [sp, #12]
    3588:	e58d3008 	str	r3, [sp, #8]
    358c:	e3a00001 	mov	r0, #1
    3590:	e28d1004 	add	r1, sp, #4
    3594:	ef123456 	svc	0x00123456
    3598:	e3700001 	cmn	r0, #1
    359c:	05943008 	ldreq	r3, [r4, #8]
    35a0:	e5840010 	str	r0, [r4, #16]
    35a4:	05843010 	streq	r3, [r4, #16]
    35a8:	e3a03001 	mov	r3, #1
    35ac:	e58530a0 	str	r3, [r5, #160]	; 0xa0
    35b0:	e28dd014 	add	sp, sp, #20
    35b4:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
    35b8:	e12fff1e 	bx	lr
    35bc:	0000421c 	.word	0x0000421c
    35c0:	00003920 	.word	0x00003920

000035c4 <__cs3_openslot>:
    35c4:	e92d4038 	push	{r3, r4, r5, lr}
    35c8:	e59f5044 	ldr	r5, [pc, #68]	; 3614 <__cs3_openslot+0x50>
    35cc:	e59530a0 	ldr	r3, [r5, #160]	; 0xa0
    35d0:	e3530000 	cmp	r3, #0
    35d4:	e1a04000 	mov	r4, r0
    35d8:	0bffffcb 	bleq	350c <initialize_monitor_handles.part.0>
    35dc:	e3540013 	cmp	r4, #19
    35e0:	8a000006 	bhi	3600 <__cs3_openslot+0x3c>
    35e4:	e7953184 	ldr	r3, [r5, r4, lsl #3]
    35e8:	e3730001 	cmn	r3, #1
    35ec:	159f0020 	ldrne	r0, [pc, #32]	; 3614 <__cs3_openslot+0x50>
    35f0:	10800184 	addne	r0, r0, r4, lsl #3
    35f4:	0a000001 	beq	3600 <__cs3_openslot+0x3c>
    35f8:	e8bd4038 	pop	{r3, r4, r5, lr}
    35fc:	e12fff1e 	bx	lr
    3600:	eb000094 	bl	3858 <__errno>
    3604:	e3a03009 	mov	r3, #9
    3608:	e5803000 	str	r3, [r0]
    360c:	e3a00000 	mov	r0, #0
    3610:	eafffff8 	b	35f8 <__cs3_openslot+0x34>
    3614:	0000421c 	.word	0x0000421c

00003618 <__cs3_newslot>:
    3618:	e92d4038 	push	{r3, r4, r5, lr}
    361c:	e59f4054 	ldr	r4, [pc, #84]	; 3678 <__cs3_newslot+0x60>
    3620:	e59430a0 	ldr	r3, [r4, #160]	; 0xa0
    3624:	e3530000 	cmp	r3, #0
    3628:	e1a05000 	mov	r5, r0
    362c:	0bffffb6 	bleq	350c <initialize_monitor_handles.part.0>
    3630:	e3a03000 	mov	r3, #0
    3634:	e7942183 	ldr	r2, [r4, r3, lsl #3]
    3638:	e3720001 	cmn	r2, #1
    363c:	e1a02183 	lsl	r2, r3, #3
    3640:	0a000008 	beq	3668 <__cs3_newslot+0x50>
    3644:	e2833001 	add	r3, r3, #1
    3648:	e3530014 	cmp	r3, #20
    364c:	1afffff8 	bne	3634 <__cs3_newslot+0x1c>
    3650:	eb000080 	bl	3858 <__errno>
    3654:	e3a03018 	mov	r3, #24
    3658:	e5803000 	str	r3, [r0]
    365c:	e3a00000 	mov	r0, #0
    3660:	e8bd4038 	pop	{r3, r4, r5, lr}
    3664:	e12fff1e 	bx	lr
    3668:	e59f0008 	ldr	r0, [pc, #8]	; 3678 <__cs3_newslot+0x60>
    366c:	e5853000 	str	r3, [r5]
    3670:	e0800002 	add	r0, r0, r2
    3674:	eafffff9 	b	3660 <__cs3_newslot+0x48>
    3678:	0000421c 	.word	0x0000421c

0000367c <__cs3_checkerror>:
    367c:	e3700001 	cmn	r0, #1
    3680:	e92d4038 	push	{r3, r4, r5, lr}
    3684:	e1a04000 	mov	r4, r0
    3688:	0a000002 	beq	3698 <__cs3_checkerror+0x1c>
    368c:	e1a00004 	mov	r0, r4
    3690:	e8bd4038 	pop	{r3, r4, r5, lr}
    3694:	e12fff1e 	bx	lr
    3698:	eb00006e 	bl	3858 <__errno>
    369c:	e3a01000 	mov	r1, #0
    36a0:	e1a05000 	mov	r5, r0
    36a4:	e3a00013 	mov	r0, #19
    36a8:	ef123456 	svc	0x00123456
    36ac:	e5850000 	str	r0, [r5]
    36b0:	eafffff5 	b	368c <__cs3_checkerror+0x10>

000036b4 <initialize_argv>:
    36b4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, r10, lr}
    36b8:	e3a00c01 	mov	r0, #256	; 0x100
    36bc:	e24dd008 	sub	sp, sp, #8
    36c0:	ebffff75 	bl	349c <_sbrk>
    36c4:	e3700001 	cmn	r0, #1
    36c8:	e1a07000 	mov	r7, r0
    36cc:	0a000039 	beq	37b8 <initialize_argv+0x104>
    36d0:	e3a05000 	mov	r5, #0
    36d4:	e3a03c01 	mov	r3, #256	; 0x100
    36d8:	e5c05000 	strb	r5, [r0]
    36dc:	e1a0100d 	mov	r1, sp
    36e0:	e3a00015 	mov	r0, #21
    36e4:	e58d7000 	str	r7, [sp]
    36e8:	e58d3004 	str	r3, [sp, #4]
    36ec:	ef123456 	svc	0x00123456
    36f0:	e59f8140 	ldr	r8, [pc, #320]	; 3838 <initialize_argv+0x184>
    36f4:	e1a00005 	mov	r0, r5
    36f8:	e3a09001 	mov	r9, #1
    36fc:	e1a0a005 	mov	r10, r5
    3700:	e588a0a4 	str	r10, [r8, #164]	; 0xa4
    3704:	e1a0c007 	mov	r12, r7
    3708:	e1a04007 	mov	r4, r7
    370c:	e3a06000 	mov	r6, #0
    3710:	e5d41000 	ldrb	r1, [r4]
    3714:	e3510000 	cmp	r1, #0
    3718:	0a00001d 	beq	3794 <initialize_argv+0xe0>
    371c:	e3560000 	cmp	r6, #0
    3720:	e2842001 	add	r2, r4, #1
    3724:	1a000006 	bne	3744 <initialize_argv+0x90>
    3728:	e3500000 	cmp	r0, #0
    372c:	159830a4 	ldrne	r3, [r8, #164]	; 0xa4
    3730:	1780c103 	strne	r12, [r0, r3, lsl #2]
    3734:	e59830a4 	ldr	r3, [r8, #164]	; 0xa4
    3738:	e2833001 	add	r3, r3, #1
    373c:	e58830a4 	str	r3, [r8, #164]	; 0xa4
    3740:	e3a06001 	mov	r6, #1
    3744:	e3510020 	cmp	r1, #32
    3748:	0a000022 	beq	37d8 <initialize_argv+0x124>
    374c:	e3510022 	cmp	r1, #34	; 0x22
    3750:	13510027 	cmpne	r1, #39	; 0x27
    3754:	1a00001a 	bne	37c4 <initialize_argv+0x110>
    3758:	e5d43001 	ldrb	r3, [r4, #1]
    375c:	e3530000 	cmp	r3, #0
    3760:	0a000032 	beq	3830 <initialize_argv+0x17c>
    3764:	e1510003 	cmp	r1, r3
    3768:	0a00001f 	beq	37ec <initialize_argv+0x138>
    376c:	e2842002 	add	r2, r4, #2
    3770:	ea000001 	b	377c <initialize_argv+0xc8>
    3774:	e1510003 	cmp	r1, r3
    3778:	0a00001c 	beq	37f0 <initialize_argv+0x13c>
    377c:	e3500000 	cmp	r0, #0
    3780:	14cc3001 	strbne	r3, [r12], #1
    3784:	e1a04002 	mov	r4, r2
    3788:	e4d23001 	ldrb	r3, [r2], #1
    378c:	e3530000 	cmp	r3, #0
    3790:	1afffff7 	bne	3774 <initialize_argv+0xc0>
    3794:	e3590001 	cmp	r9, #1
    3798:	0a000016 	beq	37f8 <initialize_argv+0x144>
    379c:	e3590002 	cmp	r9, #2
    37a0:	1a000020 	bne	3828 <initialize_argv+0x174>
    37a4:	e3a03000 	mov	r3, #0
    37a8:	e5cc3000 	strb	r3, [r12]
    37ac:	e59820a4 	ldr	r2, [r8, #164]	; 0xa4
    37b0:	e7803102 	str	r3, [r0, r2, lsl #2]
    37b4:	e58800a8 	str	r0, [r8, #168]	; 0xa8
    37b8:	e28dd008 	add	sp, sp, #8
    37bc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, r10, lr}
    37c0:	e12fff1e 	bx	lr
    37c4:	e3500000 	cmp	r0, #0
    37c8:	01a04002 	moveq	r4, r2
    37cc:	14cc1001 	strbne	r1, [r12], #1
    37d0:	11a04002 	movne	r4, r2
    37d4:	eaffffcd 	b	3710 <initialize_argv+0x5c>
    37d8:	e3500000 	cmp	r0, #0
    37dc:	14cca001 	strbne	r10, [r12], #1
    37e0:	e1a04002 	mov	r4, r2
    37e4:	e3a06000 	mov	r6, #0
    37e8:	eaffffc8 	b	3710 <initialize_argv+0x5c>
    37ec:	e1a04002 	mov	r4, r2
    37f0:	e2844001 	add	r4, r4, #1
    37f4:	eaffffc5 	b	3710 <initialize_argv+0x5c>
    37f8:	e0670004 	rsb	r0, r7, r4
    37fc:	e2800010 	add	r0, r0, #16
    3800:	e3c0000f 	bic	r0, r0, #15
    3804:	e2400c01 	sub	r0, r0, #256	; 0x100
    3808:	ebffff23 	bl	349c <_sbrk>
    380c:	e59800a4 	ldr	r0, [r8, #164]	; 0xa4
    3810:	e2800004 	add	r0, r0, #4
    3814:	e3c00003 	bic	r0, r0, #3
    3818:	e1a00100 	lsl	r0, r0, #2
    381c:	ebffff1e 	bl	349c <_sbrk>
    3820:	e3700001 	cmn	r0, #1
    3824:	0affffe3 	beq	37b8 <initialize_argv+0x104>
    3828:	e2899001 	add	r9, r9, #1
    382c:	eaffffb3 	b	3700 <initialize_argv+0x4c>
    3830:	e1a04002 	mov	r4, r2
    3834:	eaffffd6 	b	3794 <initialize_argv+0xe0>
    3838:	0000421c 	.word	0x0000421c

0000383c <__cs3_isr_interrupt>:
    383c:	eafffffe 	b	383c <__cs3_isr_interrupt>

00003840 <__cs3_isr_undef>:
    3840:	eafffffe 	b	3840 <__cs3_isr_undef>

00003844 <__cs3_isr_swi>:
    3844:	eafffffe 	b	3844 <__cs3_isr_swi>

00003848 <__cs3_isr_pabort>:
    3848:	eafffffe 	b	3848 <__cs3_isr_pabort>

0000384c <__cs3_isr_dabort>:
    384c:	eafffffe 	b	384c <__cs3_isr_dabort>

00003850 <__cs3_isr_irq>:
    3850:	eafffffe 	b	3850 <__cs3_isr_irq>

00003854 <__cs3_isr_fiq>:
    3854:	eafffffe 	b	3854 <__cs3_isr_fiq>

00003858 <__errno>:
    3858:	e59f3004 	ldr	r3, [pc, #4]	; 3864 <__errno+0xc>
    385c:	e5930000 	ldr	r0, [r3]
    3860:	e12fff1e 	bx	lr
    3864:	00003980 	.word	0x00003980

00003868 <__libc_init_array>:
    3868:	e92d4070 	push	{r4, r5, r6, lr}
    386c:	e59f506c 	ldr	r5, [pc, #108]	; 38e0 <__libc_init_array+0x78>
    3870:	e59f606c 	ldr	r6, [pc, #108]	; 38e4 <__libc_init_array+0x7c>
    3874:	e0656006 	rsb	r6, r5, r6
    3878:	e1b06146 	asrs	r6, r6, #2
    387c:	12455004 	subne	r5, r5, #4
    3880:	13a04000 	movne	r4, #0
    3884:	0a000005 	beq	38a0 <__libc_init_array+0x38>
    3888:	e5b53004 	ldr	r3, [r5, #4]!
    388c:	e2844001 	add	r4, r4, #1
    3890:	e1a0e00f 	mov	lr, pc
    3894:	e12fff13 	bx	r3
    3898:	e1560004 	cmp	r6, r4
    389c:	1afffff9 	bne	3888 <__libc_init_array+0x20>
    38a0:	e59f5040 	ldr	r5, [pc, #64]	; 38e8 <__libc_init_array+0x80>
    38a4:	e59f6040 	ldr	r6, [pc, #64]	; 38ec <__libc_init_array+0x84>
    38a8:	e0656006 	rsb	r6, r5, r6
    38ac:	eb00001c 	bl	3924 <_init>
    38b0:	e1b06146 	asrs	r6, r6, #2
    38b4:	12455004 	subne	r5, r5, #4
    38b8:	13a04000 	movne	r4, #0
    38bc:	0a000005 	beq	38d8 <__libc_init_array+0x70>
    38c0:	e5b53004 	ldr	r3, [r5, #4]!
    38c4:	e2844001 	add	r4, r4, #1
    38c8:	e1a0e00f 	mov	lr, pc
    38cc:	e12fff13 	bx	r3
    38d0:	e1560004 	cmp	r6, r4
    38d4:	1afffff9 	bne	38c0 <__libc_init_array+0x58>
    38d8:	e8bd4070 	pop	{r4, r5, r6, lr}
    38dc:	e12fff1e 	bx	lr
    38e0:	0000393c 	.word	0x0000393c
    38e4:	0000393c 	.word	0x0000393c
    38e8:	0000393c 	.word	0x0000393c
    38ec:	00003948 	.word	0x00003948

Disassembly of section .rodata:

000038f4 <_global_impure_ptr-0x20>:
    38f4:	72617453 	.word	0x72617453
    38f8:	676e6974 	.word	0x676e6974
    38fc:	002e2e2e 	.word	0x002e2e2e
    3900:	74697257 	.word	0x74697257
    3904:	2e676e69 	.word	0x2e676e69
    3908:	00002e2e 	.word	0x00002e2e
    390c:	656e6f44 	.word	0x656e6f44
    3910:	002e2e2e 	.word	0x002e2e2e

00003914 <_global_impure_ptr>:
    3914:	00003988 00000043 0000000a 0074743a     .9..C.......:tt.

00003924 <_init>:
    3924:	e1a0c00d 	mov	r12, sp
    3928:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    392c:	e24cb004 	sub	r11, r12, #4
    3930:	e24bd028 	sub	sp, r11, #40	; 0x28
    3934:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    3938:	e12fff1e 	bx	lr

0000393c <__init_array_start>:
    393c:	000008ec 	.word	0x000008ec

00003940 <__frame_dummy_init_array_entry>:
    3940:	00000208 000036b4                       .....6..

00003948 <__libc_fini>:
    3948:	e1a0c00d 	mov	r12, sp
    394c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    3950:	e24cb004 	sub	r11, r12, #4
    3954:	e24bd028 	sub	sp, r11, #40	; 0x28
    3958:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    395c:	e12fff1e 	bx	lr

00003960 <__fini_array_start>:
    3960:	000001c4 	.word	0x000001c4

00003964 <__cs3_regions>:
	...
    3970:	000041c8 	.word	0x000041c8
    3974:	00000100 	.word	0x00000100
